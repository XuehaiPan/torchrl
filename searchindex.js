Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.replay_buffers.rb_prototype.ReplayBuffer", "reference/generated/torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage", "reference/generated/torchrl.data.replay_buffers.storages.Storage", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.writers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.Actor", "reference/generated/torchrl.modules.ActorCriticOperator", "reference/generated/torchrl.modules.ActorCriticWrapper", "reference/generated/torchrl.modules.ActorValueOperator", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueActor", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.ProbabilisticActor", "reference/generated/torchrl.modules.QValueActor", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.SafeModule", "reference/generated/torchrl.modules.SafeProbabilisticModule", "reference/generated/torchrl.modules.SafeProbabilisticSequential", "reference/generated/torchrl.modules.SafeSequential", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.ValueOperator", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TDEstimate", "reference/generated/torchrl.objectives.value.TDLambdaEstimate", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBuffer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_a2c_loss", "reference/generated/torchrl.trainers.helpers.make_a2c_model", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss", "reference/generated/torchrl.trainers.helpers.make_dqn_actor", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_model", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_sac_loss", "reference/generated/torchrl.trainers.helpers.make_sac_model", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/index", "tutorials/multi_task", "tutorials/sg_execution_times", "tutorials/tensordict_module", "tutorials/tensordict_tutorial", "tutorials/torch_envs", "tutorials/torchrl_demo"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.Storage.rst", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.writers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.Actor.rst", "reference/generated/torchrl.modules.ActorCriticOperator.rst", "reference/generated/torchrl.modules.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.ActorValueOperator.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.ProbabilisticActor.rst", "reference/generated/torchrl.modules.QValueActor.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.SafeModule.rst", "reference/generated/torchrl.modules.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.SafeProbabilisticSequential.rst", "reference/generated/torchrl.modules.SafeSequential.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.ValueOperator.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible.rst", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TDEstimate.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimate.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBuffer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_loss.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_model.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_actor.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_model.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_sac_loss.rst", "reference/generated/torchrl.trainers.helpers.make_sac_model.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/sg_execution_times.rst", "tutorials/tensordict_module.rst", "tutorials/tensordict_tutorial.rst", "tutorials/torch_envs.rst", "tutorials/torchrl_demo.rst"], "titles": ["Welcome to the TorchRL Documentation!", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "About MuJoCo", "Pro-tips", "Useful resources", "Versioning Issues", "implement_for", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "MultOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PrioritizedReplayBuffer", "ReplayBuffer", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorSpec", "UnboundedContinuousTensorSpec", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "TensorDictReplayBuffer", "PrioritizedSampler", "RandomSampler", "Sampler", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "Storage", "RoundRobinWriter", "Writer", "EnvBase", "GymLikeEnv", "ModelBasedEnvBase", "ParallelEnv", "SerialEnv", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DoubleToFloat", "FiniteTensorDictCheck", "FlattenObservation", "GrayScale", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "Resize", "RewardClipping", "RewardScaling", "RewardSum", "TensorDictPrimer", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "get_available_libraries", "set_exploration_mode", "step_mdp", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DistributionalQValueActor", "DreamerActor", "DuelingCnnDQNet", "LSTMNet", "MLP", "MPCPlannerBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "ProbabilisticActor", "QValueActor", "RSSMPosterior", "RSSMPrior", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticSequential", "SafeSequential", "TanhDelta", "TanhNormal", "TruncatedNormal", "ValueOperator", "reset_noise", "DistributionalQValueHook", "QValueHook", "ensure_tensordict_compatible", "is_tensordict_compatible", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DistributionalDQNLoss", "HardUpdate", "KLPENPPOLoss", "PPOLoss", "REDQLoss", "SACLoss", "SoftUpdate", "distance_loss", "hold_out_net", "hold_out_params", "next_state_value", "GAE", "TDEstimate", "TDLambdaEstimate", "generalized_advantage_estimate", "td_advantage_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBuffer", "RewardNormalizer", "SelectKeys", "Trainer", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_a2c_loss", "make_a2c_model", "make_collector_offpolicy", "make_collector_onpolicy", "make_ddpg_actor", "make_ddpg_loss", "make_dqn_actor", "make_dqn_loss", "make_ppo_loss", "make_ppo_model", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_sac_loss", "make_sac_model", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Demos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Coding DDPG using TorchRL", "Coding a pixel-based DQN using TorchRL", "README Demos", "Task-specific policy in multi-task environments", "Computation times", "TensorDictModule", "TensorDict", "TorchRL envs", "Introduction to TorchRL"], "terms": {"The": [0, 1, 2, 3, 6, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 27, 28, 29, 30, 31, 38, 41, 42, 44, 45, 58, 64, 67, 70, 72, 75, 78, 86, 87, 90, 92, 93, 94, 95, 101, 103, 105, 109, 111, 112, 113, 114, 116, 120, 126, 130, 131, 132, 135, 138, 143, 144, 145, 146, 154, 158, 183, 185, 186, 193, 195, 200, 201, 202, 203], "tensordict": [0, 1, 3, 11, 12, 13, 14, 15, 18, 19, 21, 25, 26, 29, 31, 35, 36, 41, 42, 43, 44, 45, 52, 55, 56, 58, 59, 60, 63, 64, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 98, 101, 103, 109, 110, 113, 114, 115, 116, 120, 122, 123, 124, 125, 129, 130, 131, 132, 133, 135, 136, 137, 138, 143, 144, 145, 146, 154, 158, 162, 163, 168, 171, 173, 176, 178, 181, 189, 193, 195, 196, 197, 198, 199, 200, 202], "class": [0, 1, 2, 3, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 185, 186, 187, 193, 195, 196, 200, 201, 202], "ha": [0, 6, 9, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 72, 75, 114, 135, 195, 196, 198, 200, 201, 202, 203], "been": [0, 6, 11, 12, 14, 41, 42, 44, 45, 74, 196, 198, 202], "move": [0, 21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 79, 102, 113, 161, 196, 202, 203], "out": [0, 3, 21, 41, 42, 44, 45, 104, 105, 113, 114, 141, 142, 193, 200, 201, 202, 203], "dedic": [0, 87, 88, 89, 195, 198], "librari": [0, 6, 8, 9, 83, 189, 190, 194, 195, 202], "take": [0, 1, 3, 15, 41, 42, 44, 45, 58, 67, 74, 76, 77, 78, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 106, 107, 111, 112, 126, 128, 147, 148, 149, 150, 151, 152, 153, 154, 164, 193, 195, 196, 200, 202], "look": [0, 4, 6, 21, 41, 42, 44, 45, 67, 114, 115, 116, 196, 200, 202, 203], "find": [0, 200], "sourc": [0, 1, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 195, 196, 197, 198, 200, 201, 202, 203], "code": [0, 3, 6, 67, 116, 197, 198, 199, 200, 202, 203], "github": [0, 2, 5, 6, 9, 203], "i": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 54, 55, 56, 57, 58, 61, 63, 64, 67, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 84, 85, 86, 87, 90, 91, 92, 93, 94, 96, 99, 100, 101, 102, 103, 104, 105, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 143, 144, 145, 146, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 163, 165, 166, 168, 171, 176, 178, 181, 183, 187, 190, 193, 195, 196, 198, 200, 202, 203], "an": [0, 1, 2, 3, 4, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 57, 60, 63, 64, 67, 68, 73, 74, 75, 79, 81, 87, 88, 89, 91, 92, 93, 94, 95, 101, 102, 103, 104, 107, 113, 114, 115, 124, 125, 128, 129, 130, 133, 135, 136, 137, 138, 144, 145, 146, 158, 159, 160, 163, 166, 171, 184, 185, 186, 187, 190, 195, 196, 198, 200, 201, 202, 203], "open": [0, 4, 6, 10, 203], "reinforc": [0, 2, 3, 8, 55, 92, 93, 94, 95, 122, 129, 133, 134, 138, 139, 171, 196, 203], "learn": [0, 2, 3, 6, 8, 21, 55, 92, 93, 94, 95, 105, 122, 129, 133, 134, 137, 138, 139, 171, 195, 196, 198, 202, 203], "rl": [0, 1, 2, 7, 9, 11, 12, 13, 14, 43, 86, 105, 109, 120, 129, 136, 154, 190, 193, 195, 200, 201, 202], "pytorch": [0, 1, 2, 73, 163, 193, 195, 201, 202, 203], "It": [0, 3, 6, 21, 25, 41, 42, 43, 44, 45, 50, 64, 75, 92, 94, 99, 111, 112, 114, 129, 130, 133, 135, 136, 137, 138, 143, 144, 159, 178, 190, 195, 200, 201, 202, 203], "provid": [0, 2, 3, 8, 13, 21, 23, 24, 25, 30, 41, 42, 43, 44, 45, 56, 63, 64, 67, 71, 72, 75, 78, 79, 86, 91, 101, 102, 103, 109, 122, 143, 144, 145, 146, 154, 160, 166, 168, 176, 178, 181, 183, 190, 193, 195, 196, 198, 200, 202, 203], "python": [0, 3, 5, 6, 9, 193, 195, 196, 197, 198, 200, 202, 203], "first": [0, 1, 3, 6, 10, 11, 12, 13, 14, 42, 56, 61, 64, 67, 73, 75, 102, 104, 107, 113, 114, 162, 195, 196, 198, 200, 201, 202, 203], "low": [0, 195, 196, 203], "high": [0, 8, 144, 147, 148, 151, 195, 196, 203], "level": [0, 18, 135, 195, 196, 203], "abstract": [0, 17, 18, 19, 27, 28, 40, 41, 65, 103, 193, 201, 203], "ar": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 21, 22, 29, 30, 31, 35, 36, 37, 38, 41, 42, 43, 44, 45, 58, 59, 60, 67, 71, 72, 74, 75, 78, 79, 85, 90, 95, 96, 101, 103, 105, 108, 112, 113, 114, 115, 116, 128, 129, 130, 133, 135, 136, 137, 138, 140, 143, 144, 145, 146, 183, 187, 188, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203], "intend": [0, 6, 11, 12, 13, 14, 203], "effici": [0, 2, 105, 195, 196, 198, 201, 203], "modular": [0, 116, 203], "properli": [0, 201, 203], "test": [0, 3, 4, 81, 101, 159, 183, 200, 203], "aim": [0, 3, 6, 67, 78, 102, 165, 190, 195, 196, 203], "support": [0, 3, 18, 38, 74, 83, 98, 113, 116, 122, 133, 144, 145, 146, 193, 200, 201, 203], "research": [0, 6, 8, 203], "most": [0, 3, 6, 21, 195, 196, 200, 203], "written": [0, 3, 25, 35, 41, 42, 44, 45, 71, 113, 114, 129, 130, 135, 136, 143, 193, 195, 198, 200, 203], "highli": [0, 2, 202, 203], "wai": [0, 136, 196, 198, 202, 203], "can": [0, 1, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 18, 19, 21, 25, 27, 29, 41, 42, 44, 45, 55, 58, 63, 64, 67, 71, 72, 74, 75, 78, 79, 90, 103, 105, 113, 114, 115, 116, 118, 119, 125, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 143, 144, 145, 146, 159, 168, 176, 178, 181, 185, 186, 187, 190, 193, 195, 196, 198, 200, 202, 203], "easili": [0, 3, 6, 44, 45, 168, 176, 178, 181, 196, 201, 202, 203], "swap": [0, 3, 203], "compon": [0, 3, 35, 36, 37, 38, 122, 123, 129, 130, 133, 135, 136, 137, 138, 158, 163, 198, 200, 203], "transform": [0, 21, 29, 30, 31, 42, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 92, 99, 122, 123, 126, 128, 168, 171, 173, 176, 178, 181, 187, 189, 196], "them": [0, 6, 29, 30, 31, 41, 42, 44, 45, 58, 67, 74, 76, 77, 78, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 106, 107, 111, 112, 126, 135, 195, 196, 198, 200, 201, 202, 203], "write": [0, 21, 42, 66, 113, 114, 116, 131, 132, 137, 138, 143, 193, 195, 196, 198, 200, 201, 203], "new": [0, 3, 11, 12, 13, 14, 21, 23, 25, 32, 41, 42, 44, 45, 71, 74, 79, 85, 113, 114, 129, 130, 132, 133, 135, 136, 137, 138, 195, 196, 200, 201, 202, 203], "ones": [0, 18, 21, 41, 42, 44, 45, 56, 58, 59, 64, 67, 72, 75, 78, 113, 195, 201, 202, 203], "littl": [0, 3, 202, 203], "effort": [0, 3, 203], "thi": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 18, 21, 22, 25, 31, 35, 36, 37, 38, 41, 42, 43, 44, 45, 50, 55, 56, 58, 60, 64, 67, 71, 72, 74, 75, 76, 77, 78, 79, 81, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 118, 119, 122, 123, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 154, 156, 159, 163, 164, 165, 166, 168, 176, 178, 181, 183, 187, 190, 193, 195, 196, 198, 200, 202, 203], "repo": [0, 5, 190, 203], "attempt": [0, 203], "align": [0, 203], "exist": [0, 21, 41, 42, 44, 45, 56, 75, 166, 187, 200, 202, 203], "ecosystem": [0, 203], "dataset": [0, 23, 24, 25, 30, 79, 160, 201, 202, 203], "pillar": [0, 203], "environ": [0, 1, 3, 7, 10, 11, 12, 13, 14, 21, 22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 56, 59, 63, 64, 67, 74, 75, 79, 81, 90, 101, 103, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 159, 165, 166, 168, 169, 170, 171, 173, 176, 178, 181, 183, 184, 185, 186, 187, 190, 197, 199], "model": [0, 1, 3, 8, 11, 12, 13, 14, 21, 41, 42, 43, 44, 45, 67, 78, 80, 87, 88, 89, 91, 102, 103, 113, 129, 136, 137, 138, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 189, 190, 193, 200, 202], "data": [0, 3, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 64, 81, 86, 87, 88, 89, 90, 98, 101, 109, 110, 113, 114, 116, 120, 122, 123, 131, 137, 138, 144, 145, 146, 154, 160, 163, 164, 169, 183, 185, 186, 187, 189, 193, 196, 200, 201, 202], "util": [0, 11, 12, 13, 14, 15, 21, 41, 42, 44, 45, 67, 78, 81, 82, 83, 84, 85, 91, 126, 127, 128, 183, 189, 194, 195, 196, 200, 202, 203], "e": [0, 1, 3, 9, 10, 11, 12, 13, 14, 18, 21, 22, 35, 36, 41, 42, 44, 45, 56, 58, 67, 71, 72, 74, 75, 78, 113, 114, 118, 119, 123, 143, 144, 145, 146, 154, 165, 186, 195, 196, 201, 202, 203], "g": [0, 1, 3, 9, 10, 21, 22, 41, 42, 44, 45, 56, 58, 67, 71, 72, 74, 75, 78, 113, 114, 118, 119, 143, 149, 150, 152, 153, 186, 195, 196, 202, 203], "collector": [0, 3, 11, 12, 13, 14, 15, 163, 164, 169, 170, 183, 185, 186, 189, 193, 196, 202, 203], "contain": [0, 3, 6, 11, 12, 13, 14, 18, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 38, 39, 40, 41, 42, 43, 44, 45, 58, 67, 72, 75, 78, 79, 85, 90, 91, 102, 113, 129, 130, 131, 132, 133, 135, 136, 137, 138, 143, 144, 145, 146, 154, 160, 165, 168, 171, 173, 176, 178, 181, 183, 184, 185, 186, 187, 193, 196, 200, 202, 203], "etc": [0, 3, 6, 21, 28, 41, 42, 44, 45, 75, 102, 195, 201, 202, 203], "have": [0, 3, 5, 6, 11, 12, 14, 18, 21, 38, 41, 42, 44, 45, 55, 63, 74, 75, 79, 91, 101, 102, 115, 116, 130, 135, 136, 140, 154, 163, 193, 195, 196, 198, 200, 201, 202, 203], "few": [0, 2, 7, 154, 196, 202, 203], "depend": [0, 3, 6, 120, 136, 202, 203], "possibl": [0, 3, 19, 21, 22, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113, 159, 163, 195, 200, 201, 202, 203], "standard": [0, 64, 70, 79, 90, 99, 104, 105, 144, 145, 146, 195, 196, 203], "numpi": [0, 13, 16, 17, 18, 19, 20, 22, 27, 28, 73, 163, 195, 196, 202, 203], "common": [0, 3, 42, 44, 45, 87, 88, 89, 124, 125, 183, 190, 193, 195, 198, 200, 201, 202, 203], "openai": [0, 6, 48, 49, 202, 203], "gym": [0, 3, 10, 11, 12, 13, 42, 48, 49, 64, 72, 79, 168, 171, 173, 176, 178, 181, 183, 190, 195, 196, 203], "onli": [0, 1, 4, 6, 11, 12, 14, 18, 21, 25, 41, 42, 44, 45, 56, 58, 67, 72, 75, 78, 79, 101, 113, 114, 115, 116, 166, 193, 195, 196, 198, 200, 202, 203], "option": [0, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 35, 36, 41, 42, 43, 44, 45, 46, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 82, 85, 86, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 131, 132, 137, 138, 143, 144, 145, 146, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 163, 166, 168, 169, 170, 171, 172, 174, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 195, 196, 203], "On": [0, 6, 196, 201], "end": [0, 21, 29, 30, 31, 41, 42, 44, 45, 75, 91, 103, 147, 148, 149, 150, 151, 152, 153, 195, 198, 202, 203], "come": [0, 1, 44, 45, 86, 87, 88, 89, 109, 120, 195, 200, 202, 203], "set": [0, 1, 2, 3, 6, 8, 11, 12, 13, 14, 21, 22, 38, 41, 42, 43, 44, 45, 56, 58, 67, 72, 75, 78, 84, 103, 113, 154, 159, 170, 187, 190, 194, 195, 196, 198, 202, 203], "re": [0, 3, 7, 21, 41, 42, 44, 45, 114, 193, 196, 198, 202, 203], "usabl": [0, 193, 203], "function": [0, 3, 10, 15, 21, 35, 36, 37, 38, 41, 42, 44, 45, 58, 67, 74, 75, 76, 77, 78, 79, 81, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 106, 107, 108, 111, 112, 113, 114, 116, 119, 120, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 168, 171, 173, 176, 178, 181, 183, 189, 195, 196, 198, 200, 201, 202], "cost": [0, 2, 19, 196], "return": [0, 3, 6, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 39, 40, 41, 42, 43, 44, 45, 46, 54, 55, 56, 57, 58, 59, 61, 62, 64, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 82, 83, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 101, 102, 103, 108, 110, 111, 112, 113, 114, 117, 118, 119, 120, 122, 123, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 143, 144, 145, 146, 149, 150, 152, 153, 160, 163, 165, 168, 169, 171, 173, 176, 178, 181, 183, 184, 185, 186, 187, 189, 193, 195, 196, 198, 200, 201, 202, 203], "process": [0, 1, 3, 11, 12, 14, 44, 45, 79, 193, 195, 196, 202, 203], "good": [0, 1, 8, 202, 203], "runtim": [0, 3, 21, 41, 42, 44, 45], "perform": [0, 3, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 58, 63, 67, 74, 75, 76, 77, 78, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 111, 112, 126, 136, 159, 163, 195, 196, 198, 201, 202], "introduct": [0, 197, 199, 202], "env": [0, 1, 5, 6, 11, 12, 13, 21, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 90, 103, 113, 166, 168, 169, 170, 171, 173, 176, 178, 181, 183, 185, 186, 187, 189, 195, 196, 197, 198, 199], "modul": [0, 3, 10, 21, 41, 42, 43, 44, 45, 58, 67, 72, 74, 75, 76, 77, 78, 79, 80, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 137, 139, 141, 144, 145, 146, 163, 167, 172, 174, 175, 177, 180, 183, 188, 189, 193, 195, 196, 197, 198, 200], "us": [0, 1, 2, 3, 6, 9, 10, 11, 12, 13, 14, 18, 19, 21, 23, 24, 25, 29, 30, 31, 32, 41, 42, 43, 44, 45, 46, 56, 57, 64, 67, 72, 73, 74, 75, 78, 79, 81, 84, 85, 90, 91, 92, 93, 99, 102, 103, 105, 113, 114, 118, 119, 122, 125, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 143, 144, 145, 146, 147, 148, 151, 159, 160, 163, 164, 166, 169, 170, 171, 179, 183, 187, 188, 190, 193, 194, 197, 198, 199, 201, 202], "object": [0, 3, 11, 12, 13, 14, 18, 21, 35, 36, 37, 38, 41, 42, 44, 45, 67, 74, 75, 79, 86, 87, 109, 113, 114, 115, 124, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 166, 169, 170, 182, 183, 187, 189, 193, 196, 200, 202], "state": [0, 1, 3, 11, 12, 13, 14, 21, 41, 42, 43, 44, 45, 52, 55, 56, 58, 67, 72, 74, 75, 77, 78, 79, 80, 87, 90, 99, 101, 102, 106, 111, 112, 113, 137, 143, 144, 145, 146, 187, 195, 196, 202], "contribut": 0, "instal": [0, 9, 163, 190, 202], "improv": [0, 2, 129], "structur": [0, 3, 6, 144, 145, 146], "dictionari": [0, 11, 12, 13, 14, 18, 21, 41, 42, 44, 45, 75, 114, 185, 186, 187, 193, 195, 202], "featur": [0, 3, 11, 12, 13, 14, 22, 41, 42, 44, 45, 55, 91, 99, 100, 102, 104, 105, 114, 144, 145, 146, 187, 195, 196, 200, 202, 203], "tensor": [0, 3, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 39, 40, 41, 42, 43, 44, 45, 52, 55, 56, 58, 61, 64, 67, 70, 72, 73, 74, 75, 78, 79, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 108, 109, 110, 113, 114, 116, 117, 118, 119, 120, 122, 123, 126, 127, 131, 132, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 160, 168, 171, 173, 176, 178, 181, 193, 195, 196, 198, 200, 202, 203], "tensordictmodul": [0, 11, 12, 13, 14, 113, 115, 195, 196, 197, 198, 199], "exampl": [0, 3, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 56, 58, 59, 64, 67, 72, 73, 75, 78, 79, 85, 86, 87, 88, 89, 90, 91, 98, 101, 102, 109, 110, 113, 116, 120, 122, 123, 125, 144, 145, 146, 154, 155, 156, 157, 158, 161, 162, 164, 168, 171, 173, 176, 178, 181, 183, 188, 193, 195, 196, 197, 198, 201, 202, 203], "do": [0, 3, 6, 11, 12, 13, 14, 42, 63, 85, 88, 104, 193, 195, 196, 198, 202, 203], "": [0, 1, 3, 5, 6, 21, 23, 24, 25, 30, 41, 42, 44, 45, 58, 67, 72, 75, 78, 79, 81, 91, 105, 113, 114, 138, 144, 145, 146, 160, 178, 181, 195, 196, 198, 201, 202, 203], "don": [0, 5, 6, 16, 17, 18, 19, 20, 22, 27, 28, 41, 195, 201, 202, 203], "t": [0, 3, 5, 6, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 32, 41, 42, 44, 45, 67, 78, 79, 85, 113, 125, 131, 144, 145, 146, 163, 164, 187, 190, 195, 196, 198, 202, 203], "showcas": 0, "implement": [0, 2, 3, 8, 10, 21, 38, 41, 42, 44, 45, 79, 117, 118, 119, 129, 136, 138, 168, 176, 178, 181, 193, 195, 196, 203], "deepmind": [0, 6, 8, 46, 47], "control": [0, 1, 3, 44, 45, 46, 47, 92, 93, 94, 95, 103, 112, 113, 114, 115, 130, 135, 136, 139, 144, 147, 148, 151, 171, 193, 195], "devic": [0, 1, 2, 3, 6, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 27, 28, 35, 36, 41, 42, 43, 44, 45, 52, 53, 58, 66, 67, 72, 73, 75, 78, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 100, 101, 102, 104, 105, 109, 110, 113, 116, 120, 122, 123, 131, 164, 168, 171, 173, 176, 178, 179, 181, 195, 196, 198, 200, 203], "run": [0, 1, 3, 4, 5, 6, 7, 9, 11, 12, 14, 21, 41, 42, 43, 44, 45, 46, 47, 58, 63, 64, 67, 74, 75, 76, 77, 78, 79, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 106, 107, 111, 112, 115, 116, 126, 159, 185, 186, 187, 190, 193, 195, 196, 198, 200, 201, 203], "parallel": [0, 1, 3, 7, 11, 12, 14, 81, 129, 184, 185, 186, 187, 196], "vecnorm": [0, 187, 189], "task": [0, 8, 44, 45, 46, 67, 78, 195, 196, 197, 199, 202, 203], "specif": [0, 4, 25, 26, 31, 42, 163, 189, 193, 197, 199], "polici": [0, 1, 2, 3, 11, 12, 13, 14, 41, 42, 43, 44, 45, 84, 85, 87, 88, 89, 105, 113, 114, 122, 123, 129, 130, 131, 135, 136, 137, 138, 159, 164, 168, 169, 170, 171, 173, 176, 183, 185, 186, 193, 196, 197, 199, 200, 202, 203], "multi": [0, 3, 6, 8, 21, 41, 42, 44, 45, 101, 102, 195, 196, 197, 199, 203], "execut": [0, 1, 3, 6, 13, 29, 30, 31, 41, 42, 43, 44, 45, 115, 116, 166, 187, 193, 196, 199, 200, 202], "divers": [0, 44, 45], "rollout": [0, 1, 3, 11, 12, 13, 14, 41, 42, 43, 44, 45, 81, 90, 129, 166, 195, 196, 203], "ddpg": [0, 92, 93, 94, 95, 131, 134, 139, 171, 172, 189, 197, 199], "normal": [0, 29, 64, 79, 91, 102, 114, 118, 119, 159, 161, 187, 193, 196, 202], "observ": [0, 2, 3, 11, 12, 13, 27, 41, 42, 43, 44, 45, 46, 47, 52, 55, 56, 57, 58, 59, 61, 62, 64, 65, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 85, 86, 87, 88, 89, 92, 93, 94, 95, 98, 101, 106, 107, 109, 110, 111, 120, 122, 123, 144, 145, 146, 168, 171, 173, 176, 178, 181, 183, 193, 196, 198, 200, 201, 202, 203], "build": [0, 3, 6, 15, 18, 21, 41, 42, 44, 45, 79, 90, 114, 163, 167, 172, 174, 175, 177, 179, 180, 182, 193, 200, 201, 202, 203], "evalu": [0, 21, 41, 42, 44, 45, 75, 96, 108, 119, 137, 169, 170, 196], "your": [0, 6, 7, 9, 21, 41, 42, 44, 45, 79, 187, 190, 196, 201, 203], "record": [0, 21, 41, 42, 44, 45, 136, 183, 189, 193, 196], "replai": [0, 13, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 38, 39, 44, 45, 131, 132, 137, 138, 160, 163, 179, 183, 189, 193, 196], "buffer": [0, 3, 13, 21, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 58, 67, 72, 75, 78, 113, 116, 131, 132, 137, 138, 160, 163, 179, 183, 189, 193, 196, 200, 202], "hyperparamet": [0, 1], "initi": [0, 6, 11, 12, 13, 14, 21, 41, 42, 44, 45, 64, 67, 72, 74, 75, 80, 90, 104, 105, 135, 137, 138, 168, 171, 173, 176, 178, 181, 187, 196, 202], "time": [0, 3, 4, 6, 11, 12, 13, 14, 21, 41, 42, 44, 45, 56, 72, 79, 85, 99, 101, 137, 144, 145, 146, 163, 196, 198, 200, 201, 202, 203], "train": [0, 1, 11, 12, 13, 14, 21, 41, 42, 44, 45, 67, 75, 78, 92, 94, 129, 130, 133, 135, 136, 137, 138, 144, 163, 164, 183, 193, 201, 202], "experi": [0, 3, 23, 32, 190], "result": [0, 1, 3, 6, 11, 12, 13, 14, 21, 41, 42, 44, 45, 54, 55, 56, 57, 58, 59, 61, 62, 64, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 81, 85, 102, 123, 144, 147, 148, 149, 150, 151, 152, 153, 164, 196, 201, 202, 203], "sampl": [0, 2, 8, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 41, 43, 82, 84, 90, 96, 108, 111, 113, 114, 118, 119, 130, 131, 132, 135, 136, 154, 160, 163, 165, 196, 200, 202, 203], "trajectori": [0, 1, 11, 12, 13, 14, 15, 21, 41, 42, 44, 45, 74, 90, 136, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 196, 202, 203], "td": [0, 18, 46, 47, 48, 49, 51, 52, 56, 59, 64, 73, 75, 79, 85, 86, 87, 88, 89, 90, 98, 103, 109, 110, 113, 116, 120, 122, 123, 145, 146, 149, 150, 152, 153, 154, 162, 168, 171, 173, 176, 178, 181, 200, 201, 202, 203], "lambda": [0, 11, 12, 13, 14, 146, 149, 150, 152, 153, 183, 200, 201, 202, 203], "pixel": [0, 3, 6, 18, 62, 67, 68, 73, 78, 92, 106, 107, 168, 173, 176, 178, 181, 195, 197, 199, 202, 203], "base": [0, 3, 8, 11, 12, 13, 14, 34, 40, 43, 77, 87, 163, 168, 176, 178, 181, 193, 195, 197, 199, 202], "dqn": [0, 98, 110, 122, 132, 133, 134, 139, 173, 174, 189, 197, 199], "problem": [0, 6, 13, 202], "deep": [0, 8, 55, 92, 93, 94, 95, 97, 129, 134, 138, 139, 171, 195], "q": [0, 92, 93, 94, 95, 97, 100, 122, 123, 131, 132, 133, 134, 137, 138, 178, 181, 200], "network": [0, 1, 21, 41, 42, 44, 45, 87, 88, 89, 91, 92, 93, 94, 95, 97, 99, 100, 102, 105, 106, 107, 111, 112, 113, 131, 132, 133, 134, 137, 138, 139, 141, 144, 145, 146, 168, 171, 176, 182, 183, 193, 195, 198, 200, 202], "regular": [0, 14, 113, 114, 123, 133, 164, 193, 195, 200, 201, 202], "conclus": 0, "api": [0, 3, 67, 78, 193, 202, 203], "packag": [0, 5, 6, 9, 189, 190, 202], "trainer": [0, 129, 130, 133, 135, 136, 137, 138, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 195], "_util": [0, 10, 189], "knowledg": 0, "work": [0, 6, 7, 21, 41, 42, 44, 45, 56, 67, 79, 91, 102, 163, 190, 196, 198, 200, 201, 202, 203], "habitat": [0, 50, 190], "lab": [0, 3, 46, 47, 190], "about": [0, 190, 195, 196, 202, 203], "mujoco": [0, 5, 190], "issu": [0, 4, 113, 114, 190, 203], "when": [0, 1, 3, 4, 7, 11, 12, 13, 14, 21, 23, 24, 25, 29, 30, 31, 35, 36, 37, 38, 41, 42, 44, 45, 58, 63, 67, 71, 72, 74, 75, 78, 79, 84, 90, 102, 103, 104, 113, 114, 116, 118, 126, 130, 135, 136, 143, 160, 187, 190, 193, 195, 196, 200, 201, 202], "render": [0, 7, 159, 190, 195, 196], "pro": [0, 6, 190], "tip": [0, 6, 190], "resourc": [0, 190], "version": [0, 1, 10, 21, 41, 42, 44, 45, 146, 190, 195, 196, 202], "index": [0, 6, 9, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 40, 85, 160, 195, 198, 201, 203], "search": [0, 196], "page": [0, 6], "somewhat": [1, 202], "equival": [1, 11, 12, 13, 14, 21, 41, 42, 44, 45, 75, 202, 203], "dataload": [1, 201], "except": [1, 16, 17, 18, 19, 20, 22, 27, 28, 41, 60, 108, 125, 195, 196, 201, 202], "1": [1, 2, 3, 9, 11, 12, 13, 14, 19, 20, 21, 22, 28, 41, 42, 43, 44, 45, 52, 54, 56, 58, 59, 63, 64, 67, 72, 73, 75, 78, 79, 85, 87, 88, 89, 90, 91, 92, 93, 95, 100, 102, 104, 105, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 122, 126, 129, 130, 135, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159, 161, 168, 171, 173, 176, 178, 181, 183, 187, 190, 193, 195, 196, 198, 201, 202, 203], "thei": [1, 3, 7, 8, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 59, 60, 74, 75, 101, 129, 130, 133, 135, 136, 137, 138, 163, 193, 195, 196, 198, 200, 201, 202, 203], "collect": [1, 3, 11, 12, 13, 14, 21, 23, 24, 25, 26, 29, 30, 31, 64, 67, 78, 81, 131, 137, 138, 154, 160, 163, 164, 165, 166, 183, 193, 195, 196, 201, 202, 203], "over": [1, 2, 3, 11, 12, 13, 14, 21, 41, 42, 44, 45, 64, 116, 133, 165, 193, 195, 200, 201, 202, 203], "non": [1, 21, 23, 25, 41, 42, 44, 45, 54, 58, 67, 72, 75, 78, 113, 114, 144, 145, 146, 195, 200, 202], "static": [1, 79], "2": [1, 9, 11, 12, 13, 20, 21, 41, 42, 44, 45, 56, 58, 64, 67, 72, 75, 78, 79, 91, 92, 93, 94, 98, 100, 101, 102, 113, 120, 122, 130, 131, 135, 137, 138, 143, 144, 145, 146, 149, 150, 152, 153, 154, 195, 196, 198, 201, 202, 203], "like": [1, 6, 21, 41, 42, 44, 45, 50, 73, 81, 137, 195, 201, 202, 203], "being": [1, 3, 14, 21, 41, 42, 44, 45, 75, 84, 164, 185, 186, 187, 195, 196], "accept": [1, 11, 12, 13, 14, 21, 41, 42, 43, 44, 45, 58, 67, 71, 72, 75, 78, 113, 114, 115, 193, 200, 202], "two": [1, 9, 21, 41, 42, 44, 45, 95, 114, 135, 138, 140, 159, 163, 168, 176, 178, 181, 195, 196, 198, 200, 201, 202, 203], "main": [1, 2, 114, 163, 195, 196, 198, 202], "argument": [1, 3, 11, 12, 13, 14, 18, 21, 41, 42, 44, 45, 58, 67, 72, 74, 75, 78, 91, 102, 104, 113, 114, 115, 120, 156, 165, 168, 171, 173, 176, 178, 181, 183, 184, 187, 195, 196, 200, 202], "list": [1, 5, 6, 8, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 37, 38, 41, 42, 43, 44, 45, 55, 67, 71, 75, 78, 102, 116, 120, 142, 144, 146, 159, 160, 185, 186, 195, 196, 198, 200, 201, 202, 203], "constructor": [1, 13, 74, 144, 145, 146, 168, 171, 173, 176, 178, 181, 184, 187, 200], "iter": [1, 12, 13, 20, 21, 23, 24, 25, 26, 29, 30, 31, 41, 42, 44, 45, 64, 79, 91, 102, 113, 114, 115, 116, 124, 142, 159, 160, 162, 163, 168, 176, 178, 181, 193, 195], "step": [1, 3, 11, 12, 13, 14, 21, 41, 42, 43, 44, 45, 52, 63, 64, 75, 85, 90, 99, 101, 103, 114, 129, 136, 143, 154, 159, 163, 193, 195, 196, 198, 201, 203], "queri": [1, 11, 12, 13, 14, 21, 41, 42, 44, 45, 67, 74, 79, 116, 200, 203], "defin": [1, 2, 16, 17, 18, 19, 20, 22, 27, 28, 41, 42, 44, 45, 58, 67, 74, 76, 77, 78, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 106, 107, 111, 112, 126, 144, 145, 146, 184, 196, 200, 201, 202], "number": [1, 3, 7, 11, 12, 13, 14, 17, 19, 21, 22, 23, 24, 25, 30, 32, 35, 36, 37, 41, 42, 43, 44, 45, 55, 63, 64, 70, 79, 90, 91, 96, 97, 99, 100, 102, 106, 107, 111, 112, 113, 114, 117, 118, 119, 128, 137, 138, 154, 156, 159, 160, 163, 164, 165, 166, 185, 186, 187, 195, 196, 202], "befor": [1, 3, 6, 9, 11, 12, 13, 14, 21, 41, 42, 44, 45, 54, 55, 56, 57, 58, 59, 61, 62, 64, 67, 68, 69, 70, 72, 73, 74, 76, 78, 102, 104, 105, 129, 130, 133, 135, 136, 137, 138, 145, 146, 195, 196, 200, 201, 202], "deliv": [1, 196, 203], "stack": [1, 6, 25, 44, 45, 79, 85, 115, 116, 154, 196, 198, 200, 201, 203], "user": [1, 21, 41, 42, 44, 45, 75, 101, 184, 193, 196, 200, 202, 203], "reset": [1, 3, 11, 12, 13, 14, 41, 42, 43, 44, 45, 52, 55, 58, 63, 67, 71, 72, 74, 77, 78, 79, 80, 85, 121, 168, 171, 173, 176, 178, 181, 195, 196, 198, 203], "whenev": [1, 3, 164], "reach": [1, 11, 12, 13, 14, 41, 42, 44, 45, 202, 203], "done": [1, 3, 6, 11, 12, 13, 18, 21, 41, 42, 43, 44, 45, 52, 64, 70, 72, 79, 85, 90, 131, 132, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 168, 171, 173, 176, 178, 181, 195, 196, 198, 201, 202, 203], "after": [1, 18, 21, 41, 42, 44, 45, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 85, 104, 195, 196, 200, 201, 202], "predifin": 1, "becaus": [1, 6, 74, 95, 101, 113, 114, 195, 196, 198, 201, 202], "potenti": 1, "comput": [1, 3, 11, 13, 19, 21, 23, 25, 41, 42, 44, 45, 58, 64, 67, 74, 75, 76, 77, 78, 87, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 111, 112, 114, 118, 119, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 166, 195, 196, 198, 200], "heavi": 1, "crucial": [1, 195, 196, 202], "configur": [1, 11, 12, 13, 14, 136, 168, 176, 178, 181], "appropri": [1, 6, 11, 12, 13, 14, 39, 40, 184, 187], "paramet": [1, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 176, 178, 181, 183, 184, 185, 186, 187, 195, 196, 200, 203], "consider": [1, 3, 195], "whether": [1, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 41, 42, 43, 44, 45, 75, 91, 102, 120, 131, 132, 133, 137, 138, 146, 160, 196, 202], "should": [1, 3, 6, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 38, 41, 42, 43, 44, 45, 58, 64, 67, 71, 74, 75, 76, 77, 78, 79, 81, 85, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 106, 107, 111, 112, 113, 114, 126, 134, 135, 136, 137, 139, 143, 144, 145, 146, 158, 159, 160, 163, 183, 185, 186, 187, 193, 195, 196, 198, 202, 203], "occur": [1, 12, 56, 113, 114, 202], "serial": [1, 3, 21, 41, 42, 44, 45, 79], "optim": [1, 21, 41, 42, 44, 45, 90, 104, 105, 136, 138, 158, 163, 168, 176, 183, 193, 195, 196, 201], "syncdatacollector": [1, 11, 12, 14, 183, 186, 189], "worker": [1, 11, 12, 13, 14, 44, 45, 79, 185, 186, 187, 202, 203], "multisyncdatacollector": [1, 186, 189, 203], "split": [1, 11, 12, 13, 14, 129, 130, 133, 135, 136, 137, 138, 193, 203], "workload": 1, "across": [1, 79, 164, 201], "aggreg": [1, 91, 92, 93, 116, 201], "final": [1, 115, 144, 159, 195, 196, 202], "multiasyncdatacollector": [1, 14, 185, 189, 195, 196, 203], "sever": [1, 21, 41, 42, 44, 45, 56, 75, 136, 202], "batch": [1, 3, 11, 12, 13, 14, 15, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 41, 42, 43, 44, 45, 64, 75, 96, 97, 101, 104, 108, 113, 117, 129, 130, 133, 135, 136, 137, 138, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 160, 162, 163, 164, 185, 186, 187, 193, 195, 196, 198, 200, 202, 203], "gather": [1, 23, 25, 143, 166, 190, 200, 202], "continu": [1, 8, 17, 28, 92, 93, 94, 95, 114, 116, 139, 144, 147, 148, 151, 171, 195, 202], "concomittantli": 1, "impli": [1, 202], "weight": [1, 8, 11, 12, 13, 14, 21, 23, 25, 41, 42, 44, 45, 58, 67, 72, 75, 78, 105, 113, 129, 130, 164, 182, 193, 195, 196, 198, 203], "mai": [1, 3, 4, 6, 11, 12, 13, 14, 21, 41, 42, 44, 45, 75, 79, 102, 193, 195, 202, 203], "slightli": [1, 195, 200, 202], "lag": [1, 11, 12, 13, 14], "therefor": [1, 3, 6, 136, 201, 202], "although": [1, 41, 42, 44, 45, 58, 67, 74, 76, 77, 78, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 106, 107, 111, 112, 126, 193, 195, 196], "fastest": 1, "price": 1, "suitabl": 1, "where": [1, 3, 6, 11, 12, 13, 14, 23, 24, 25, 26, 29, 30, 31, 35, 36, 41, 42, 43, 44, 45, 67, 71, 74, 78, 113, 114, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 160, 163, 164, 193, 195, 196, 198, 200, 202], "asynchron": [1, 8, 12, 21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113, 129, 185], "off": [1, 2, 118, 119, 138, 159, 169, 193, 196, 202], "curriculum": 1, "For": [1, 3, 6, 8, 9, 11, 12, 13, 14, 21, 41, 42, 44, 45, 104, 122, 129, 133, 136, 159, 171, 193, 195, 200, 202], "remot": [1, 29, 44, 45, 202], "necessari": [1, 5, 11, 12, 13, 14, 137, 144, 145, 146, 195], "synchronis": 1, "from": [1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 41, 42, 43, 44, 45, 56, 64, 67, 72, 73, 74, 75, 78, 79, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 98, 102, 103, 104, 109, 110, 113, 114, 115, 116, 118, 119, 120, 122, 123, 130, 131, 132, 135, 136, 137, 138, 143, 144, 145, 146, 154, 160, 163, 165, 166, 168, 171, 173, 176, 178, 179, 181, 183, 184, 187, 190, 193, 195, 196, 198, 200, 201, 202, 203], "either": [1, 21, 41, 42, 44, 45, 171, 193, 201, 202, 203], "update_policy_weights_": [1, 11, 12, 13, 14, 195, 196, 203], "update_at_each_batch": [1, 11, 12, 14, 195], "true": [1, 3, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 41, 42, 43, 44, 45, 46, 47, 56, 58, 63, 64, 67, 70, 72, 73, 75, 78, 79, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 102, 104, 105, 113, 114, 115, 116, 118, 119, 125, 129, 130, 135, 136, 137, 138, 140, 144, 145, 146, 149, 150, 152, 153, 156, 157, 159, 163, 173, 187, 193, 195, 196, 198, 200, 201, 202, 203], "second": [1, 162, 195, 196, 198, 200, 201, 202, 203], "consid": [1, 21, 41, 42, 44, 45, 96, 117, 195, 201], "oper": [1, 3, 6, 11, 12, 14, 21, 41, 42, 44, 45, 74, 87, 88, 89, 113, 122, 129, 130, 131, 132, 133, 135, 136, 143, 144, 145, 146, 163, 171, 173, 178, 181, 193, 195, 196, 198, 200, 202], "instanc": [1, 3, 6, 7, 11, 12, 13, 14, 21, 27, 41, 42, 43, 44, 45, 47, 55, 58, 67, 72, 74, 76, 77, 78, 79, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 106, 107, 111, 112, 114, 115, 116, 126, 159, 166, 168, 169, 170, 171, 173, 176, 178, 181, 183, 185, 186, 193, 196, 200, 201, 202, 203], "cpu": [1, 3, 7, 9, 11, 12, 13, 21, 27, 35, 36, 41, 42, 43, 44, 45, 52, 53, 58, 67, 72, 75, 78, 90, 105, 109, 113, 116, 168, 171, 173, 176, 178, 181, 195, 196, 198, 201, 202, 203], "slower": 1, "than": [1, 7, 11, 12, 13, 14, 95, 102, 113, 164, 190, 195, 196, 200, 201, 202, 203], "one": [1, 3, 6, 10, 11, 12, 13, 14, 20, 22, 23, 24, 25, 26, 29, 30, 31, 38, 39, 40, 41, 42, 44, 45, 58, 63, 67, 74, 75, 76, 77, 78, 79, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 106, 107, 108, 110, 111, 112, 113, 114, 122, 123, 126, 128, 129, 130, 131, 132, 135, 136, 137, 156, 158, 159, 160, 163, 166, 168, 176, 178, 181, 187, 190, 193, 195, 196, 198, 200, 201, 202, 203], "cuda": [1, 3, 6, 21, 41, 42, 44, 45, 58, 66, 67, 72, 75, 78, 113, 155, 195, 196, 201, 202], "multipl": [1, 3, 11, 12, 13, 14, 19, 44, 45, 56, 71, 74, 79, 101, 104, 105, 113, 114, 137, 178, 187, 193, 196, 201, 203], "infer": [1, 44, 45, 79, 104, 138, 195, 200, 201], "dispatch": 1, "avail": [1, 4, 5, 114, 122, 123, 185, 186, 195, 196, 202], "speed": [1, 2, 7, 19, 195, 196], "up": [1, 2, 3, 7, 8, 19, 190, 195, 196, 200, 202], "avoid": [1, 21, 41, 42, 44, 45, 75, 79, 113, 165, 200], "oom": 1, "error": [1, 3, 6, 9, 10, 21, 41, 42, 44, 45, 81, 125, 195, 196, 201, 202], "choic": [1, 2], "size": [1, 3, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 41, 42, 43, 44, 45, 52, 53, 56, 67, 72, 73, 75, 76, 78, 87, 88, 89, 90, 91, 96, 98, 101, 102, 108, 109, 110, 111, 112, 113, 116, 117, 120, 122, 123, 143, 144, 145, 146, 154, 160, 168, 171, 173, 176, 178, 181, 195, 196, 198, 200, 202, 203], "pass": [1, 3, 13, 18, 21, 25, 41, 42, 44, 45, 58, 67, 74, 76, 77, 78, 79, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 104, 106, 107, 111, 112, 113, 114, 116, 125, 126, 144, 145, 146, 185, 186, 187, 195, 196, 198, 202], "ie": 1, "store": [1, 11, 12, 13, 14, 18, 21, 25, 31, 35, 36, 37, 41, 42, 44, 45, 79, 90, 101, 168, 171, 173, 176, 178, 181, 193, 195, 196, 201, 202], "while": [1, 3, 6, 21, 41, 42, 44, 45, 58, 67, 74, 76, 77, 78, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 106, 107, 111, 112, 126, 135, 136, 195, 196, 203], "wait": [1, 196], "also": [1, 2, 3, 7, 21, 25, 41, 42, 44, 45, 71, 75, 112, 115, 116, 129, 131, 132, 144, 193, 195, 196, 198, 200, 201, 202], "impact": 1, "memori": [1, 19, 21, 35, 41, 42, 44, 45, 58, 67, 72, 75, 78, 79, 113, 187, 193, 195, 203], "manag": [1, 141, 142, 159, 195, 200], "kei": [1, 3, 6, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 31, 41, 42, 44, 45, 55, 56, 64, 67, 71, 72, 74, 75, 78, 79, 85, 90, 103, 113, 114, 115, 116, 120, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 143, 144, 145, 146, 158, 159, 162, 163, 166, 168, 176, 178, 181, 193, 195, 196, 198, 200, 202, 203], "which": [1, 3, 6, 10, 11, 12, 13, 14, 18, 19, 21, 22, 31, 41, 42, 44, 45, 55, 56, 63, 64, 67, 74, 75, 87, 88, 89, 113, 114, 116, 118, 119, 129, 130, 133, 135, 136, 137, 138, 140, 144, 154, 158, 168, 171, 173, 176, 178, 181, 193, 195, 196, 198, 200, 201, 202], "passing_devic": [1, 11, 12, 13, 14, 195, 196, 203], "dure": [1, 11, 12, 13, 14, 41, 42, 44, 45, 75, 159, 163, 195, 202], "A": [1, 3, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 50, 67, 72, 74, 75, 77, 79, 80, 81, 85, 90, 91, 102, 105, 114, 115, 116, 122, 126, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 156, 160, 163, 164, 168, 173, 176, 178, 181, 183, 196, 201, 202], "heurist": [1, 16, 17, 18, 19, 20, 22, 27, 28, 195, 202], "usual": [1, 3, 5, 6, 41, 42, 44, 45, 105, 168, 176, 178, 181, 190, 193, 202], "same": [1, 3, 13, 21, 41, 42, 44, 45, 63, 64, 74, 75, 79, 91, 102, 195, 196, 198, 200, 201, 202], "storag": [1, 2, 21, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 41, 42, 44, 45, 160, 189, 193, 195, 196], "default": [1, 3, 9, 11, 12, 13, 14, 18, 19, 21, 22, 25, 30, 35, 36, 41, 42, 44, 45, 46, 55, 56, 61, 63, 64, 67, 70, 72, 73, 75, 78, 79, 85, 86, 90, 91, 92, 93, 94, 95, 96, 99, 100, 102, 104, 105, 106, 107, 109, 111, 112, 113, 114, 117, 118, 119, 120, 126, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 149, 150, 152, 153, 154, 156, 157, 159, 161, 163, 168, 171, 176, 178, 181, 183, 187, 193, 195, 196, 200, 201, 202, 203], "behaviour": [1, 3, 42, 56, 118, 119, 159, 196], "besid": 1, "those": [1, 6, 44, 45, 64, 114, 115, 116, 164, 185, 186, 195, 196, 202], "choos": [1, 195], "follow": [1, 2, 3, 5, 6, 21, 41, 42, 43, 44, 45, 67, 91, 102, 128, 130, 135, 163, 178, 181, 193, 195, 196, 198, 200, 201, 202, 203], "max_frames_per_traj": [1, 11, 12, 13, 14, 165, 195, 203], "frame": [1, 11, 12, 13, 14, 21, 42, 55, 156, 159, 163, 165, 166, 195, 196, 202, 203], "call": [1, 3, 6, 10, 11, 12, 13, 14, 21, 23, 24, 25, 29, 30, 31, 35, 36, 37, 38, 41, 42, 44, 45, 55, 58, 59, 66, 67, 71, 72, 74, 75, 76, 77, 78, 79, 84, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 104, 106, 107, 111, 112, 113, 114, 116, 126, 143, 159, 160, 193, 195, 196, 200, 201, 202, 203], "frames_per_batch": [1, 11, 12, 13, 14, 165, 195, 196, 203], "each": [1, 3, 6, 11, 12, 13, 14, 15, 20, 21, 23, 25, 41, 42, 44, 45, 71, 72, 79, 116, 122, 123, 149, 150, 152, 153, 159, 185, 186, 195, 196, 200, 202, 203], "init_random_fram": [1, 11, 12, 13, 14, 165, 195, 196], "random": [1, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 27, 28, 33, 41, 42, 43, 44, 45, 63, 64, 72, 113, 114, 137, 159, 166, 195, 196, 202, 203], "rand_step": [1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 79, 202, 203], "reset_at_each_it": [1, 11, 12, 13, 14, 195], "split_traj": [1, 11, 12, 13, 14, 195], "pad": [1, 15, 91, 92, 93, 101, 195, 196], "along": [1, 55, 56, 64, 71, 73, 102, 105, 113, 114, 196, 201], "mask": [1, 11, 12, 13, 195, 196, 201, 202], "point": [1, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 32, 39, 40, 41, 42, 44, 45, 55, 58, 67, 72, 73, 75, 78, 103, 113, 128, 133, 163, 190, 198, 202], "boolean": [1, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 27, 28, 42, 147, 148, 149, 150, 151, 152, 153, 193], "repres": [1, 3, 11, 12, 13, 14, 25, 41, 42, 44, 45, 114, 122, 123, 140, 144, 200, 201], "valid": [1, 75, 91, 102, 135, 193, 202], "valu": [1, 3, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 41, 42, 44, 45, 54, 56, 63, 64, 67, 69, 71, 72, 73, 74, 75, 78, 79, 86, 87, 88, 89, 92, 93, 94, 95, 96, 98, 99, 100, 102, 104, 105, 108, 109, 110, 113, 114, 117, 118, 119, 120, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 163, 168, 171, 176, 178, 181, 183, 193, 195, 196, 198, 200, 202, 203], "exploration_mod": [1, 11, 13, 159, 189, 195, 196, 200], "explor": [1, 80, 105, 113, 114, 129, 159, 169, 170, 183, 189, 195, 196], "strategi": [1, 193, 195], "reset_when_don": [1, 11, 13], "central": 2, "part": [2, 21, 41, 42, 44, 45, 64, 71, 120, 154, 187, 195, 196, 200, 202], "algorithm": [2, 8, 11, 12, 43, 129, 136, 137, 154, 168, 169, 176, 193, 195, 196, 201, 203], "wide": [2, 3], "we": [2, 3, 4, 6, 8, 18, 21, 41, 42, 44, 45, 67, 79, 90, 101, 190, 193, 195, 196, 198, 200, 201, 202, 203], "veri": [2, 3, 195, 196, 202, 203], "influenti": 2, "latenc": 2, "especi": [2, 3, 6, 7, 56], "distribut": [2, 3, 8, 9, 23, 25, 64, 90, 96, 97, 98, 99, 108, 111, 112, 114, 115, 117, 118, 119, 122, 130, 133, 135, 136, 189, 193, 195, 196, 200, 202, 203], "larger": 2, "volum": 2, "lazymemmapstorag": [2, 189, 195, 196], "advis": [2, 202], "share": [2, 35, 36, 37, 38, 44, 45, 79, 87, 88, 89, 187, 198, 200, 202, 203], "due": [2, 3, 202], "lower": [2, 11, 12, 13, 14, 17, 79, 111, 112, 201], "serialis": 2, "memmaptensor": 2, "well": [2, 3, 11, 12, 14, 21, 38, 41, 42, 44, 45, 111, 112, 195, 196, 200, 201, 202, 203], "abil": 2, "specifi": [2, 10, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 71, 76, 90, 113, 114, 195, 200], "file": [2, 5, 6, 193, 196, 199, 200, 203], "locat": [2, 6, 42, 64, 70, 118, 119, 201], "node": [2, 168, 171, 173, 176, 178, 181], "failur": 2, "recoveri": 2, "mean": [2, 3, 6, 13, 64, 79, 90, 96, 99, 101, 114, 117, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 195, 196, 202, 203], "liststorag": [2, 23, 24, 25, 30, 160, 189], "were": [2, 6, 44, 45, 195], "found": [2, 5, 6, 9, 18, 21, 25, 41, 42, 44, 45, 79, 114, 131, 136, 195, 196, 200], "rough": 2, "benchmark": [2, 8], "http": [2, 5, 6, 9, 23, 32, 55, 67, 92, 93, 94, 95, 99, 100, 105, 106, 107, 111, 112, 122, 129, 133, 134, 136, 137, 138, 139, 144, 147, 148, 151, 168, 171, 176, 178, 181, 203], "com": [2, 5, 6, 9, 203], "tree": 2, "type": [2, 21, 27, 41, 42, 43, 44, 45, 58, 67, 72, 75, 78, 79, 91, 102, 105, 113, 114, 124, 168, 171, 173, 176, 178, 181, 185, 195, 196, 201, 202], "1x": 2, "lazytensorstorag": [2, 189], "83x": 2, "3": [2, 3, 5, 6, 9, 11, 12, 13, 18, 19, 20, 21, 22, 41, 42, 44, 45, 55, 58, 61, 64, 67, 72, 73, 75, 78, 86, 87, 88, 89, 90, 91, 92, 93, 98, 100, 101, 102, 109, 113, 116, 120, 122, 125, 144, 145, 146, 149, 150, 152, 153, 162, 173, 193, 195, 196, 198, 201, 202, 203], "44x": 2, "parent": [2, 3, 27, 41, 56, 64, 67, 74, 87, 136, 196, 201, 202, 203], "subclass": [2, 3, 41, 42, 44, 45, 58, 67, 74, 76, 77, 78, 81, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 106, 107, 110, 111, 112, 113, 114, 115, 126, 136, 195], "basic": [2, 43, 202], "properti": [2, 41, 42, 43, 44, 45, 75, 96, 104, 108, 117, 118, 119, 200, 201], "action": [2, 3, 8, 11, 12, 13, 19, 22, 27, 41, 42, 43, 44, 45, 52, 59, 63, 75, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 102, 103, 109, 110, 112, 114, 117, 118, 120, 122, 123, 132, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 168, 171, 173, 176, 178, 181, 183, 187, 193, 195, 196, 198, 200, 201, 202, 203], "shape": [2, 3, 16, 17, 18, 19, 20, 22, 27, 28, 41, 42, 44, 45, 56, 73, 96, 97, 102, 104, 108, 109, 113, 116, 117, 140, 154, 163, 183, 195, 196, 198, 200, 201, 202, 203], "dtype": [2, 3, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 32, 41, 42, 43, 44, 45, 52, 53, 58, 59, 64, 67, 72, 73, 75, 78, 87, 88, 89, 90, 98, 104, 105, 109, 110, 113, 116, 120, 122, 123, 144, 145, 146, 168, 171, 173, 176, 178, 181, 195, 196, 198, 200, 201, 202, 203], "domain": [2, 16, 17, 18, 19, 20, 22, 27, 28, 72, 113, 114, 115, 116, 189, 202, 203], "offer": [3, 6, 202], "handl": [3, 21, 41, 42, 44, 45, 79, 102, 163, 185, 186], "differ": [3, 11, 12, 13, 14, 21, 41, 42, 44, 45, 75, 102, 122, 123, 136, 140, 144, 145, 159, 163, 164, 185, 186, 193, 195, 196, 198, 201, 202], "backend": [3, 6, 193, 195], "dm": [3, 202], "custom": [3, 21, 41, 42, 44, 45, 187], "goal": [3, 195, 196], "abl": [3, 198, 201, 203], "even": [3, 7, 12, 35, 36, 37, 38, 195, 201, 202], "simul": [3, 6, 53, 90, 195], "some": [3, 6, 7, 8, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 67, 92, 114, 115, 116, 154, 165, 193, 195, 196, 200, 202, 203], "box": [3, 16, 17, 18, 19, 20, 22, 27, 28], "wrapper": [3, 14, 25, 26, 31, 43, 46, 47, 48, 49, 50, 51, 52, 114, 144, 187, 195, 202], "under": [3, 21, 41, 42, 44, 45, 113, 114, 195, 202], "lib": [3, 5, 6, 8, 9, 11, 12, 13, 46, 47, 48, 49, 50, 51, 52, 64, 72, 79, 168, 171, 173, 176, 178, 181, 183, 195, 196, 198, 202, 203], "hope": 3, "imit": 3, "other": [3, 6, 21, 35, 36, 37, 38, 41, 42, 43, 44, 45, 79, 105, 114, 129, 130, 133, 135, 136, 137, 138, 168, 176, 178, 181, 185, 186, 193, 195, 196, 200, 202, 203], "envbas": [3, 11, 12, 13, 14, 42, 44, 45, 63, 74, 75, 79, 81, 90, 103, 159, 166, 168, 169, 170, 171, 173, 176, 178, 181, 183, 185, 186, 187, 189], "torch": [3, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 32, 35, 36, 41, 42, 43, 44, 45, 52, 56, 58, 59, 64, 67, 70, 72, 73, 75, 78, 79, 85, 86, 87, 88, 89, 90, 91, 96, 98, 99, 101, 102, 104, 105, 108, 109, 110, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 131, 144, 145, 146, 154, 162, 168, 171, 173, 176, 178, 181, 183, 193, 195, 196, 198, 200, 201, 202, 203], "nn": [3, 11, 12, 13, 21, 41, 42, 43, 44, 45, 58, 67, 72, 75, 78, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 109, 110, 113, 114, 115, 116, 120, 122, 123, 124, 125, 129, 132, 133, 144, 145, 146, 178, 181, 183, 195, 196, 198, 200, 203], "typic": [3, 21, 41, 42, 44, 45, 193], "method": [3, 11, 12, 13, 14, 21, 25, 29, 35, 36, 37, 38, 41, 42, 44, 45, 55, 58, 64, 67, 68, 72, 75, 78, 87, 88, 89, 90, 101, 113, 114, 115, 124, 129, 184, 193, 194, 195, 200, 201, 202], "organis": 3, "allow": [3, 11, 12, 13, 14, 21, 22, 41, 42, 44, 45, 85, 102, 140, 193, 195, 200, 201, 202], "gener": [3, 6, 13, 30, 34, 43, 64, 71, 86, 96, 108, 109, 114, 120, 137, 144, 147, 148, 151, 163, 195, 196, 197, 198, 200, 201, 202, 203], "arbitrari": [3, 22, 44, 45, 195, 196], "input": [3, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 41, 42, 43, 44, 45, 56, 58, 59, 67, 71, 74, 76, 78, 85, 91, 92, 93, 94, 95, 101, 102, 104, 105, 111, 112, 113, 114, 115, 116, 128, 129, 130, 133, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 165, 183, 193, 196, 201, 202, 203], "output": [3, 11, 12, 13, 14, 21, 23, 24, 25, 30, 41, 42, 43, 44, 45, 67, 74, 78, 87, 91, 92, 93, 97, 99, 101, 102, 113, 114, 115, 116, 122, 123, 129, 130, 133, 135, 136, 137, 138, 144, 154, 160, 195, 198, 201, 202, 203], "nest": [3, 18, 21, 41, 42, 44, 45, 144, 145, 146, 193, 196, 201, 203], "attribut": [3, 21, 41, 42, 44, 45, 67, 114, 196, 200], "batch_siz": [3, 11, 12, 13, 18, 23, 24, 26, 29, 30, 31, 41, 43, 52, 53, 72, 87, 88, 89, 90, 98, 109, 110, 113, 116, 120, 122, 123, 154, 160, 168, 171, 173, 176, 178, 181, 195, 196, 198, 200, 201, 202, 203], "togeth": [3, 11, 12, 13, 14, 87, 88, 89, 200], "expect": [3, 6, 18, 21, 27, 41, 42, 43, 44, 45, 54, 55, 56, 57, 58, 59, 61, 62, 64, 67, 68, 69, 70, 72, 73, 74, 76, 78, 81, 113, 116, 129, 130, 135, 136, 166, 190, 193, 195, 202], "live": [3, 11, 12, 13, 14, 21, 23, 24, 25, 26, 29, 30, 31, 41, 42, 43, 44, 45, 160], "doe": [3, 23, 25, 32, 38, 104, 115, 116, 130, 135, 136, 143, 163, 193, 195, 201, 202], "actual": [3, 6, 11, 12, 14, 41, 42, 44, 45, 165, 195, 196], "respons": [3, 163, 200, 202], "just": [3, 154, 193, 196, 200, 201, 202, 203], "retriev": [3, 29, 30, 31, 41, 42, 44, 45, 56, 64, 85, 90, 114, 130, 135, 136, 144, 145, 146, 168, 171, 173, 176, 178, 181, 187, 193, 201, 202], "care": [3, 41, 42, 44, 45, 58, 67, 74, 76, 77, 78, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 106, 107, 111, 112, 126, 195, 196], "map": [3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 35, 41, 42, 44, 45, 54, 55, 56, 57, 58, 59, 61, 62, 64, 67, 68, 69, 70, 72, 73, 74, 76, 78, 79, 87, 88, 89, 113, 114, 116, 122, 160, 189, 195, 196, 200, 201], "desir": [3, 21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 84, 91, 102, 113, 114, 195, 196, 201], "see": [3, 5, 6, 7, 8, 11, 12, 13, 14, 21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 80, 91, 102, 104, 113, 114, 118, 119, 195, 196, 200, 201, 202], "below": [3, 6, 11, 12, 13, 14, 21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 91, 102, 113, 118, 119, 188, 197], "parametr": [3, 105, 114, 138, 195, 200], "hardwar": 3, "observation_spec": [3, 41, 43, 55, 56, 57, 58, 59, 61, 62, 64, 67, 68, 71, 72, 73, 74, 75, 76, 78, 90, 166, 183, 195, 198, 202], "compositespec": [3, 41, 43, 72, 86, 90, 109, 116, 189, 195, 202], "all": [3, 11, 12, 13, 14, 21, 41, 42, 43, 44, 45, 58, 60, 64, 67, 71, 72, 74, 75, 76, 77, 78, 79, 83, 84, 85, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 106, 107, 111, 112, 113, 114, 116, 126, 158, 163, 165, 185, 186, 187, 190, 193, 195, 196, 197, 198, 200, 201, 202, 203], "spec": [3, 16, 17, 18, 19, 20, 22, 27, 28, 41, 42, 43, 44, 45, 54, 55, 56, 57, 58, 59, 61, 62, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 86, 87, 88, 89, 98, 109, 110, 112, 113, 114, 116, 122, 123, 168, 171, 173, 176, 178, 181, 195, 196, 198, 203], "pair": [3, 21, 25, 41, 42, 44, 45, 87, 114, 195, 196, 198, 201, 202], "input_spec": [3, 41, 43, 44, 45, 58, 59, 67, 74, 75, 76, 78, 90, 202], "action_spec": [3, 41, 42, 43, 44, 45, 52, 75, 86, 88, 98, 109, 110, 112, 122, 123, 183, 195, 196, 198, 202, 203], "tensorspec": [3, 16, 17, 18, 19, 20, 22, 28, 41, 43, 54, 55, 56, 57, 58, 59, 61, 62, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 86, 109, 112, 113, 114, 115, 189], "reward_spec": [3, 41, 43, 54, 58, 59, 67, 69, 70, 71, 74, 75, 76, 78, 90, 202], "reward": [3, 11, 12, 13, 21, 27, 41, 42, 43, 44, 45, 52, 54, 58, 59, 67, 69, 70, 71, 74, 75, 76, 77, 78, 79, 85, 90, 131, 132, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 159, 161, 187, 193, 195, 196, 198, 201, 202, 203], "importantli": [3, 114], "4": [3, 6, 11, 12, 13, 19, 22, 43, 46, 47, 48, 51, 55, 79, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 109, 110, 113, 116, 120, 122, 123, 125, 195, 196, 201, 202, 203], "action_s": 3, "simpli": [3, 5, 195, 196, 202], "With": [3, 193, 201, 202], "necessarili": 3, "requir": [3, 6, 13, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 41, 42, 44, 45, 58, 67, 72, 75, 78, 102, 113, 115, 116, 129, 130, 133, 135, 136, 137, 138, 193, 195, 196, 200, 202], "stateless": [3, 44, 45, 74, 202], "set_se": [3, 11, 12, 13, 14, 41, 42, 43, 44, 45, 52, 64, 75, 195, 202, 203], "integ": [3, 11, 12, 13, 14, 20, 21, 22, 23, 24, 25, 38, 41, 42, 44, 45, 64, 91, 102, 160], "seed": [3, 11, 12, 13, 14, 41, 42, 43, 44, 45, 46, 75, 163, 195], "next": [3, 11, 12, 13, 18, 21, 23, 24, 25, 30, 41, 42, 43, 44, 45, 52, 79, 85, 112, 137, 143, 144, 145, 146, 160, 195, 196, 198, 202, 203], "determinist": [3, 21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 86, 99, 106, 112, 113, 114, 195, 196, 202], "preced": [3, 101, 200], "without": [3, 6, 8, 21, 41, 42, 44, 45, 88, 137, 143, 183, 190, 195, 196, 202], "risk": 3, "overlap": 3, "consecut": [3, 196, 202], "still": [3, 8, 135, 195, 196, 198, 202], "reproduc": 3, "max_step": [3, 41, 42, 43, 44, 45, 85, 195, 196, 202, 203], "maximum": [3, 11, 12, 13, 14, 17, 21, 23, 24, 25, 35, 36, 37, 41, 42, 44, 45, 69, 109, 117, 118, 119, 138, 160, 195, 196, 202], "safemodul": [3, 43, 53, 87, 88, 89, 90, 103, 109, 114, 116, 124, 125, 129, 130, 131, 135, 136, 137, 138, 143, 144, 145, 146, 159, 169, 170, 183, 189, 203], "ani": [3, 18, 21, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 67, 75, 79, 81, 91, 102, 105, 113, 114, 115, 116, 136, 160, 163, 190, 195, 196, 202], "compat": [3, 4, 6, 10, 21, 38, 41, 42, 44, 45, 50, 79, 124, 140, 196, 203], "better": [3, 196], "intens": [3, 7], "gym3": 3, "envpool": 3, "interfac": [3, 102, 104, 200], "simultan": [3, 44, 45], "often": [3, 134, 163, 202], "competit": 3, "advantag": [3, 100, 129, 130, 135, 136, 144, 145, 146, 147, 148, 149, 151, 152, 193, 195, 196, 202], "scale": [3, 64, 70, 87, 88, 89, 99, 109, 111, 112, 114, 116, 118, 119, 161, 166, 168, 176, 178, 181, 187, 195, 196, 200, 203], "varieti": 3, "its": [3, 6, 11, 12, 13, 14, 21, 25, 41, 42, 43, 44, 45, 55, 74, 75, 79, 91, 98, 114, 129, 130, 133, 135, 136, 137, 138, 163, 183, 193, 195, 196, 200, 202], "own": [3, 11, 12, 14, 21, 41, 42, 44, 45, 196, 200], "parallelenv": [3, 11, 12, 13, 14, 45, 184, 189, 195, 196, 198, 202, 203], "As": [3, 41, 42, 44, 45, 114, 195, 196, 202, 203], "inherit": [3, 103, 193, 200, 201], "enjoi": 3, "exact": 3, "Of": [3, 6, 190, 202], "cours": [3, 190, 202], "correspond": [3, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 32, 41, 42, 43, 44, 45, 72, 75, 79, 114, 196], "count": [3, 159, 165, 202], "def": [3, 10, 21, 41, 42, 43, 44, 45, 90, 120, 122, 125, 193, 195, 196, 198, 200, 201, 202, 203], "make_env": [3, 79, 85, 169, 170, 195, 196, 202], "gymenv": [3, 11, 12, 13, 14, 50, 58, 64, 72, 75, 79, 168, 171, 173, 176, 178, 181, 183, 189, 195, 196, 202, 203], "pendulum": [3, 11, 12, 13, 14, 48, 49, 58, 64, 72, 75, 79, 183, 196, 202, 203], "v1": [3, 11, 12, 13, 64, 72, 140, 149, 150, 152, 153, 196, 202, 203], "from_pixel": [3, 46, 47, 168, 176, 178, 181, 195, 196, 202, 203], "9": [3, 6, 21, 79, 195, 196, 201], "81": 3, "0": [3, 5, 6, 9, 10, 20, 21, 22, 23, 25, 32, 41, 42, 43, 44, 45, 52, 54, 56, 58, 61, 63, 64, 67, 72, 73, 75, 78, 79, 85, 90, 91, 92, 93, 95, 99, 102, 104, 105, 111, 112, 113, 116, 117, 118, 119, 126, 129, 130, 135, 136, 137, 138, 139, 143, 144, 145, 146, 154, 161, 163, 183, 187, 193, 195, 196, 198, 199, 200, 201, 202, 203], "print": [3, 5, 6, 11, 12, 13, 18, 19, 21, 22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 56, 59, 64, 72, 73, 79, 85, 86, 87, 88, 89, 91, 98, 102, 110, 113, 116, 120, 122, 123, 125, 168, 171, 173, 176, 178, 181, 183, 193, 195, 196, 198, 200, 201, 202, 203], "b": [3, 6, 15, 18, 104, 105, 144, 145, 146, 200, 201], "c": [3, 5, 6, 18, 168, 171, 173, 176, 178, 181, 201], "d": [3, 23, 32, 114, 201, 203], "get": [3, 5, 6, 38, 44, 45, 56, 59, 64, 73, 79, 86, 114, 147, 148, 151, 195, 196, 200, 202, 203], "forc": [3, 5, 6, 196], "variou": [3, 11, 12, 13, 14, 129, 130, 133, 135, 136, 137, 138, 185, 186, 195, 196, 202], "reset_work": 3, "fals": [3, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 42, 43, 44, 45, 46, 49, 52, 56, 58, 63, 64, 67, 70, 72, 73, 75, 78, 79, 87, 88, 89, 90, 91, 92, 98, 102, 109, 110, 113, 114, 115, 116, 120, 122, 123, 124, 125, 131, 132, 133, 137, 138, 140, 144, 145, 146, 149, 150, 152, 153, 156, 157, 159, 160, 161, 163, 168, 171, 173, 176, 178, 181, 187, 193, 195, 196, 198, 200, 201, 202, 203], "field": [3, 11, 12, 13, 14, 18, 21, 41, 42, 43, 44, 45, 52, 72, 75, 87, 88, 89, 90, 98, 109, 110, 113, 116, 120, 122, 123, 166, 168, 171, 173, 176, 178, 181, 190, 196, 198, 200, 201, 202, 203], "bool": [3, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 42, 43, 44, 45, 46, 47, 52, 56, 63, 64, 67, 70, 72, 73, 75, 78, 79, 85, 90, 91, 92, 93, 102, 104, 105, 113, 114, 115, 116, 118, 119, 124, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 144, 145, 146, 149, 150, 152, 153, 156, 157, 159, 160, 161, 163, 168, 171, 173, 176, 178, 181, 187, 196, 198, 202, 203], "500": [3, 163, 195, 196, 202, 203], "uint8": [3, 73, 196, 202, 203], "none": [3, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 41, 42, 43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 108, 109, 110, 113, 114, 116, 120, 122, 123, 124, 143, 144, 145, 146, 149, 150, 152, 153, 158, 159, 160, 163, 166, 168, 169, 170, 171, 173, 176, 178, 181, 183, 185, 186, 187, 193, 195, 196, 200, 201, 202, 203], "is_shar": [3, 11, 12, 13, 18, 43, 52, 72, 79, 87, 88, 89, 90, 98, 109, 110, 113, 116, 120, 122, 123, 168, 171, 173, 176, 178, 181, 196, 198, 200, 201, 202, 203], "note": [3, 11, 12, 13, 14, 21, 41, 42, 44, 45, 79, 114, 195, 196, 198, 200, 201, 202], "launch": 3, "quit": [3, 195, 196, 202], "mani": [3, 130, 135, 136, 137, 196, 201, 202], "import": [3, 5, 6, 9, 11, 12, 13, 23, 25, 32, 42, 43, 44, 45, 64, 72, 79, 86, 87, 88, 89, 90, 98, 102, 109, 110, 113, 116, 120, 122, 123, 130, 144, 145, 146, 156, 159, 168, 171, 173, 176, 178, 181, 183, 195, 196, 198, 200, 201, 202, 203], "start": [3, 11, 85, 158, 195, 196, 202], "bottleneck": 3, "why": [3, 195, 202], "so": [3, 5, 6, 9, 21, 41, 42, 44, 45, 79, 115, 116, 195, 202], "slow": 3, "onc": [3, 6, 11, 12, 13, 14, 21, 41, 42, 44, 45, 75, 193, 195, 196, 202], "great": [3, 6, 7, 201, 203], "speedup": [3, 202], "anoth": [3, 41, 42, 44, 45, 74, 102, 129, 130, 133, 135, 136, 137, 138, 195, 198, 201, 202], "thing": [3, 6, 196, 202], "creat": [3, 5, 6, 9, 11, 12, 14, 21, 30, 41, 42, 44, 45, 67, 71, 74, 75, 79, 85, 91, 92, 93, 94, 95, 100, 102, 103, 114, 132, 133, 137, 166, 169, 170, 183, 185, 186, 195, 196, 200, 201, 202, 203], "misspecifi": 3, "caus": [3, 6], "breakag": 3, "prealloc": 3, "In": [3, 6, 9, 10, 11, 12, 14, 21, 41, 42, 44, 45, 58, 67, 72, 74, 75, 78, 102, 112, 113, 116, 118, 119, 128, 164, 185, 186, 187, 195, 196, 198, 201, 202, 203], "obj": [3, 113, 114, 115], "check_env_spec": [3, 189], "rais": [3, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 60, 75, 81, 125, 195, 203], "assert": [3, 5, 16, 17, 18, 19, 20, 22, 27, 28, 42, 79, 81, 85, 144, 145, 146, 154, 162, 195, 196, 198, 200, 201, 202], "mismatch": [3, 201], "serialenv": [3, 189, 202], "mostli": [3, 14, 202], "purpos": [3, 6, 183, 201, 202], "want": [3, 5, 6, 195, 201, 202, 203], "assess": [3, 195], "subprocess": 3, "case": [3, 6, 10, 11, 12, 13, 14, 18, 23, 25, 32, 41, 42, 44, 45, 75, 102, 113, 114, 116, 128, 154, 164, 185, 186, 187, 193, 195, 200, 201, 202, 203], "raw": [3, 118, 119], "must": [3, 6, 11, 12, 13, 14, 18, 21, 35, 36, 37, 38, 41, 42, 44, 45, 64, 72, 75, 91, 102, 113, 114, 122, 123, 147, 148, 149, 150, 151, 152, 153, 154, 159, 163, 164, 168, 171, 173, 176, 178, 181, 195, 196, 198, 200, 201, 203], "treat": 3, "To": [3, 5, 6, 21, 30, 41, 42, 44, 45, 79, 87, 88, 89, 163, 195, 196, 200, 202, 203], "logic": 3, "torchvis": [3, 202, 203], "transformedenv": [3, 58, 63, 64, 72, 74, 79, 168, 171, 173, 176, 178, 181, 189, 195, 196, 198, 202, 203], "primit": [3, 195, 196], "compos": [3, 21, 30, 33, 34, 39, 41, 42, 44, 45, 74, 75, 79, 168, 171, 173, 176, 178, 181, 189, 196, 198, 202, 203], "built": [3, 6, 179, 183, 184, 187, 202], "base_env": [3, 72, 195, 196, 202, 203], "totensorimag": [3, 173, 189, 196, 202, 203], "in_kei": [3, 11, 12, 13, 43, 54, 55, 56, 57, 59, 61, 62, 64, 65, 67, 68, 69, 70, 71, 73, 74, 78, 79, 86, 87, 88, 89, 90, 109, 113, 114, 116, 120, 124, 125, 131, 132, 144, 145, 146, 178, 181, 183, 195, 196, 198, 200, 202, 203], "resiz": [3, 189, 196, 202], "64": [3, 92, 93, 100, 195, 196, 198, 202, 203], "By": [3, 22, 42, 44, 45, 114, 159, 187, 201, 202], "now": [3, 6, 195, 198, 200, 201, 202], "appar": [3, 156], "bring": [3, 202], "signific": [3, 202], "kind": [3, 27, 85], "consult": 3, "achiev": [3, 21, 41, 42, 44, 45, 193, 200, 201, 202], "interest": [3, 44, 45, 114, 202], "abov": [3, 6, 21, 41, 42, 44, 45, 118, 119, 128, 193, 195, 196, 202], "resize_par": 3, "sinc": [3, 6, 21, 41, 42, 44, 45, 58, 67, 74, 76, 77, 78, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 106, 107, 111, 112, 126, 195, 196, 202, 203], "out_kei": [3, 11, 12, 13, 43, 44, 45, 54, 56, 61, 65, 67, 68, 69, 71, 73, 74, 78, 86, 87, 88, 89, 90, 109, 113, 114, 116, 120, 122, 123, 124, 125, 144, 145, 146, 159, 183, 195, 198, 200, 202, 203], "keyword": [3, 21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113, 114, 184, 195, 200, 202], "easi": [3, 196, 201, 202], "root": [3, 118, 119, 202], "graph": [3, 141, 142], "inv": 3, "appli": [3, 21, 29, 30, 31, 41, 42, 44, 45, 75, 118, 144, 158, 193, 195, 196, 200, 202, 203], "revers": 3, "order": [3, 13, 21, 22, 29, 30, 31, 41, 42, 44, 45, 75, 113, 115, 116, 200], "chain": [3, 30, 58, 91, 116, 202], "taken": [3, 41, 42, 44, 45, 196], "includ": [3, 6, 8, 21, 35, 36, 37, 38, 41, 42, 43, 44, 45, 75, 79, 165, 193, 195, 196, 201, 202], "invers": [3, 127], "through": [3, 13, 44, 45, 102, 114, 115, 116, 126, 195, 196, 198, 200, 202], "in_keys_inv": [3, 59, 74, 195, 198, 202], "append_transform": [3, 29, 30, 31, 67, 72, 195, 202, 203], "doubletofloat": [3, 168, 171, 176, 178, 181, 189, 195, 198], "float32": [3, 11, 12, 13, 18, 23, 27, 32, 43, 52, 59, 64, 72, 73, 87, 88, 89, 90, 98, 109, 110, 113, 116, 120, 122, 123, 168, 171, 173, 176, 178, 181, 196, 198, 200, 201, 202, 203], "float64": [3, 21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113, 198, 202], "torchrl": [4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 197, 198, 199, 200, 201], "against": [4, 6, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 81, 113, 114], "latest": [4, 9, 203], "guarante": [4, 21, 35, 36, 37, 38, 41, 42, 44, 45, 79, 203], "wa": [4, 6, 41, 42, 44, 45, 75, 134, 139, 195, 196, 198, 203], "releas": [4, 6, 9, 21, 41, 42, 44, 45, 75, 203], "howev": [4, 6, 21, 41, 42, 44, 45, 71, 75, 195, 196, 201, 202], "project": [4, 16, 17, 18, 19, 20, 22, 27, 28, 113, 114, 196, 202, 203], "willing": 4, "keep": [4, 6, 12, 67, 78, 79, 156, 163, 196, 201, 202, 203], "backward": [4, 21, 41, 42, 44, 45, 79, 195, 196, 201], "older": [4, 6], "If": [4, 5, 6, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 41, 42, 43, 44, 45, 56, 57, 63, 67, 71, 74, 75, 78, 79, 91, 101, 102, 113, 114, 115, 116, 125, 126, 128, 143, 144, 145, 146, 152, 153, 158, 160, 163, 164, 166, 168, 176, 178, 181, 183, 187, 190, 195, 196, 198, 200, 201, 202, 203], "you": [4, 5, 6, 7, 9, 21, 41, 42, 44, 45, 79, 190, 195, 196, 198, 201, 202, 203], "feel": [4, 190, 203], "free": [4, 6, 129, 136, 193, 203], "gladli": 4, "instruct": [5, 9], "prepar": 5, "conda": [5, 6, 190], "assum": [5, 18, 22, 31, 42, 44, 45, 67, 71, 72, 78, 101, 149, 150, 152, 153, 195, 196, 198], "let": [5, 6, 21, 41, 42, 44, 45, 159, 195, 196, 198, 200, 201, 202, 203], "n": [5, 6, 16, 19, 21, 22, 41, 42, 44, 45, 55, 114, 129, 143, 193, 195, 196, 201, 202], "7": [5, 9, 19, 22, 90, 91, 101, 102, 195, 196, 203], "cmake": 5, "14": [5, 10, 64], "activ": [5, 6, 8, 91, 99, 102, 136, 203], "sim": 5, "bullet": 5, "physic": [5, 6, 193, 195], "headless": [5, 6], "mode": [5, 13, 21, 41, 42, 44, 45, 75, 79, 82, 84, 96, 108, 114, 117, 118, 119, 159, 195, 196, 202, 203], "cluster": [5, 6, 190], "withbullet": 5, "forg": [5, 6], "aihabitat": 5, "nightli": 5, "y": [5, 6, 101, 125], "git": [5, 6, 9], "facebookresearch": 5, "subdirectori": 5, "reduc": [5, 19], "verbos": 5, "export": 5, "magnum_log": 5, "quiet": 5, "habitat_sim_log": 5, "remov": [5, 21, 41, 42, 44, 45, 195, 202], "command": [5, 6, 9, 202], "more": [5, 7, 11, 12, 13, 14, 21, 23, 24, 25, 26, 29, 30, 31, 41, 42, 44, 45, 80, 102, 104, 113, 122, 129, 133, 136, 144, 147, 148, 151, 158, 160, 171, 190, 193, 195, 196, 198, 200, 201, 202, 203], "detail": [5, 6, 21, 41, 42, 44, 45, 75, 122, 129, 133, 136, 171, 190, 198, 200, 201], "readm": [5, 6], "md": [5, 6], "habitatenv": [5, 189], "_has_habitat": 5, "check": [5, 6, 10, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 43, 44, 45, 56, 60, 81, 113, 114, 124, 195, 196, 198, 202], "_env": [5, 202], "available_env": [5, 46, 47, 48, 49, 51, 52, 202], "startswith": 5, "importerror": [5, 6, 9], "usr": [5, 6, 9], "x86_64": [5, 6], "linux": [5, 6], "gnu": [5, 6], "libopengl": [5, 6], "undefin": [5, 6, 9, 21, 41, 42, 44, 45, 75], "symbol": [5, 6, 9], "_glapi_tls_curr": [5, 6], "solut": [5, 6, 8, 190, 193, 203], "debug": [5, 202], "link": [5, 6], "right": [5, 6, 101, 195, 196, 202], "replac": [5, 6, 21, 196], "path": [5, 6, 21, 35, 41, 42, 44, 45, 67, 78, 163, 193], "mujoco_env": [5, 6], "proper": [5, 6], "name": [5, 6, 10, 21, 41, 42, 44, 45, 46, 71, 75, 129, 130, 133, 135, 136, 137, 138, 157, 158, 168, 171, 173, 176, 178, 181, 193, 195, 196, 200, 202], "libglvnd": [5, 6], "glx": [5, 6], "cos7": [5, 6], "reinstal": [5, 6], "xvfbwrapper": [5, 6], "config": [5, 6, 166, 168, 169, 170, 171, 173, 176, 178, 179, 181, 184], "var": [5, 6, 21, 41, 42, 44, 45, 75], "ld_preload": [5, 6], "sysroot": [5, 6], "lib64": [5, 6], "libgldispatch": [5, 6], "offici": 6, "repositori": 6, "stand": [6, 87, 88, 89, 198, 202], "joint": [6, 196], "dynam": 6, "contact": 6, "engin": 6, "facilit": [6, 25, 66, 67, 78, 87, 88, 89, 195], "develop": [6, 203], "robot": [6, 67, 78], "biomechan": 6, "graphic": 6, "anim": 6, "machin": [6, 21], "area": 6, "demand": [6, 202], "fast": [6, 8, 137, 195, 196], "accur": [6, 195], "articul": 6, "interact": [6, 13, 114, 202], "recent": [6, 196, 200, 202, 203], "acquir": [6, 195], "access": [6, 21, 41, 42, 44, 45, 67, 187, 190, 201], "whomev": 6, "licenc": 6, "incorpor": [6, 195], "make": [6, 21, 38, 41, 42, 44, 45, 49, 52, 64, 67, 81, 85, 104, 114, 136, 170, 187, 195, 196, 198, 200, 201, 202, 203], "relianc": 6, "obsolet": 6, "seri": [6, 22, 39, 40, 45, 63, 74, 202], "legaci": 6, "document": [6, 21, 41, 42, 44, 45, 75, 203], "capabl": [6, 193, 195, 198, 202], "glfw": 6, "osmesa": 6, "egl": 6, "hand": [6, 195], "gpu": [6, 7, 21, 41, 42, 44, 45, 202], "our": [6, 195, 196, 198, 200, 201, 203], "advic": [6, 202], "sudo": [6, 190], "enabl": [6, 159], "apt": 6, "libglfw3": 6, "libglew2": 6, "libgl1": 6, "mesa": 6, "libosmesa6": 6, "via": [6, 44, 74, 78, 131, 193, 195, 202], "awar": [6, 35, 36, 37, 38], "fact": [6, 196, 202], "indent": 6, "workflow": [6, 87, 88, 89], "glew": 6, "mesalib": 6, "anaconda": 6, "libgl": 6, "cos6": 6, "menpo": 6, "glfw3": 6, "both": [6, 21, 41, 42, 44, 45, 75, 87, 88, 89, 91, 102, 159, 195, 200, 202], "tell": 6, "variabl": [6, 19, 22, 87, 88, 89, 137, 193, 200], "mujoco_gl": 6, "pyopengl_platform": 6, "deactiv": 6, "pre": [6, 21, 36, 41, 42, 44, 45, 67, 78, 202], "binari": [6, 16, 22, 54, 122, 123], "need": [6, 9, 21, 38, 41, 42, 44, 45, 58, 67, 74, 75, 76, 77, 78, 79, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 104, 106, 107, 111, 112, 113, 126, 128, 137, 143, 163, 187, 195, 200, 201, 202, 203], "These": [6, 202], "instead": [6, 19, 21, 41, 42, 44, 45, 58, 67, 74, 76, 77, 78, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 106, 107, 111, 112, 126, 187, 195, 196, 200, 202], "refer": [6, 21, 41, 42, 44, 45, 75, 79, 90, 99, 106, 107, 111, 112, 122, 129, 133, 136, 144, 147, 148, 151, 171, 196, 200, 203], "setup": 6, "mkdir": 6, "cd": 6, "here": [6, 8, 9, 195, 196, 198, 200, 201, 202, 203], "tag": [6, 187], "earlier": [6, 11, 12, 13, 14, 195], "roboti": 6, "u": [6, 9, 195, 200, 202, 203], "download": [6, 9, 67, 78, 195, 196, 197, 198, 200, 201, 202, 203], "html": 6, "wget": 6, "mujoco210": 6, "tar": 6, "gz": 6, "xf": 6, "charg": 6, "obtain": [6, 42, 90, 195, 196], "mjkei": 6, "txt": 6, "mjlib_path": 6, "home": 6, "bin": 6, "libmujoco210": 6, "ld_library_path": 6, "mujoco_py_mujoco_path": 6, "too": [6, 118, 119, 129, 130, 133, 135, 136, 137, 138, 144, 145, 146, 195, 196, 202], "mujoco_py_mjkey_path": 6, "reload": 6, "recommend": [6, 201], "hard": [6, 134, 196, 202], "chang": [6, 21, 35, 36, 37, 38, 41, 42, 44, 45, 75, 79, 195, 201, 202], "later": [6, 95, 114, 195, 196], "known": [6, 7, 195], "try": [6, 125, 196, 201, 202, 203], "nativ": [6, 8, 41, 42, 44, 45, 55, 200], "usag": [6, 138], "local": [6, 9, 13, 21, 29, 41, 42, 44, 45, 75], "modifi": [6, 21, 41, 42, 44, 45, 58, 67, 72, 74, 75, 78, 113, 165, 168, 176, 178, 181, 195, 200], "nvidia": 6, "driver": 6, "hack": 6, "line": [6, 21, 41, 42, 44, 45, 196, 200, 203], "adatp": 6, "script": [6, 168, 171, 173, 176, 178, 181, 183, 187, 193, 195, 196, 198, 200, 201, 202, 203], "go": [6, 200, 202], "unnot": 6, "until": 6, "complet": [6, 8, 42, 190, 196, 198], "mujoco_pi": 6, "trigger": 6, "pipelin": 6, "give": [6, 43, 190, 195, 196, 203], "troubleshoot": 6, "gl": 6, "h": [6, 57, 68, 73], "eglshim": 6, "10": [6, 18, 43, 73, 90, 101, 137, 138, 144, 145, 146, 154, 193, 195, 196, 200, 201, 202, 203], "fatal": 6, "No": [6, 200], "directori": [6, 35, 193], "sure": [6, 38, 85, 187, 195, 200, 201, 202, 203], "glu": 6, "38": 6, "disappear": [6, 198], "filenotfounderror": 6, "errno": 6, "patchelf": 6, "fatalerror": 6, "gladloadgl": 6, "mj_env": 6, "python3": [6, 9], "8": [6, 87, 88, 89, 91, 92, 93, 100, 102, 109, 113, 116, 200, 202, 203], "site": 6, "__init__": [6, 43, 90, 120, 122, 125, 193, 200, 202], "912": 6, "glfwerror": 6, "65537": 6, "sovl": 6, "myscript": 6, "saniti": [6, 81], "cymj": 6, "linuxgpuextensionbuild": 6, "filenam": 6, "runtimeerror": [6, 21, 41, 42, 44, 45, 75, 195, 201, 202], "job": [6, 201], "schedul": [6, 159], "slurm": 6, "mjrendercontext": 6, "pyx": 6, "46": 6, "114": 6, "_setup_opengl_context": 6, "opengl_context": 6, "130": 6, "offscreenopenglcontext": 6, "fail": 6, "opengl": 6, "global": [6, 114, 193, 195, 200], "cuda_visible_devic": 6, "id": [6, 15, 137, 178], "around": [6, 14, 25, 26, 31, 43, 114, 144, 202], "slurm_step_gpu": 6, "enviro": [6, 9], "imag": [6, 46, 57, 67, 73, 78, 102, 196, 201, 202], "black": 6, "read": [6, 11, 12, 13, 14, 35, 36, 37, 38, 42, 44, 45, 74, 87, 88, 89, 108, 113, 114, 116, 129, 130, 133, 135, 136, 137, 138, 144, 145, 146, 163, 168, 176, 178, 181, 195, 196, 198, 200, 202], "miss": [6, 10, 18, 21, 41, 42, 44, 45, 75, 115, 116, 190, 203], "onscreen": 6, "101": 6, "displai": [6, 163, 193, 196], "correctli": [6, 21, 41, 42, 44, 45], "ask": [7, 202], "core": [7, 168, 171, 173, 176, 178, 181, 193, 203], "twice": [7, 138], "much": [7, 23, 25, 32, 135, 136, 201, 202], "spin": [8, 202], "hug": 8, "face": [8, 196, 202], "syllabu": 8, "lectur": 8, "best": [8, 196, 203], "awesom": [8, 201], "curat": 8, "discuss": 8, "reddit": 8, "maintain": 8, "reagent": 8, "product": [8, 185, 186], "orient": [8, 202], "stabl": [8, 9, 195], "baselines3": 8, "tf": 8, "agent": [8, 29, 105], "bandit": 8, "tensorflow": 8, "kera": 8, "acm": 8, "framework": [8, 43, 202, 203], "dopamin": 8, "prototyp": [8, 189], "salina": 8, "flexibl": [8, 193, 200, 202], "simpl": [8, 21, 22, 41, 42, 44, 45, 92, 114, 144, 195, 196, 201, 202], "sequenti": [8, 21, 41, 42, 44, 45, 115, 116, 200, 201, 202], "tianshou": 8, "eleg": 8, "rlpyt": 8, "rllib": 8, "industri": [8, 203], "grade": 8, "factori": 8, "throughput": 8, "cherri": 8, "jaxrl": 8, "space": [8, 22, 27, 107, 113, 114, 116, 122, 123, 195, 202], "mbrl": [8, 43], "rlmeta": 8, "light": 8, "elegantrl": 8, "cloud": 8, "mtrl": 8, "baselin": [8, 196], "relat": [9, 195], "689": 9, "13": [9, 10, 195, 200], "lead": [9, 10, 18, 118, 119, 203], "dist": 9, "_torchrl": 9, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 9, "colab": 9, "notebook": [9, 195, 196, 197, 198, 200, 201, 202, 203], "24": 9, "11": [9, 19, 22, 73, 90, 195], "2022": [9, 203], "12": [9, 201], "pip": [9, 202, 203], "solv": [9, 190, 195, 196], "pip3": 9, "extra": [9, 21, 41, 42, 44, 45, 79], "url": 9, "org": [9, 23, 32, 55, 67, 92, 93, 94, 95, 99, 100, 105, 106, 107, 111, 112, 122, 129, 133, 134, 136, 138, 139, 144, 147, 148, 151, 168, 171, 176, 181], "whl": 9, "There": [9, 193, 196, 202], "upgrad": 9, "previou": [9, 21, 112, 195, 200, 202], "relas": 9, "functorch": [9, 113, 116, 124, 196, 203], "lib_version_her": 9, "module_nam": 10, "str": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 31, 35, 41, 42, 44, 45, 46, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 78, 79, 82, 84, 86, 90, 91, 92, 93, 94, 95, 98, 100, 101, 102, 103, 104, 105, 109, 113, 114, 120, 122, 123, 124, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 143, 144, 145, 146, 157, 158, 159, 162, 166, 168, 171, 176, 178, 179, 181, 187, 195], "from_vers": 10, "to_vers": 10, "decor": 10, "fit": [10, 64, 193], "explicit": [10, 101, 195, 196], "intersect": 10, "rang": [10, 19, 79, 85, 135, 193, 195, 196, 200, 201, 203], "longer": [10, 196], "fun": [10, 200, 201], "self": [10, 21, 25, 41, 42, 43, 44, 45, 58, 67, 72, 75, 78, 90, 113, 120, 122, 125, 193, 200, 201, 203], "x": [10, 15, 18, 21, 73, 91, 97, 100, 101, 102, 122, 125, 126, 128, 147, 148, 149, 150, 151, 152, 153, 163, 196, 200, 203], "indic": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 39, 40, 41, 42, 44, 45, 56, 72, 91, 102, 126, 160, 166, 187, 190, 193, 195, 196, 200, 201, 202], "doesn": 10, "create_env_fn": [11, 12, 13, 14, 44, 45, 195, 203], "sequenc": [11, 12, 13, 14, 18, 20, 23, 24, 26, 30, 39, 40, 54, 55, 56, 57, 59, 61, 62, 64, 65, 68, 69, 70, 71, 73, 74, 79, 86, 91, 96, 102, 108, 109, 114, 115, 116, 120, 158, 160, 162, 163, 168, 176, 178, 181, 196, 198, 200, 202], "callabl": [11, 12, 13, 14, 21, 23, 24, 25, 26, 30, 41, 42, 43, 44, 45, 128, 160, 169, 170, 185, 186, 187], "union": [11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 31, 32, 41, 42, 44, 45, 53, 58, 64, 67, 70, 75, 78, 79, 91, 92, 93, 94, 95, 96, 100, 101, 102, 104, 105, 108, 109, 113, 114, 115, 117, 118, 119, 124, 125, 127, 132, 133, 134, 137, 138, 139, 144, 145, 146, 168, 169, 170, 171, 176, 178, 179, 181, 183, 184, 185, 186, 187], "tensordictbas": [11, 12, 13, 14, 15, 18, 21, 25, 29, 31, 41, 42, 44, 45, 55, 58, 63, 71, 72, 74, 76, 77, 79, 80, 85, 90, 103, 113, 114, 129, 130, 131, 132, 133, 135, 136, 137, 138, 143, 144, 145, 146, 163], "total_fram": [11, 12, 13, 14, 163, 165, 183, 193, 195, 196, 203], "int": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 53, 55, 56, 57, 58, 61, 63, 64, 67, 68, 75, 76, 78, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 104, 105, 106, 107, 110, 111, 112, 113, 114, 117, 118, 122, 123, 129, 130, 131, 135, 136, 137, 138, 154, 155, 156, 159, 160, 163, 164, 168, 171, 176, 178, 179, 181, 185, 186, 187], "create_env_kwarg": [11, 12, 13, 14, 44, 45, 195], "dict": [11, 12, 13, 14, 18, 19, 21, 30, 41, 42, 44, 45, 75, 79, 91, 92, 93, 94, 95, 100, 101, 102, 114, 159, 169, 170, 171, 178, 181, 185, 186, 187, 202], "200": [11, 12, 13, 14, 21, 41, 42, 44, 45, 92, 93, 99, 111, 112, 195], "postproc": [11, 12, 13, 14, 195, 196], "pin_memori": [11, 13, 14, 23, 24, 25, 26, 30, 44, 45, 66, 160, 195, 203], "init_with_lag": [11, 12, 13, 14], "given": [11, 12, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 43, 44, 45, 58, 64, 67, 72, 75, 78, 85, 90, 99, 113, 114, 115, 116, 122, 123, 128, 131, 132, 143, 144, 145, 146, 155, 159, 183, 193, 195, 196, 200, 202], "datacollector": [11, 12, 13, 14, 114], "separ": [11, 12, 14, 15, 131, 137, 138, 195, 202], "synchron": [11, 185, 186], "item": [11, 25, 60, 131, 132, 154, 193, 195, 196, 201], "between": [11, 12, 13, 14, 21, 41, 42, 44, 45, 63, 69, 73, 75, 81, 91, 102, 114, 135, 140, 144, 159, 163, 195, 196, 200, 201, 202], "recept": 11, "safe": [11, 12, 16, 17, 18, 19, 20, 22, 27, 28, 113, 114, 124, 195, 203], "onlin": [11, 14, 129, 136, 154, 187], "env_mak": [11, 12, 13, 183, 202], "linear": [11, 12, 13, 21, 41, 42, 43, 44, 45, 58, 67, 72, 75, 78, 86, 87, 88, 89, 90, 91, 102, 104, 105, 109, 110, 111, 112, 113, 116, 120, 122, 123, 125, 144, 145, 146, 183, 198, 200, 203], "2000": [11, 12, 13, 195], "50": [11, 12, 13], "enumer": [11, 12, 13, 21, 41, 42, 44, 45, 195, 196, 203], "break": [11, 12, 13, 21, 41, 42, 44, 45, 79, 195, 196, 200, 203], "step_count": [11, 12, 13, 195, 196], "traj_id": [11, 12, 13, 15, 195], "shutdown": [11, 12, 13, 14, 195, 203], "del": [11, 12, 13, 195, 203], "bound": [11, 12, 13, 14, 17, 18, 21, 41, 42, 44, 45, 79, 111, 112, 113, 114, 202], "total": [11, 12, 13, 14, 42, 130, 135, 136, 154, 156, 159, 163, 165, 166, 195, 196, 198, 199, 200, 201, 202, 203], "greater": [11, 12, 14, 195, 196, 203], "close": [11, 12, 13, 14, 42, 130, 135, 136, 195, 203], "signal": [11, 12, 14, 195], "sent": [11, 12, 14, 35, 36, 44, 45, 79, 196, 201], "server": [11, 12, 14], "per": [11, 12, 13, 14, 44, 99, 163, 185, 186, 195, 196, 203], "span": [11, 12, 13, 14], "unless": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 200], "traje": [11, 12], "tori": [11, 12], "n_steps_max": [11, 12, 13, 14, 21, 195], "wrap": [11, 12, 13, 14, 21, 41, 42, 44, 45, 81, 87, 88, 89, 195, 196, 200, 202], "track": [11, 12, 13, 14, 71, 79, 156, 195, 196, 201], "independ": [11, 12, 13, 14, 74, 138, 193, 195, 203], "neg": [11, 12, 13, 14, 23, 25, 32, 195], "ignor": [11, 12, 13, 14, 21, 41, 42, 44, 45, 58, 67, 74, 76, 77, 78, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 106, 107, 111, 112, 126, 200, 201, 202], "length": [11, 12, 13, 14, 16, 44, 45, 90, 91, 92, 94, 97, 102, 113, 154, 195, 196, 201, 202], "mainli": [11, 12, 13, 14], "offlin": [11, 12, 13, 14, 193, 203], "postprocessor": [11, 12, 14], "format": [11, 12, 13, 14, 21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113, 202], "accord": [11, 12, 13, 14, 23, 25, 64, 70, 104, 111, 118, 119, 200, 201], "split_trajectori": [11, 12, 13, 14, 189], "inform": [11, 12, 13, 14, 21, 41, 42, 44, 45, 91, 102, 193, 196], "place": [11, 12, 13, 14, 18, 21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 79, 113, 164, 165, 196, 200], "loop": [11, 12, 13, 14, 42, 85, 163, 193, 195, 198, 201], "accommod": [11, 12, 13, 14], "kept": [11, 12, 13, 14, 44, 45, 74, 85, 118, 119], "origin": [11, 12, 13, 14, 67, 75, 78, 113, 114, 134, 136, 178, 181, 198, 201, 202], "long": [11, 12, 13, 14, 19, 22, 196, 201], "updat": [11, 12, 13, 14, 21, 23, 25, 32, 41, 42, 43, 44, 45, 75, 77, 79, 90, 113, 114, 129, 134, 136, 139, 144, 145, 146, 159, 163, 164, 169, 170, 182, 183, 193, 195, 196, 200, 202, 203], "everi": [11, 12, 14, 18, 21, 22, 38, 41, 42, 44, 45, 58, 67, 74, 76, 77, 78, 79, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 106, 107, 111, 112, 126, 163, 193, 195, 196, 201], "truncat": [11, 12, 13, 14, 119, 202], "help": [11, 12, 13, 14, 21, 41, 42, 44, 45, 190, 195], "desynchron": [11, 12, 13, 14], "match": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 54, 55, 56, 57, 58, 59, 61, 62, 64, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 91, 96, 102, 113, 114, 117, 135, 137, 138, 164, 196, 198, 200, 201, 202, 203], "load_state_dict": [11, 12, 13, 14, 21, 41, 42, 44, 45, 75, 79, 193], "state_dict": [11, 12, 13, 14, 21, 41, 42, 44, 45, 75, 79, 187, 193, 202], "ordereddict": [11, 12, 13, 14, 21, 41, 42, 44, 45, 75, 79], "load": [11, 12, 13, 14, 23, 24, 25, 30, 47, 160, 187, 193, 196], "form": [11, 12, 14, 21, 23, 24, 25, 30, 41, 42, 44, 45, 79, 128, 130, 135, 136, 160, 163], "worker0": [11, 12, 14], "state_dict0": [11, 12, 14], "worker1": [11, 12, 14], "state_dict1": [11, 12, 14], "reset_idx": [11, 12, 14], "static_se": [11, 12, 13, 14, 41, 42, 44, 45, 75], "increment": [11, 12, 13, 14, 41, 42, 44, 45, 135], "last": [11, 12, 13, 14, 21, 61, 91, 101, 102, 106, 196, 200, 202, 203], "env_fn": [11, 12, 13, 14, 185, 186], "v0": [11, 12, 14, 42, 48, 49, 51, 52, 58, 75, 79, 183], "env_fn_parallel": [11, 12, 13, 14], "6": [11, 12, 13, 14, 52, 64, 91, 96, 101, 102, 117, 120, 168, 171, 173, 176, 178, 181, 195, 196, 200, 201, 202, 203], "out_se": [11, 12, 13, 14, 202], "shut": [11, 12, 13, 14], "down": [11, 12, 13, 14], "irrevers": [11, 12, 14], "arg": [12, 18, 21, 29, 35, 36, 41, 42, 43, 44, 45, 50, 67, 75, 76, 77, 78, 86, 87, 91, 98, 102, 110, 156, 163, 187], "kwarg": [12, 13, 14, 18, 21, 29, 35, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 67, 72, 75, 76, 77, 78, 86, 87, 91, 92, 93, 94, 95, 98, 100, 102, 103, 108, 109, 110, 114, 117, 119, 130, 135, 143, 156, 163, 168, 169, 170, 171, 176, 178, 181, 184, 185, 186, 203], "envcreat": [13, 183, 184, 187, 195, 196, 202, 203], "return_same_td": 13, "stop": [13, 41, 42, 44, 45, 202, 203], "equat": [13, 128, 130, 139], "exce": 13, "batcher": 13, "cautious": [13, 136], "ad": [13, 21, 23, 24, 25, 26, 29, 30, 31, 32, 41, 42, 44, 45, 71, 75, 104, 105, 130, 135, 136, 160, 195, 202], "whole": [13, 21, 41, 42, 44, 45, 75, 154, 196], "content": [13, 91, 102, 196, 201, 203], "ident": [13, 44, 45, 185, 186, 195, 200, 201], "yield": [13, 21, 41, 42, 44, 45], "chunk": 13, "policy_state_dict": 13, "env_state_dict": 13, "singl": [14, 21, 23, 24, 25, 26, 29, 30, 31, 41, 42, 44, 45, 55, 56, 73, 91, 101, 102, 116, 133, 137, 149, 150, 152, 153, 160, 178, 187, 195, 196, 198, 200, 203], "paradigm": 14, "prefer": 14, "mere": 14, "rollout_tensordict": 15, "zero": [15, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 56, 64, 90, 101, 126, 144, 145, 146, 200, 201, 203], "max": [15, 22, 117, 118, 119, 130, 137, 138, 195], "durat": [15, 196], "int64": [16, 19, 20, 22, 98, 110, 122, 123, 173, 196, 202], "discret": [16, 19, 20, 22, 108, 122, 123, 133], "vector": [16, 22, 44, 45, 92, 94, 102, 146, 152, 153, 189, 195, 196, 198, 200, 202], "assert_is_in": [16, 17, 18, 19, 20, 22, 27, 28], "belong": [16, 17, 18, 19, 20, 22, 27, 28], "otherwis": [16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 64, 72, 75, 79, 118, 119, 138, 159, 193, 195, 202], "encod": [16, 17, 18, 19, 20, 22, 27, 28, 98, 107, 108, 110, 111, 122, 123, 128, 200], "val": [16, 17, 18, 19, 20, 22, 27, 28, 203], "ndarrai": [16, 17, 18, 19, 20, 22, 23, 27, 28, 42], "np": [16, 17, 18, 19, 20, 22, 27, 28, 42, 195], "slice": [16, 17, 18, 19, 20, 22, 27, 28, 201], "tensor_to_index": [16, 17, 18, 19, 20, 22, 27, 28], "is_in": [16, 17, 18, 19, 20, 22, 27, 28, 202], "back": [16, 17, 18, 19, 20, 22, 27, 28, 113, 114, 195], "rand": [16, 17, 18, 19, 20, 22, 27, 28, 43, 52, 90, 202, 203], "uniform": [16, 17, 18, 19, 20, 22, 23, 25, 27, 28, 32], "unbound": [16, 17, 18, 19, 20, 22, 27, 28, 201], "to_numpi": [16, 17, 18, 19, 20, 22, 27, 28], "transformed_in": [16, 17, 18, 19, 20, 22, 27, 28, 74, 75, 117, 187], "type_check": [16, 17, 18, 19, 20, 22, 27, 28], "whose": [16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113, 195], "fill": [16, 17, 18, 19, 20, 22, 27, 28, 72, 201], "minimum": [17, 69, 99, 109, 117, 118, 119, 126, 128, 138, 154, 195, 202], "float": [17, 19, 21, 22, 23, 24, 25, 26, 28, 32, 41, 42, 44, 45, 58, 59, 64, 67, 69, 70, 72, 73, 75, 78, 79, 96, 99, 104, 105, 111, 112, 113, 117, 119, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 160, 161, 195, 196, 202], "upper": 17, "composit": 18, "unnam": 18, "tupl": [18, 21, 23, 30, 41, 42, 44, 45, 53, 64, 92, 101, 102, 131, 144, 145, 146, 172, 174, 177, 180, 201], "effect": [18, 21, 41, 42, 44, 45, 71, 75, 163, 196, 202], "cannot": [18, 201], "pixels_spec": 18, "boundedtensorspec": [18, 87, 88, 89, 109, 189, 202, 203], "32": [18, 91, 92, 93, 100, 102, 106, 107, 195, 196, 202, 203], "observation_vector_spec": 18, "33": [18, 21, 41, 42, 44, 45, 91, 102], "composite_spec": 18, "observation_vector": [18, 56, 168, 171, 176, 178, 181, 195], "within": [18, 21, 31, 41, 42, 44, 45, 58, 67, 74, 76, 77, 78, 79, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 106, 107, 111, 112, 126, 203], "randn": [18, 64, 86, 87, 88, 89, 98, 101, 109, 110, 113, 116, 120, 122, 123, 144, 145, 146, 162, 200, 201, 202, 203], "td_project": 18, "modif": [18, 21, 41, 42, 44, 45, 195, 201], "ob": [18, 59, 64, 73, 120, 144, 145, 146, 195, 198, 202, 203], "yield_nesting_kei": 18, "keysview": 18, "selected_kei": [18, 44, 45, 195], "altern": [19, 128, 196, 201], "onehottensorspec": 19, "categor": [19, 22, 108, 122, 123], "larg": 19, "action_valu": [19, 22, 98, 110, 122, 123, 173, 196], "arang": [19, 22, 98, 122, 154], "view": [19, 21, 22, 41, 42, 44, 45, 102, 122, 195, 201, 202, 203], "argmax": [19, 98, 110, 122, 123], "dim": [19, 56, 101, 187, 195, 201], "chosen_action_valu": [19, 22, 110, 173, 196], "outcom": [19, 22, 96, 117], "nvec": 20, "use_regist": [20, 22], "concaten": [20, 55, 56, 64, 74, 102, 116, 195, 196, 201, 202], "hot": [20, 22, 98, 108, 110, 122, 123], "cardin": [20, 122, 123], "element": [20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 35, 36, 37, 91, 113, 114, 154, 160, 195, 202], "gamma": [21, 129, 130, 131, 132, 133, 135, 136, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 183, 195, 196, 203], "present": [21, 23, 32, 41, 42, 44, 45, 71, 92, 93, 94, 95, 100, 105, 113, 114, 115, 116, 129, 130, 133, 135, 136, 137, 138, 187, 193, 195, 198, 203], "sutton": 21, "r": [21, 64, 114, 128, 143, 202], "1988": 21, "predict": [21, 99, 103, 133, 138, 143], "tempor": [21, 145], "44": 21, "discount": [21, 129, 130, 131, 132, 133, 135, 136, 138, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 195, 196], "factor": [21, 105, 118, 119, 129, 130, 131, 132, 133, 135, 136, 137, 195, 196, 202], "ahead": [21, 202], "add_modul": [21, 41, 42, 44, 45], "add": [21, 23, 24, 25, 26, 29, 30, 31, 39, 40, 41, 42, 44, 45, 104, 129, 158, 160, 195, 196, 201, 203], "child": [21, 41, 42, 44, 45, 201], "current": [21, 41, 42, 44, 45, 50, 75, 82, 99, 101, 112, 122, 123, 168, 176, 193, 195, 202, 203], "fn": [21, 41, 42, 44, 45, 185, 186], "recurs": [21, 41, 42, 44, 45], "submodul": [21, 41, 42, 44, 45], "children": [21, 41, 42, 44, 45], "init": [21, 41, 42, 44, 45, 195, 196], "no_grad": [21, 41, 42, 44, 45, 195, 196], "init_weight": [21, 41, 42, 44, 45], "m": [21, 41, 42, 44, 45, 114, 195, 196], "fill_": [21, 41, 42, 44, 45, 196, 201, 202], "net": [21, 41, 42, 44, 45, 101, 137, 178, 183, 196, 200, 203], "in_featur": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 87, 91, 92, 93, 94, 95, 101, 102, 104, 105, 113, 200], "out_featur": [21, 41, 42, 43, 44, 45, 58, 67, 72, 75, 78, 87, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 104, 105, 113, 195, 196, 200, 203], "bia": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 91, 99, 102, 104, 105, 113, 126, 127, 128, 196], "requires_grad": [21, 41, 42, 44, 45, 195], "bfloat16": [21, 41, 42, 44, 45], "cast": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 79, 113, 168, 171, 173, 176, 178, 181, 201, 202], "datatyp": [21, 41, 42, 44, 45], "direct": [21, 41, 42, 44, 45, 196], "member": [21, 41, 42, 44, 45], "xdoctest": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "skip": [21, 41, 42, 44, 45, 75, 114, 156, 159], "buf": [21, 41, 42, 44, 45], "20l": [21, 41, 42, 44, 45], "1l": [21, 41, 42, 44, 45], "5l": [21, 41, 42, 44, 45], "immedi": [21, 41, 42, 44, 45, 143], "associ": [21, 41, 42, 44, 45, 111, 187, 200], "construct": [21, 41, 42, 44, 45, 112, 114, 163, 168, 176, 200, 202], "copi": [21, 41, 42, 44, 45, 75, 195, 196, 201], "doubl": [21, 28, 41, 42, 44, 45, 58, 59, 67, 72, 73, 75, 78, 113, 132, 133, 134, 137, 139, 195, 202], "eval": [21, 41, 42, 44, 45, 75, 79, 195, 196], "certain": [21, 41, 42, 44, 45, 75, 135, 195, 196, 201, 202], "particular": [21, 41, 42, 44, 45, 75, 193, 196, 198], "behavior": [21, 41, 42, 44, 45, 75], "affect": [21, 41, 42, 44, 45, 74, 75], "dropout": [21, 41, 42, 44, 45, 75], "batchnorm": [21, 41, 42, 44, 45, 75], "disabl": [21, 41, 42, 44, 45, 75, 118, 119, 195], "gradient": [21, 41, 42, 44, 45, 75, 105, 118, 119, 129, 143, 144, 145, 146, 163, 195, 196], "comparison": [21, 41, 42, 44, 45, 75], "similar": [21, 41, 42, 44, 45, 58, 67, 72, 75, 77, 78, 79, 85, 113, 114, 195, 200, 202], "mechan": [21, 41, 42, 44, 45, 75], "confus": [21, 41, 42, 44, 45, 75], "extra_repr": [21, 41, 42, 44, 45], "represent": [21, 41, 42, 44, 45, 67, 78, 195, 196, 202], "string": [21, 41, 42, 44, 45, 114, 128, 162, 168, 176, 178, 181], "forward": [21, 41, 42, 44, 45, 58, 67, 74, 76, 77, 78, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 106, 107, 111, 112, 113, 114, 120, 122, 124, 125, 126, 129, 130, 131, 132, 133, 135, 136, 137, 138, 144, 145, 146, 195, 196, 200, 203], "tennsordict": 21, "dimens": [21, 55, 56, 61, 64, 73, 76, 91, 102, 104, 105, 117, 118, 129, 130, 133, 135, 136, 137, 138, 144, 145, 146, 187, 195, 196, 201], "shift": [21, 126], "nontermin": [21, 195], "termin": [21, 115, 195, 196, 200, 203], "original_reward": [21, 195], "newli": 21, "get_buff": [21, 41, 42, 44, 45], "target": [21, 41, 42, 44, 45, 74, 113, 114, 131, 132, 133, 134, 135, 137, 138, 139, 143, 144, 145, 146, 165, 182, 183, 193, 195, 196], "throw": [21, 41, 42, 44, 45, 202], "docstr": [21, 41, 42, 44, 45], "get_submodul": [21, 41, 42, 44, 45], "explan": [21, 41, 42, 44, 45], "how": [21, 23, 25, 32, 41, 42, 44, 45, 130, 134, 135, 136, 163, 190, 195, 196, 198, 202, 203], "fulli": [21, 41, 42, 44, 45, 196], "qualifi": [21, 41, 42, 44, 45], "referenc": [21, 41, 42, 44, 45], "attributeerror": [21, 41, 42, 44, 45], "invalid": [21, 41, 42, 44, 45], "resolv": [21, 41, 42, 44, 45], "someth": [21, 41, 42, 44, 45, 190, 202], "get_extra_st": [21, 41, 42, 44, 45, 79], "set_extra_st": [21, 41, 42, 44, 45, 79], "pickleabl": [21, 41, 42, 44, 45, 79], "ensur": [21, 23, 25, 32, 41, 42, 44, 45, 67, 79, 124, 195], "pickl": [21, 41, 42, 44, 45, 79], "get_paramet": [21, 41, 42, 44, 45], "sai": [21, 41, 42, 44, 45, 202], "net_b": [21, 41, 42, 44, 45], "net_c": [21, 41, 42, 44, 45], "conv": [21, 41, 42, 44, 45, 91], "conv2d": [21, 41, 42, 44, 45, 91], "16": [21, 41, 42, 44, 45], "kernel_s": [21, 41, 42, 44, 45, 91, 92, 93, 196, 203], "stride": [21, 41, 42, 44, 45, 91, 92, 93, 100, 196, 203], "100": [21, 41, 42, 44, 45, 64, 155, 163, 183, 195, 196, 198, 202, 203], "diagram": [21, 41, 42, 44, 45], "show": [21, 41, 42, 44, 45, 196, 200, 203], "itself": [21, 41, 42, 44, 45], "would": [21, 41, 42, 44, 45, 102, 193, 196, 200, 201, 202], "degre": [21, 41, 42, 44, 45], "named_modul": [21, 41, 42, 44, 45], "o": [21, 41, 42, 44, 45], "transit": [21, 41, 42, 44, 45, 195, 196], "alwai": [21, 41, 42, 44, 45, 63, 196], "half": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113, 195], "ipu": [21, 41, 42, 44, 45], "strict": [21, 41, 42, 44, 45, 75], "descend": [21, 41, 42, 44, 45, 75], "exactli": [21, 41, 42, 44, 45, 50, 75], "persist": [21, 41, 42, 44, 45, 75], "strictli": [21, 41, 42, 44, 45, 75], "enforc": [21, 41, 42, 44, 45, 75, 115], "missing_kei": [21, 41, 42, 44, 45, 75], "unexpected_kei": [21, 41, 42, 44, 45, 75], "unexpect": [21, 41, 42, 44, 45, 75, 202], "namedtupl": [21, 41, 42, 44, 45, 75], "regist": [21, 22, 41, 42, 44, 45, 58, 67, 74, 75, 76, 77, 78, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 106, 107, 111, 112, 126, 193, 200], "duplic": [21, 41, 42, 44, 45, 132, 133, 201], "l": [21, 41, 42, 44, 45, 143], "idx": [21, 41, 42, 44, 45, 201], "named_buff": [21, 41, 42, 44, 45, 196], "prefix": [21, 41, 42, 44, 45, 75, 202], "prepend": [21, 41, 42, 44, 45], "running_var": [21, 41, 42, 44, 45], "named_children": [21, 41, 42, 44, 45], "conv4": [21, 41, 42, 44, 45], "conv5": [21, 41, 42, 44, 45], "memo": [21, 41, 42, 44, 45], "remove_dupl": [21, 41, 42, 44, 45], "alreadi": [21, 41, 42, 44, 45, 114, 195, 196], "named_paramet": [21, 41, 42, 44, 45, 196], "param": [21, 41, 42, 43, 44, 45, 96, 109, 110, 113, 116, 117, 120, 122, 123, 139, 142, 144, 145, 146, 171, 195, 196, 200, 203], "register_backward_hook": [21, 41, 42, 44, 45], "hook": [21, 41, 42, 44, 45, 58, 67, 74, 76, 77, 78, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 106, 107, 110, 111, 112, 122, 123, 126, 156, 157, 159, 161, 163, 164, 189], "removablehandl": [21, 41, 42, 44, 45], "deprec": [21, 41, 42, 44, 45, 75, 202], "favor": [21, 41, 42, 44, 45], "register_full_backward_hook": [21, 41, 42, 44, 45], "futur": [21, 41, 42, 44, 45, 67, 75, 78, 102, 190, 203], "register_buff": [21, 41, 42, 44, 45], "running_mean": [21, 41, 42, 44, 45], "save": [21, 41, 42, 44, 45, 163, 193, 196], "alongsid": [21, 41, 42, 44, 45], "latter": [21, 41, 42, 44, 45, 58, 67, 74, 76, 77, 78, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 106, 107, 111, 112, 126, 185, 186], "num_featur": [21, 41, 42, 44, 45], "register_forward_hook": [21, 41, 42, 44, 45, 122, 123], "signatur": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113, 125], "posit": [21, 29, 30, 31, 41, 42, 44, 45, 75, 76, 200], "won": [21, 41, 42, 44, 45, 67, 78, 163, 187, 195], "inplac": [21, 41, 42, 44, 45, 195], "register_forward_pre_hook": [21, 41, 42, 44, 45], "invok": [21, 29, 41, 42, 44, 45], "respect": [21, 41, 42, 44, 45, 54, 58, 67, 72, 75, 78, 112, 113, 120, 158], "grad_input": [21, 41, 42, 44, 45], "grad_output": [21, 41, 42, 44, 45], "subsequ": [21, 41, 42, 44, 45], "entri": [21, 41, 42, 44, 45, 144, 145, 146, 200], "technic": [21, 41, 42, 44, 45], "reason": [21, 41, 42, 44, 45, 67, 195, 196], "receiv": [21, 41, 42, 44, 45, 74, 102, 196, 198], "similarli": [21, 41, 42, 44, 45, 115, 116, 195, 200, 202], "caller": [21, 41, 42, 44, 45], "register_load_state_dict_post_hook": [21, 41, 42, 44, 45], "post": [21, 41, 42, 44, 45, 196], "incompatible_kei": [21, 41, 42, 44, 45], "consist": [21, 41, 42, 44, 45, 91, 102, 195, 196, 202], "addit": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113, 128, 144, 196], "thrown": [21, 41, 42, 44, 45], "clearn": [21, 41, 42, 44, 45], "register_modul": [21, 41, 42, 44, 45, 193], "alia": [21, 41, 42, 44, 45], "register_paramet": [21, 41, 42, 44, 45], "requires_grad_": [21, 41, 42, 44, 45, 195], "autograd": [21, 41, 42, 44, 45, 75], "freez": [21, 41, 42, 44, 45], "finetun": [21, 41, 42, 44, 45], "individu": [21, 41, 42, 44, 45], "gan": [21, 41, 42, 44, 45], "share_memori": [21, 41, 42, 44, 45, 195], "share_memory_": [21, 41, 42, 44, 45, 201, 203], "destin": [21, 41, 42, 44, 45, 75, 85], "keep_var": [21, 41, 42, 44, 45, 75], "averag": [21, 41, 42, 44, 45, 75, 79, 161, 195, 200], "shallow": [21, 41, 42, 44, 45, 75], "pleas": [21, 41, 42, 44, 45, 75, 190], "design": [21, 22, 41, 42, 44, 45, 75, 129, 130, 133, 135, 136, 137, 138, 195, 196, 198, 201, 202, 203], "detach": [21, 41, 42, 44, 45, 75, 195, 196], "non_block": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113, 196], "memory_format": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "channels_last": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "Its": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "complex": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113, 200], "integr": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 95, 113], "unchang": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "tri": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "convert": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 79, 113, 128, 201], "host": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "pin": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "4d": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "ignore_w": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "1913": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "3420": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "5113": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "2325": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "torch_doctest_cuda1": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "gpu1": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "1914": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "5112": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "2324": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "float16": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "cdoubl": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "3741": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "j": [21, 23, 32, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113, 193, 196], "2382": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "5593": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "4443": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "complex128": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "6122": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "1150": [21, 41, 42, 44, 45, 58, 67, 72, 75, 78, 113], "to_empti": [21, 41, 42, 44, 45], "dst_type": [21, 41, 42, 44, 45], "xpu": [21, 41, 42, 44, 45], "zero_grad": [21, 41, 42, 44, 45, 193, 195, 196, 201], "set_to_non": [21, 41, 42, 44, 45], "context": [21, 41, 42, 44, 45, 104, 141, 142, 144, 147, 148, 151, 159, 195, 196, 200], "grad": [21, 41, 42, 44, 45, 196], "unidimension": [22, 201], "keepdim": 22, "sum": [22, 42, 143, 195, 196, 202], "user_regist": 22, "experiment": [22, 114], "onto": [22, 113, 114], "appear": 22, "priori": 22, "definit": [22, 38], "uniqu": 22, "discretebox": 22, "alpha": [23, 25, 32, 91, 137, 138, 195, 196, 203], "beta": [23, 25, 32, 135, 195, 196, 203], "ep": [23, 25, 32, 79, 130, 139, 161], "1e": [23, 25, 32, 79, 96, 99, 117], "08": [23, 25, 32, 195], "collate_fn": [23, 24, 25, 26, 30, 160, 201, 203], "prefetch": [23, 24, 25, 26, 30, 160, 195, 196], "priorit": [23, 25, 32, 131, 132, 137, 138, 195, 196], "schaul": [23, 32], "quan": [23, 32], "antonogl": [23, 32], "silver": [23, 32], "2015": [23, 32], "arxiv": [23, 32, 55, 67, 92, 93, 94, 95, 99, 100, 105, 106, 107, 111, 112, 122, 129, 133, 134, 136, 138, 139, 144, 147, 148, 151, 168, 171, 176, 181], "ab": [23, 32, 67, 79, 99, 100, 105, 106, 107, 111, 112, 129, 134, 136, 168, 176], "1511": [23, 32, 100], "05952": [23, 32], "expon": [23, 25, 32], "\u03b1": [23, 25, 32], "determin": [23, 25, 32, 67, 78, 196], "delta": [23, 25, 32, 114, 117, 189], "prioriti": [23, 25, 31, 32, 35, 36, 37, 38, 131, 132, 137, 138, 193, 195, 196], "null": [23, 25, 32, 54, 195], "merg": [23, 24, 25, 30, 160], "mini": [23, 24, 25, 30, 160], "style": [23, 24, 25, 30, 160], "rb": [23, 24, 25, 30, 160, 196, 203], "multithread": [23, 24, 25, 30, 160], "instanti": [23, 24, 25, 44, 45, 74, 160, 195, 196, 201, 202], "extend": [23, 24, 25, 26, 29, 30, 31, 39, 40, 160, 193, 195, 196, 203], "multinomi": [23, 25], "update_prior": [23, 25, 32, 193, 195, 203], "circular": [24, 160, 195], "randomli": [24, 26, 63, 64, 72, 114, 160], "select": [24, 25, 26, 29, 30, 31, 44, 45, 63, 90, 160, 162, 195, 196], "priority_kei": [25, 31, 132, 133, 138, 203], "td_error": [25, 31, 131, 132, 133, 137, 138, 195, 203], "prioritizedreplaybuff": [25, 189, 203], "flaot": 25, "return_weight": 25, "_weight": 25, "replaybuff": [26, 29, 31, 40, 179, 183, 189, 203], "meta": [27, 193], "describ": [27, 56, 74, 117, 118, 168, 176, 202], "what": [27, 41, 42, 44, 45, 72, 190, 196, 200, 202, 203], "replay_buff": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 183, 195, 196], "rb_prototyp": [29, 30, 31], "invoc": 29, "friendli": [29, 195], "public": 29, "rpc": 29, "append": [29, 30, 31, 85, 195, 196, 201, 203], "insert_transform": [29, 30, 31], "insert": [29, 30, 31, 39, 40, 76, 196], "include_info": [29, 31], "sampler": [29, 30, 31, 32, 33, 35, 36, 37, 38, 189], "writer": [30, 39, 189], "max_siz": [30, 35, 37, 38, 196], "1_000": 30, "randomsampl": [30, 189], "roundrobinwrit": [30, 189], "kw": [31, 39], "max_capac": 32, "uniformli": [33, 202], "scratch_dir": [35, 195], "memmap": [35, 44, 45, 79], "attach": [35, 36, 37, 38, 196], "entiti": [35, 36, 37, 38], "made": [35, 36, 37, 38, 195], "eg": [35, 36, 37, 38], "alloc": 36, "__len__": 38, "roundrobin": 39, "piec": [39, 40], "_inplace_upd": [41, 44, 45, 75], "_batch_lock": [41, 44, 45, 75], "run_type_check": [41, 43], "compar": [41, 159, 196, 202], "batch_lock": [41, 42, 44, 45, 75], "environn": [41, 42, 43, 44, 45, 75], "immut": [41, 42, 44, 45, 75, 168, 176], "fake_tensordict": [41, 42, 44, 45], "fake": [41, 42, 44, 45], "overridden": [41, 42, 44, 45, 58, 67, 74, 76, 77, 78, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 106, 107, 111, 112, 126], "recip": [41, 42, 44, 45, 58, 67, 74, 76, 77, 78, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 106, 107, 111, 112, 126], "afterward": [41, 42, 44, 45, 58, 67, 74, 76, 77, 78, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 106, 107, 111, 112, 126, 202], "former": [41, 42, 44, 45, 58, 67, 74, 76, 77, 78, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 106, 107, 111, 112, 126], "silent": [41, 42, 44, 45, 58, 67, 74, 76, 77, 78, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 106, 107, 111, 112, 126], "info": [41, 42, 44, 45, 80, 200], "_step": [41, 42, 44, 45], "privat": [41, 42, 44, 45, 202], "_reset": [41, 42, 43, 44, 45, 90, 203], "overwritten": [41, 42, 44, 45, 85, 195], "callback": [41, 42, 44, 45], "auto_reset": [41, 42, 44, 45, 196], "auto_cast_to_devic": [41, 42, 44, 45], "break_when_any_don": [41, 42, 44, 45], "return_contigu": [41, 42, 44, 45, 198], "soon": [41, 42, 44, 45], "smaller": [41, 42, 44, 45], "automat": [41, 42, 44, 45, 64, 86, 109, 196, 203], "lazystackedtensordict": [41, 42, 43, 44, 45, 198, 201, 202, 203], "concomitt": [41, 42, 44, 45], "eras": [41, 42, 44, 45], "workspac": [41, 42, 44, 45], "carri": [41, 42, 44, 45], "discard": [42, 85, 202], "info_dict_read": 42, "set_info_dict_read": 42, "put": [42, 79, 187, 201], "f": [42, 128, 144, 145, 146, 195, 196, 200, 201, 202], "read_act": 42, "read_don": 42, "reader": [42, 195, 196], "frame_skip": [42, 46, 47, 48, 51, 156, 159, 165, 193, 195, 203], "broken": [42, 81], "read_ob": 42, "dictat": [42, 114], "inner": [42, 193, 195, 202], "read_reward": 42, "total_reward": 42, "step_reward": 42, "far": [42, 118, 119, 202], "baseinfodictread": 42, "info_dict": 42, "hoc": 42, "manner": [42, 67, 195, 198], "dict_read": 42, "gymwrapp": [42, 189, 203], "default_info_dict_read": 42, "my_info_kei": 42, "some_env": 42, "meant": 43, "world": [43, 202], "limit": [43, 44, 45, 201], "safeti": 43, "constraint": 43, "behav": [43, 50, 108], "classic": [43, 200, 201], "directli": [43, 187, 196], "unboundedcontinuoustensorspec": [43, 72, 86, 87, 88, 89, 90, 113, 116, 120, 189, 202], "mymbenv": [43, 90], "world_model": [43, 53, 90], "super": [43, 90, 120, 122, 125, 200, 203], "hidden_observ": [43, 90], "mlp": [43, 87, 90, 91, 92, 93, 94, 95, 98, 101, 168, 176, 178, 181, 189, 195, 196, 198, 200, 203], "worldmodelwrapp": [43, 90], "activation_class": [43, 90, 91, 92, 93, 94, 95, 99, 100, 102, 195, 196, 203], "relu": [43, 90, 128], "activate_last_lay": [43, 90, 95, 102], "depth": [43, 90, 91, 92, 93, 94, 95, 98, 99, 100, 102, 106, 107, 196, 198], "equal": [44, 45, 63, 64, 91, 97, 102, 140, 154, 185, 186, 201], "my_env_fun": [44, 45], "custom_attribute_list": [44, 45], "custom_attribut": [44, 45], "custom_method_list": [44, 45], "custom_method": [44, 45], "num_work": [44, 45, 195, 196], "deploi": [44, 45], "creation": [44, 45, 195, 202], "slight": [44, 45, 196], "overhead": [44, 45, 200], "env_input_kei": [44, 45], "permit": [44, 45], "drastic": [44, 45], "decreas": [44, 45], "io": [44, 45], "burden": [44, 45], "_batchedenv": [44, 45], "might": [44, 45, 190, 195, 202], "next_pixel": [44, 45], "next_vector": [44, 45], "amount": [44, 45], "occupi": [44, 45], "excluded_kei": [44, 45], "exclud": [44, 45, 195], "share_individual_td": [44, 45], "lazi": [44, 45, 67, 104, 115, 116, 195, 198, 201, 202], "shared_memori": [44, 45], "policy_proof": [44, 45], "ll": [44, 45, 195, 196, 202], "hidden": [44, 45, 87, 88, 89, 99, 101, 106, 107, 111, 112, 113, 116, 168, 176, 198, 200, 203], "allow_step_when_don": [44, 45], "encount": [44, 45, 190], "update_kwarg": [44, 45], "dm_control": [46, 47, 195, 198, 202], "env_nam": [46, 48, 51, 195, 202], "task_nam": 46, "cheetah": [46, 47, 195, 202], "suit": [47, 202], "disable_env_check": 48, "categorical_action_encod": 49, "serv": [50, 202], "placehold": [50, 75], "secur": 50, "jumanji": [51, 52], "snake": [51, 52], "6x6": [51, 52], "td1": 52, "int32": [52, 201, 203], "5": [52, 90, 91, 98, 99, 101, 102, 110, 118, 119, 122, 123, 135, 195, 196, 201, 202, 203], "12x12": 52, "tsp50": 52, "tsp100": 52, "model_bas": [53, 90], "dreamer": [53, 99], "prior_shap": 53, "belief_shap": 53, "obs_decod": 53, "transform_reward_spec": [54, 58, 59, 67, 69, 70, 74, 76, 78], "cat_dim": [55, 64], "success": [55, 74, 203], "account": 55, "movement": 55, "veloc": [55, 202], "propos": [55, 103, 134, 139, 178, 181], "plai": [55, 202], "atari": [55, 202], "pdf": [55, 92, 93, 94, 95, 122, 133, 137, 138, 139, 144, 147, 148, 151, 171, 178, 181], "1312": 55, "5602": 55, "tranform": [55, 58, 67, 72, 74, 77, 78, 80], "transform_observation_spec": [55, 56, 57, 58, 59, 61, 62, 64, 67, 68, 71, 72, 73, 74, 76, 78], "del_kei": [56, 196, 198], "unsqueeze_if_oor": 56, "observation_posit": 56, "observation_veloc": 56, "delet": [56, 201], "unsqueez": [56, 73, 76, 101, 201], "key1": [56, 154, 162], "key2": [56, 154, 162], "_": [56, 59, 64, 73, 79, 113, 128, 144, 145, 146, 195, 196, 200, 203], "w": [57, 68, 73], "crop": 57, "center": 57, "width": [57, 68, 196], "height": [57, 68, 196], "squar": [57, 118, 119], "rewardsc": [58, 75, 189, 195], "rewardclip": [58, 189], "transformed_env": [58, 74, 75], "dest": [58, 67, 78, 113], "transform_input_spec": [58, 59, 67, 74, 76, 78], "finit": [60, 195], "first_dim": 61, "last_dim": 61, "flatten": [61, 195, 196], "adjac": 61, "turn": [62, 159, 196], "noop": [63, 203], "30": [63, 111, 112, 195, 196], "op": [63, 164], "noop_max": 63, "loc": [64, 70, 87, 88, 89, 109, 114, 116, 118, 119, 166, 168, 176, 178, 181, 187, 195, 196, 200, 203], "standard_norm": [64, 70, 195, 196], "affin": [64, 70], "layer": [64, 79, 91, 92, 93, 99, 102, 104, 105, 106, 107, 121, 195, 196, 200], "set_default_tensor_typ": 64, "doubletensor": 64, "std": [64, 79, 195, 196, 202], "isclos": 64, "next_ob": [64, 144, 145, 146, 195, 203], "normalis": 64, "stat": [64, 166, 187, 195], "rubric": [64, 116], "manual_se": [64, 195, 202, 203], "init_stat": 64, "3752e": 64, "01": [64, 126, 129, 130, 135, 136, 195, 199], "5087e": 64, "03": [64, 195, 199], "9294e": 64, "9636": 64, "5608": 64, "6408": 64, "num_it": 64, "reduce_dim": 64, "constant": [64, 193, 195, 196, 202], "ideal": [64, 195], "statist": [64, 79, 187, 195, 202], "approach": [64, 202], "gaussian": [64, 90, 104, 105], "empir": [64, 90, 114], "deviat": [64, 79, 90, 99, 104, 105, 136, 195, 196], "summari": [64, 79], "r3m": 67, "resnet": [67, 78], "visual": [67, 78], "embed": [67, 77, 78, 87, 88, 89, 113, 200], "ego4d": [67, 78], "paper": [67, 78, 134, 178, 181, 195], "univers": [67, 78], "manipul": [67, 202], "suraj": 67, "nair": 67, "aravind": 67, "rajeswaran": 67, "vikash": [67, 78], "kumar": [67, 78], "chelsea": 67, "finn": 67, "abhinav": 67, "gupta": 67, "2203": 67, "12601": 67, "_init": 67, "snippet": [67, 195], "resenet50": 67, "model_nam": [67, 78], "resnet50": [67, 78], "resnet34": 67, "resnet18": 67, "left": [67, 78, 196], "empti": [67, 75, 78, 195], "r3m_vec": 67, "feed": [67, 78], "244": [67, 78], "hub": [67, 78], "cach": [67, 75, 78, 155], "download_path": [67, 78], "tensor_pixels_kei": [67, 78], "interpol": [68, 196], "bilinear": 68, "clamp_min": 69, "clamp_max": 69, "clip": [69, 130, 163], "clip_min": 69, "scalar": [69, 93, 95, 104, 105, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "clip_max": 69, "episod": [71, 90, 147, 148, 149, 150, 151, 152, 153, 196], "cumul": [71, 90], "episode_": 71, "reward1": 71, "reward2": 71, "ho": 71, "default_valu": 72, "primer": 72, "popul": 72, "drawn": [72, 114], "rel": [72, 96, 117], "fix": [72, 138, 202], "chosen": [72, 168, 176, 178, 181], "mykei": 72, "dtype_or_devic": 72, "255": [73, 202], "precis": [73, 195], "ri": 73, "randint": [73, 195], "out_keys_inv": 74, "principl": 74, "combin": [74, 201], "cattransform": 74, "notabl": 74, "cache_spec": 75, "anymor": [75, 113, 195], "unsqueeze_dim": 76, "vip": [77, 78], "toward": 78, "implicit": 78, "jason": 78, "ma": 78, "shagun": 78, "sodhani": 78, "dinesh": 78, "jayaraman": 78, "osbert": 78, "bastani": 78, "ami": 78, "zhang": 78, "vip_vec": 78, "shared_td": 79, "lock": 79, "decai": [79, 137, 161, 195, 196, 202], "9999": [79, 202], "0001": [79, 99, 161], "fly": [79, 135, 202], "substitut": 79, "to_observation_norm": 79, "rate": [79, 143, 195, 196], "99": [79, 129, 130, 135, 136, 137, 138, 143, 183, 195, 196, 203], "numer": [79, 113, 114, 118, 119, 201, 202], "underflow": 79, "1000": [79, 114, 134, 183, 195, 196], "build_td_for_shared_vecnorm": 79, "memmori": 79, "memmap_": [79, 201], "multiprocess": [79, 202], "mp": 79, "queue": 79, "td_share": 79, "v": [79, 101, 138, 196, 200, 203], "observationnorm": [79, 187, 189, 195, 196, 203], "state_dim": [80, 111, 112], "action_dim": [80, 92, 94, 198], "gsde": [80, 137, 187], "nois": [80, 105, 121, 137, 159, 187, 195], "func": [80, 200], "gsdemodul": 80, "short": 81, "discrep": [81, 129, 130, 131, 132, 135, 136], "imposs": 81, "probabilistictdmodul": [84, 102, 114, 138, 143, 159], "next_tensordict": [85, 195], "keep_oth": 85, "exclude_reward": 85, "exclude_don": 85, "exclude_act": 85, "_run_check": 85, "reflect": [85, 165], "renam": [85, 195], "next_": 85, "funtion": 85, "td_out": [85, 154, 162], "make_polici": 85, "next_td": 85, "next_observ": [85, 101, 198], "translat": [86, 109], "td_modul": [86, 87, 88, 89, 109, 113, 114, 116, 120, 200, 203], "actor": [87, 88, 89, 90, 92, 94, 98, 99, 109, 110, 122, 123, 129, 130, 131, 135, 136, 137, 138, 168, 171, 173, 176, 178, 181, 189, 195, 196, 203], "critic": [87, 129, 130, 135, 136, 138, 200], "get_policy_oper": [87, 88, 89, 168, 176, 200], "alon": [87, 88, 89], "tdmodul": [87, 88, 89, 183], "get_critic_oper": [87, 200], "common_oper": [87, 89], "produc": [87, 89, 91, 102, 108, 202], "policy_oper": [87, 88, 89], "value_oper": [87, 88, 89], "probabilisticactor": [87, 88, 89, 138, 189, 195], "valueoper": [87, 88, 89, 129, 130, 135, 136, 183, 189, 195, 200], "tanhnorm": [87, 88, 89, 109, 116, 189, 200, 203], "normalparamwrapp": [87, 88, 89, 109, 116, 200, 203], "spec_hidden": [87, 89], "module_hidden": [87, 89, 200], "td_module_hidden": [87, 89, 200], "spec_act": [87, 89], "module_act": [87, 89, 200], "td_module_act": [87, 88, 89, 200], "dist_in_kei": [87, 88, 89, 109, 116], "sample_out_kei": [87, 89, 116], "distribution_class": [87, 88, 89, 109, 114, 116, 195, 200, 203], "return_log_prob": [87, 88, 89, 114, 116, 200, 203], "module_valu": [87, 88, 89, 200], "num_cel": [87, 91, 92, 93, 94, 95, 99, 100, 102, 195, 196, 200, 203], "td_module_valu": [87, 88, 89, 200], "state_action_valu": [87, 120, 143, 171, 178, 181, 183, 195, 200, 203], "td_clone": [87, 88, 89, 200], "clone": [87, 88, 89, 113, 168, 176, 178, 181, 195, 196, 200, 201, 203], "sample_log_prob": [87, 88, 89, 114, 116, 168, 176, 178, 200], "tensordictmodulewrapp": [87, 169, 170, 183], "estim": [87, 88, 89, 129, 130, 135, 136, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 195, 196], "get_value_oper": [87, 88, 89, 168, 176], "action_modul": 88, "state_valu": [88, 89, 120, 144, 145, 146, 147, 148, 149, 151, 152, 168, 176, 181, 195], "safesequenti": [88, 89, 189], "planning_horizon": 90, "optim_step": [90, 201], "num_candid": 90, "num_top_k_candid": 90, "reward_kei": 90, "action_kei": [90, 103], "cross": 90, "entropi": [90, 129, 130, 135, 136, 137, 138], "botev": 90, "et": [90, 200], "al": [90, 173, 200, 202], "2013": 90, "cem": 90, "plan": [90, 103], "unit": [90, 99, 106, 107, 111, 112], "varianc": [90, 118, 119], "rank": 90, "top": 90, "k": [90, 196, 200, 201], "repeat": 90, "maximis": [90, 92, 94, 195], "horizon": 90, "modelbasedenv": 90, "mpc": [90, 103], "planner": [90, 189], "candid": 90, "modelbasedenvbas": [90, 103, 189], "next_hidden_observ": 90, "elu": [91, 92, 93, 94, 95, 99, 100, 196, 203], "activation_kwarg": [91, 102], "norm_class": [91, 92, 93, 102], "norm_kwarg": [91, 102], "bias_last_lay": [91, 92, 93, 94, 95, 100, 102], "aggregator_class": [91, 92, 93, 196, 203], "squashdim": [91, 92, 203], "aggregator_kwarg": [91, 92, 93, 196], "squeeze_output": [91, 92, 93, 196], "convolut": [91, 92, 93], "neural": [91, 113, 196, 200, 202], "len": [91, 102, 195, 196, 201, 203], "cell": [91, 102, 195], "kernel": [91, 100, 101], "tanh": [91, 102, 117, 118, 119, 195], "squeez": [91, 196, 201], "singleton": [91, 102], "device_typ": [91, 92, 93, 94, 95, 100, 102, 104, 105], "cnet": 91, "34": [91, 102], "35": [91, 102], "possibli": [91, 113, 163, 195, 202], "rectangular": 91, "conv_net_kwarg": [92, 93], "mlp_net_kwarg": [92, 93, 94], "use_avg_pool": [92, 93], "WITH": [92, 93, 94, 95, 139, 171], "1509": [92, 93, 94, 95, 134, 139, 171], "02971": [92, 93, 94, 95, 139, 171], "convnet": [92, 189, 203], "ndims_in": 92, "avgpool": [92, 93], "128": [93, 195], "adaptiveavgpool2d": [93, 196], "400": [94, 95, 196], "300": [94, 95, 168, 176], "mlp_net_kwargs_net1": 95, "mlp_net_kwargs_net2": 95, "atol": [96, 117], "06": [96, 117, 195], "rtol": [96, 117], "batch_shap": [96, 117], "event_shap": [96, 117], "absolut": [96, 117], "toler": [96, 117], "log_prob": [96, 108, 119], "log": [96, 108, 114, 119, 129, 130, 133, 135, 136, 137, 138, 156, 157, 159, 163, 183, 193, 196, 200, 203], "probabl": [96, 108, 114, 119, 196, 200, 203], "densiti": [96, 108, 119], "mass": [96, 108, 119], "rsampl": [96, 108, 114], "sample_shap": [96, 108], "reparameter": [96, 108], "dqnet": 97, "atom": 97, "action_spac": [98, 110, 122, 123], "one_hot": [98, 110, 122, 123], "onehotdiscretetensorspec": [98, 110, 122, 123, 189], "nbin": [98, 122], "qvalue_actor": [98, 110, 122, 123], "std_bia": 99, "std_min_val": 99, "stochast": [99, 105, 106, 112, 137, 138], "belief": [99, 106, 111, 112], "1912": 99, "016034": 99, "softplu": [99, 126, 127, 128], "out_features_valu": 100, "cnn_kwarg": [100, 196], "mlp_kwarg": [100, 101, 196], "duel": [100, 196], "cnn": [100, 196, 203], "06581": 100, "512": 100, "lstm_kwarg": 101, "embedd": 101, "lstm": 101, "time_step": 101, "2d": 101, "hidden_s": 101, "input_s": 101, "hidden0_in": 101, "hidden1_in": 101, "hidden0_out": 101, "hidden1_out": 101, "single_bias_last_lay": 102, "layer_class": 102, "layer_kwarg": 102, "perceptron": 102, "seamless": 102, "though": 102, "reshap": [102, 201], "lazylinear": 102, "42": [102, 163], "noisylinear": [102, 104, 189, 196], "noisylazylinear": [102, 189], "At": [103, 198], "mpcplanner": 103, "tensordict_out": [103, 200, 202], "std_init": [104, 105], "noisi": [104, 105, 121], "term": [104, 105, 128, 129, 164, 196], "matrix": [104, 105], "ax": [104, 105], "initialize_paramet": 104, "isol": 104, "1706": 105, "10295v3": 105, "induc": 105, "aid": 105, "descent": 105, "remain": 105, "emploi": 105, "decod": [106, 200], "1803": [106, 107], "10122": [106, 107], "rnn_hidden": 106, "latent": 107, "logit": 108, "prob": 108, "One": [108, 113, 140, 195, 200, 201, 202], "excacli": 108, "probabilist": [109, 200, 203], "functional_modul": [109, 110, 113, 116, 120, 122, 123], "make_funct": [109, 110, 113, 116, 120, 122, 123, 124, 196, 200, 203], "tensordict_modul": [109, 110, 116, 122, 123, 124, 125, 199, 200], "hidden_dim": [111, 112], "scale_lb": [111, 112], "posterior": 111, "rssm": [111, 112], "1811": [111, 112], "04551": [111, 112], "obs_embed": 111, "rnn_hidden_dim": 112, "prior": 112, "dream": 112, "recurr": 112, "functionalmodul": [113, 124], "functionalmodulewithbuff": [113, 124], "character": 113, "overflow": [113, 114], "grucel": [113, 200], "td_fmodul": 113, "td_function": 113, "td_state": 113, "vmap": [113, 116, 196, 200, 203], "expand": [113, 116, 200, 203], "isn": 113, "ensembl": [113, 137], "params_repeat": 113, "td_vmap": [113, 116], "irrespect": [113, 114], "random_sampl": [113, 114], "tensor_spec": 114, "default_interaction_mod": [114, 200], "distribution_kwarg": [114, 195], "cache_dist": 114, "n_empirical_estim": 114, "probabilistictensordictmodul": [114, 115, 203], "rule": [114, 200], "interaction_mod": 114, "get_dist": [114, 115, 200], "__call__": [114, 193, 200], "real": 114, "median": 114, "suppli": 114, "fist": 114, "set_interaction_mod": 114, "diverg": [114, 135], "ppo": [114, 130, 135, 136, 168, 175, 176, 189], "partial_toler": [115, 116, 198], "probabilistictensordictsequenti": [115, 200, 203], "tensordictsequenti": [115, 198, 203], "expos": [115, 200], "recov": [115, 198], "who": [115, 116], "AND": [115, 116], "scan": [115, 116], "sub": [115, 116, 154, 163, 198, 202, 203], "tensordictsequenci": 116, "tensordictsequ": 116, "safeprobabilisticmodul": [116, 189], "spec1": 116, "net1": 116, "module1": 116, "td_module1": 116, "spec2": 116, "module2": 116, "td_module2": 116, "ndunboundedcontinuoustensorspec": 116, "min": [117, 118, 119, 130, 137, 138, 195, 196], "event_dim": [117, 118], "upscal": [118, 119], "tanh_loc": [118, 119], "prevent": [118, 119, 135, 136, 195], "tanhtransform": 118, "ultim": [118, 119], "unstabl": [118, 119], "poor": [118, 119], "explos": [118, 119], "practic": [118, 119, 128, 190, 196, 202], "switch": [118, 119], "sigma": [118, 119], "formula": [118, 119, 130, 135, 136], "custommodul": [120, 125], "cat": [120, 195, 201, 203], "var_num": [122, 123], "regard": [122, 129, 133, 136, 201], "perspect": [122, 133], "1707": [122, 133, 136, 168, 176], "06887": [122, 133], "mult_one_hot": [122, 123], "customdistributionalqv": 122, "log_softmax": 122, "greedi": [123, 196], "_src": 124, "wrapper_typ": 124, "mislead": 125, "other_kei": 125, "typeerror": 125, "min_val": [126, 128], "bias": [126, 195], "_bia": 126, "invert": 127, "surject": 128, "exp": 128, "expln": 128, "biased_softplu": [128, 189], "beggin": 128, "biased_softplus_": 128, "syntax": [128, 195], "condit": 128, "met": 128, "safeprobabilisticsequenti": [129, 130, 135, 136, 169, 170, 189], "advantage_kei": [129, 130, 135, 136, 144, 145, 146], "value_target_kei": [129, 136, 144, 145, 146], "value_target": [129, 136, 144, 145, 146], "entropy_bonu": [129, 130, 135, 136], "samples_mc_entropi": [129, 130, 135, 136], "entropy_coef": [129, 130, 135, 136], "critic_coef": [129, 130, 135, 136], "loss_critic_typ": [129, 130, 135, 136], "smooth_l1": [129, 130, 131, 132, 135, 136, 137, 138, 140], "a2c": [129, 167, 189], "loss": [129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 158, 163, 167, 172, 174, 175, 177, 178, 180, 183, 193, 195, 196, 201, 203], "reli": [129, 195, 202], "1602": 129, "01783v2": 129, "advantage_diff_kei": 129, "advantage_diff": 129, "value_error": [129, 144, 145, 146], "loss_function_typ": 129, "l1": [129, 130, 131, 132, 135, 136, 137, 140, 196], "l2": [129, 130, 131, 132, 135, 136, 137, 140], "advantage_modul": 129, "tha": 129, "throughout": [129, 130, 133, 135, 136, 137, 138, 202], "essenti": [129, 130, 133, 135, 136, 137, 138, 195, 201], "backpropag": [129, 130, 133, 135, 136, 137, 138], "clip_epsilon": 130, "threshold": 130, "bonu": [130, 135, 136], "favour": [130, 135, 136], "exploratori": [130, 135, 136], "mont": [130, 135, 136], "carlo": [130, 135, 136], "multipli": [130, 135, 136, 137, 138, 195], "loss_funct": [130, 131, 132, 136, 137, 138, 140], "actor_network": [131, 137, 138], "value_network": [131, 132, 133, 138, 144, 145, 146], "delay_actor": [131, 138], "delay_valu": [131, 132, 133, 138], "input_tensordict": [131, 132, 133], "assign": [131, 132, 195, 200], "qvalueactor": [132, 189, 196], "distributionalqvalueactor": [133, 189], "unlik": [133, 136, 200, 201, 203], "disctount": 133, "loss_modul": [134, 139, 163, 182, 183, 193, 201], "dqnloss": [134, 139, 174, 189], "ddpgloss": [134, 139, 172, 183, 189, 203], "sacloss": [134, 139, 180, 189], "value_network_update_interv": 134, "contrast": 134, "soft": [134, 138, 139], "06461": 134, "dtarg": 135, "decrement": 135, "samples_mc_kl": 135, "kl": 135, "penalti": 135, "old_polici": 135, "new_polici": 135, "adapt": 135, "old": [135, 202], "thu": 135, "distanc": [135, 140, 143, 144], "apart": 135, "proxim": [136, 168, 176], "optimis": [136, 159], "flavour": [136, 195, 203], "constrain": 136, "clipppoloss": [136, 189], "klpenppoloss": [136, 189], "regularis": 136, "06347": [136, 168, 176], "qvalue_network": [137, 138], "num_qvalue_net": [137, 138], "sub_sample_len": 137, "priotity_kei": [137, 138], "alpha_init": [137, 138], "min_alpha": [137, 138], "max_alpha": [137, 138], "fixed_alpha": [137, 138], "target_entropi": [137, 138], "auto": [137, 138], "delay_qvalu": [137, 138], "redq": [137, 177, 178, 189], "openreview": [137, 178], "ay8zfzm0tdd": [137, 178], "idea": [137, 193, 196, 201], "sac": [137, 138, 180, 181, 189], "subsampl": [137, 154, 193], "know": [137, 159, 195, 196, 203], "1801": [138, 181], "01290": [138, 181], "qvalue_network_bi": 138, "prod": 138, "n_action": 138, "redqloss": [139, 189], "999": [139, 161, 196], "epsilon": [139, 196], "prev_param": 139, "new_param": 139, "v2": [140, 149, 150, 152, 153, 168, 171, 176, 178, 181], "strict_shap": 140, "view_a": 140, "hold": [141, 142], "next_val_kei": 143, "pred_next_v": 143, "usus": 143, "mse": [143, 196], "q_valu": 143, "target_valu": 143, "n_steps_to_next": 143, "value_next_st": 143, "lmbda": [144, 146, 147, 149, 150, 151, 152, 153, 195, 196], "average_ga": 144, "differenti": [144, 145, 146, 195], "value_kei": [144, 145, 146], "dimension": [144, 147, 148, 151], "1506": [144, 147, 148, 151], "02438": [144, 147, 148, 151], "exponenti": [144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 161], "propag": [144, 145, 146], "throught": [144, 145, 146], "advang": 144, "gradient_mod": 144, "sign": 144, "unused_arg": 144, "target_param": [144, 145, 146], "relev": [144, 145, 146], "value_net": [144, 145, 146], "98": [144, 145, 146], "94": [144, 146], "unpack": [144, 145, 146], "average_reward": [145, 146], "next_state_valu": [147, 148, 149, 150, 151, 152, 153, 189], "old_stat": [147, 148, 149, 151, 152], "timestep": [147, 148, 149, 150, 151, 152, 153, 196], "new_stat": [147, 148, 149, 150, 151, 152, 153], "flag": [147, 148, 149, 150, 151, 152, 153], "rolling_gamma": [149, 150, 152, 153], "ti": [149, 150, 152, 153], "event": [149, 150, 152, 153], "g1": [149, 150, 152, 153], "g2": [149, 150, 152, 153], "g3": [149, 150, 152, 153], "g4": [149, 150, 152, 153], "v3": [149, 150, 152, 153], "v4": [149, 150, 152, 153, 195], "upcom": [149, 150, 152, 153, 195], "sub_traj_len": 154, "min_sub_traj_len": 154, "full": [154, 195, 196, 198, 200, 201, 202, 203], "20": [154, 195, 196, 202], "register_op": [154, 155, 156, 157, 158, 161, 162, 164, 193], "process_optim_batch": [154, 161, 193], "_process_optim_batch_hook": [154, 193], "interv": [155, 164, 196], "clear": 155, "clear_cuda": 155, "pre_optim_step": [155, 193], "counter": [156, 193], "log_pbar": [156, 157, 159, 161, 193], "progress": [156, 157, 159, 163, 193, 202], "bar": [156, 157, 159, 163, 193], "count_fram": 156, "pre_steps_log": [156, 157, 193], "lognam": 157, "r_train": 157, "logger": [157, 159, 163, 183, 187, 193], "log_reward": 157, "loss_compon": 158, "appl": 158, "omit": [158, 196], "loss_": 158, "optimizer_hook": 158, "loss_actor": 158, "record_interv": [159, 195], "record_fram": [159, 165, 195], "policy_explor": [159, 183, 195], "log_kei": 159, "suffix": 159, "underestim": 159, "suppos": [159, 193, 200, 201, 202], "set_exploration_mod": [159, 189, 195, 196, 203], "reward_evalu": 159, "video": [159, 187, 196], "reward_norm": 161, "batch_process": [161, 162, 193], "update_reward_stat": 161, "normalize_reward": 161, "make_train": [162, 189], "_process_batch_hook": [162, 193], "versatil": 163, "lossmodul": [163, 182, 183], "optim_steps_per_batch": [163, 193, 195], "epoch": 163, "clip_grad_norm": 163, "norm": [163, 196], "partial": [163, 203], "deriv": 163, "clamp": 163, "clip_norm": 163, "progress_bar": 163, "tqdm": [163, 195, 196], "save_trainer_interv": 163, "disk": [163, 193, 196], "10000": [163, 196], "save_trainer_fil": [163, 193], "_datacollector": [164, 169, 170, 183], "update_weights_interv": 164, "sit": [164, 196], "sync": [164, 183, 193, 195, 203], "update_weight": 164, "post_step": [164, 193], "helper": [165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 195, 203], "cfg": [165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187], "dictconfig": [165, 166, 168, 169, 170, 171, 173, 176, 178, 179, 181, 182, 183, 184, 187], "correct": [165, 196], "divid": 165, "unknowingli": 165, "1m": 165, "annealing_fram": [165, 195], "init_env_step": [165, 166, 195], "proof_environ": [166, 168, 171, 173, 176, 178, 181, 195], "sta": 166, "ot": 166, "a2closs": [167, 189], "in_keys_actor": [168, 176], "observation_kei": [168, 176, 178, 181], "actorvalueoper": [168, 176, 189, 200], "dummi": [168, 171, 173, 176, 178, 181, 202], "join": [168, 176], "actorcriticoper": [168, 176, 189], "parser_env_arg": [168, 176, 178], "make_ppo_model": [168, 189], "parser_model_args_continu": [168, 176, 178, 181], "cattensor": [168, 171, 176, 178, 181, 189, 195, 196, 198, 202], "hydra": [168, 171, 173, 176, 178, 181], "config_stor": [168, 171, 173, 176, 178, 181], "configstor": [168, 171, 173, 176, 178, 181], "dataclass": [168, 171, 173, 176, 178, 181], "halfcheetah": [168, 171, 176, 178, 181, 195], "config_field": [168, 171, 173, 176, 178, 181], "config_cl": [168, 171, 173, 176, 178, 181], "ppomodelconfig": [168, 176], "envconfig": [168, 171, 173, 176, 178, 181], "make_dataclass": [168, 171, 173, 176, 178, 181], "cls_name": [168, 171, 173, 176, 178, 181], "config_path": [168, 171, 173, 176, 178, 181], "config_nam": [168, 171, 173, 176, 178, 181], "actor_valu": [168, 176], "17": [168, 171, 176, 178, 181, 195], "actor_model_explor": [169, 170, 195], "make_env_kwarg": [169, 170], "creator": [169, 170, 185, 186, 187], "actor_net_kwarg": [171, 178, 181], "value_net_kwarg": [171, 181], "modulelist": [171, 178, 181], "ddpgcnnactor": [171, 189], "ddpgmlpactor": [171, 189], "ddpgcnnqnet": [171, 189], "ddpgmlpqnet": [171, 189], "ddpgmodelconfig": 171, "targetnetupdat": [172, 174, 177, 180, 182, 183], "discretemodelconfig": 173, "pong": [173, 202], "v5": [173, 202], "pixels_onli": [173, 195, 196, 202, 203], "210": [173, 202], "160": [173, 202], "ppoloss": [175, 189], "redqloss_deprec": 177, "qvalue_net_kwarg": [178, 181], "qvalu": [178, 181, 195, 196], "redqmodelconfig": 178, "replayargsconfig": 179, "sacmodelconfig": 181, "target_net_updat": 183, "constitu": 183, "learnt": [183, 196], "tempfil": 183, "tensorboardlogg": 183, "tensordictreplaybuff": [183, 189, 195, 196], "egreedywrapp": [183, 196], "env_proof": 183, "obs_spec": 183, "net_valu": 183, "dir": [183, 193], "gettempdir": 183, "exp_nam": [183, 195], "argpars": [184, 187], "namespac": [184, 187], "parser": [184, 187], "transformed_env_constructor": [184, 189], "env_kwarg": [185, 186, 195], "num_env_per_collector": [185, 186], "num_collector": [185, 186], "less": [185, 186, 195, 196, 203], "video_tag": 187, "norm_obs_onli": 187, "use_env_cr": 187, "custom_env_mak": 187, "custom_env": 187, "return_transformed_env": 187, "action_dim_gsd": 187, "state_dim_gsd": 187, "batch_dim": [187, 201], "obs_norm_state_dict": 187, "wheter": 187, "maker": [187, 195], "overrid": 187, "exclus": 187, "my": [188, 197], "asyncdatacollector": 189, "tensordictprioritizedreplaybuff": [189, 195, 203], "remotetensordictreplaybuff": 189, "prioritizedsampl": 189, "binarydiscretetensorspec": 189, "multonehotdiscretetensorspec": 189, "discretetensorspec": 189, "multistep": [189, 195, 196], "gymlikeenv": 189, "centercrop": 189, "grayscal": [189, 196, 202], "flattenobserv": 189, "unsqueezetransform": 189, "observationtransform": 189, "catfram": [189, 196], "finitetensordictcheck": 189, "noopresetenv": [189, 202, 203], "binarizereward": 189, "pinmemorytransform": 189, "gsdenois": 189, "tensordictprim": 189, "rewardsum": 189, "r3mtransform": 189, "viptransform": 189, "viprewardtransform": 189, "step_mdp": [189, 195, 196, 202, 203], "get_available_librari": 189, "dreamerenv": 189, "dmcontrolenv": [189, 195, 198, 202], "dmcontrolwrapp": 189, "jumanjienv": 189, "jumanjiwrapp": 189, "actorcriticwrapp": [189, 200], "is_tensordict_compat": 189, "ensure_tensordict_compat": 189, "qvaluehook": 189, "distributionalqvaluehook": 189, "duelingcnndqnet": [189, 196], "distributionaldqnnet": 189, "lstmnet": 189, "dreameractor": 189, "obsencod": 189, "obsdecod": 189, "rssmprior": 189, "rssmposterior": 189, "reset_nois": 189, "cemplann": 189, "mpcplannerbas": 189, "truncatednorm": 189, "tanhdelta": [189, 195], "onehotcategor": 189, "inv_softplu": 189, "distributionaldqnloss": [189, 196], "gae": 189, "tdlambdaestim": 189, "tdestim": 189, "generalized_advantage_estim": 189, "vec_generalized_advantage_estim": 189, "vec_td_lambda_return_estim": 189, "vec_td_lambda_advantage_estim": [189, 195, 196], "td_lambda_return_estim": 189, "td_lambda_advantage_estim": 189, "td_advantage_estim": 189, "distance_loss": 189, "hold_out_net": [189, 195], "hold_out_param": 189, "softupd": [189, 195], "hardupd": [189, 195], "checkpoint": 189, "batchsubsampl": [189, 193], "countframeslog": 189, "logreward": [189, 193], "optimizerhook": 189, "rewardnorm": 189, "selectkei": [189, 193], "updateweight": [189, 193], "clearcudacach": 189, "builder": [189, 196, 202], "sync_sync_collector": 189, "sync_async_collector": 189, "make_collector_offpolici": 189, "make_collector_onpolici": 189, "parallel_env_constructor": [189, 195], "make_sac_loss": 189, "make_a2c_loss": 189, "make_dqn_loss": 189, "make_ddpg_loss": 189, "make_target_updat": 189, "make_ppo_loss": 189, "make_redq_loss": 189, "make_dqn_actor": 189, "make_ddpg_actor": [189, 195], "make_a2c_model": 189, "make_sac_model": 189, "make_redq_model": 189, "make_replay_buff": [189, 195], "correct_for_frame_skip": 189, "get_stats_random_rollout": [189, 195], "implement_for": 189, "journei": 190, "guid": [190, 195, 196], "textbook": 190, "highlight": 190, "readi": [190, 198], "ever": 190, "cover": [190, 203], "bump": 190, "think": [190, 202], "commun": [190, 202], "benefit": 190, "submit": [190, 203], "pr": 190, "outer": [193, 195, 202], "believ": 193, "scheme": [193, 202], "substenti": 193, "sketch": 193, "_pre_steps_log_hook": 193, "_pre_optim_hook": 193, "sub_batch": 193, "_post_loss_hook": 193, "post_loss": 193, "_post_optim_hook": 193, "post_optim": 193, "_post_optim_log": 193, "post_optim_log": 193, "_post_steps_hook": 193, "_post_steps_log_hook": 193, "post_steps_log": 193, "comment": [193, 203], "categori": 193, "extens": 193, "replaybuffertrain": 193, "reserv": 193, "trainerhookbas": 193, "three": [193, 196], "logginghook": 193, "logging_hook": 193, "save_dict": 193, "some_valu": 193, "els": [193, 195, 196], "torchsnapshot": 193, "ckpt_backend": 193, "py": [193, 195, 196, 198, 199, 200, 201, 202, 203], "wherea": [193, 195, 200], "pt": [193, 196], "filepath": 193, "select_kei": 193, "save_train": 193, "load_from_fil": 193, "perfectli": 193, "intern": 194, "click": [195, 196, 198, 200, 201, 202, 203], "tutori": [195, 196, 198, 199, 200, 202, 203], "scratch": [195, 196], "familiar": [195, 196, 202], "suffici": [195, 196], "transpar": [195, 196], "understood": [195, 196], "understand": [195, 196], "sota": [195, 196, 203], "rather": [195, 196], "illustr": [195, 196], "deepcopi": 195, "matplotlib": [195, 196, 202], "pyplot": [195, 196, 202], "plt": [195, 196, 202], "ornsteinuhlenbeckprocesswrapp": 195, "wish": 195, "env_librari": 195, "env_task": 195, "env_arg": 195, "elif": [195, 196], "notimplementederror": 195, "rescal": 195, "leav": 195, "make_transformed_env": 195, "reward_sc": 195, "double_to_float_list": 195, "double_to_float_inv_list": 195, "dmcontrol": 195, "downstream": 195, "_stat": 195, "leverag": [195, 202], "adopt": [195, 202], "env_per_collector": 195, "env_creat": 195, "parallel_env": [195, 202, 203], "td_stat": 195, "_td_stat": 195, "numel": 195, "_td_stats_select": 195, "to_tensordict": [195, 196, 201], "got": [195, 201], "isfinit": 195, "sd": 195, "get_env_stat": 195, "proof_env": 195, "env_spec": 195, "actor_net": 195, "num_lay": 195, "actor_modul": [195, 203], "q_net": 195, "qnet": 195, "frequenc": 195, "make_record": 195, "recorder_obj": 195, "higher": [195, 196, 202], "likelihood": 195, "special": [195, 200, 202], "arrai": 195, "prb": 195, "buffer_s": [195, 196], "buffer_scratch_dir": 195, "adjust": 195, "device_count": [195, 196, 202], "1000000": 195, "ou": 195, "becom": [195, 202], "lr": [195, 196], "5e": 195, "weight_decai": 195, "5000": 195, "warm": 195, "tau": [195, 196], "005": [195, 196], "tmp": 195, "n_steps_forward": 195, "semin": 195, "ornstein": 195, "uhlenbeck": 195, "qnet_target": 195, "annealing_num_step": [195, 196], "9152e": 195, "3728e": 195, "00": [195, 199], "6790e": 195, "02": 195, "8100e": 195, "0432e": 195, "4661e": 195, "7335e": 195, "6330e": 195, "3439e": 195, "04": [195, 199], "3564e": 195, "1885e": 195, "4405e": 195, "1127e": 195, "9993e": 195, "7058e": 195, "7317e": 195, "3022e": 195, "2335": 195, "3836": 195, "3375": 195, "3587": 195, "3461": 195, "4445": 195, "3917": 195, "3489": 195, "5510": 195, "5761": 195, "1731": 195, "4106": 195, "3918": 195, "0521": 195, "4038": 195, "4419": 195, "9479": 195, "coupl": 195, "async": [195, 203], "transmiss": 195, "3018685293": 195, "adam": [195, 196], "optimizer_actor": 195, "optimizer_qnet": 195, "total_collection_step": 195, "scheduler1": 195, "lr_schedul": 195, "cosineannealinglr": 195, "t_max": 195, "scheduler2": 195, "temporarili": 195, "henc": 195, "word": [195, 202], "Then": [195, 198], "fed": 195, "hood": 195, "metadata": [195, 202], "ommit": 195, "earli": [195, 203], "rewards_ev": 195, "norm_factor_train": 195, "collected_fram": 195, "pbar": [195, 196], "r0": 195, "filter": 195, "current_fram": [195, 196], "sampled_tensordict": 195, "backprop": 195, "next_valu": [195, 196], "value_est": 195, "value_loss": 195, "pow": [195, 196], "sampled_tensordict_actor": 195, "actor_loss": 195, "p_in": 195, "p_dest": 195, "zip": [195, 197], "copy_": 195, "b_in": 195, "b_dest": 195, "td_record": 195, "r_evalu": 195, "set_descript": [195, 196], "4f": [195, 196], "2500": 195, "05": [195, 196], "336": 195, "40it": 195, "memmapstorag": 195, "womjkzkm": 195, "057220458984375": 195, "mb": [195, 199], "katlzprn": 195, "002384185791015625": 195, "0whfxw9l": 195, "0095367431640625": 195, "qu9o9ohk": 195, "y22ib1v3": 195, "e8yq4lmv": 195, "8vu1gzuc": 195, "1621246337890625": 195, "a7y6lbka": 195, "a33lnkxl": 195, "7ptpr09a": 195, "e4zoha": 195, "019073486328125": 195, "steps_to_next_ob": [195, 196], "sw0asf4i": 195, "d5uytia4": 195, "tmphbo90nto": 195, "1951": 195, "1591": 195, "9122": 195, "40": 195, "09": 195, "165": 195, "13it": 195, "1926": 195, "60": [195, 203], "1500": 195, "250": 195, "99it": 195, "4415": 195, "80": 195, "254": 195, "08it": 195, "4609": 195, "219": 195, "18it": 195, "9393": 195, "plot": [195, 196], "mention": [195, 196, 202], "figur": [195, 196, 200, 202], "label": [195, 196, 201], "legend": [195, 196], "xlabel": [195, 196], "ylabel": [195, 196], "tight_layout": [195, 196], "devid": 195, "100000": [195, 196], "batch_size_traj": 195, "simplic": [195, 200], "td_lambda": 195, "95": [195, 196], "roughli": [195, 203], "four": 195, "big": [195, 196, 202], "inde": [195, 201], "revert": 195, "compli": [195, 201], "incompat": [195, 201], "bit": 195, "rand_idx": 195, "w2lnmku9": 195, "1444091796875": 195, "i77x9cla": 195, "0476837158203125": 195, "0llbt7lu": 195, "000762939453125": 195, "jj1d907d": 195, "gtatl1jb": 195, "24249267578125": 195, "xoi9mib8": 195, "ik4j3b_m": 195, "19073486328125": 195, "e3n3ob_5": 195, "3814697265625": 195, "h5zrxbe3": 195, "tmp72zvrrmv": 195, "titl": [195, 196], "labmda": 195, "text": 195, "minut": [195, 196, 198, 200, 201, 202, 203], "911": [195, 199], "coding_ddpg": [195, 199], "jupyt": [195, 196, 197, 198, 200, 201, 202, 203], "ipynb": [195, 196, 198, 200, 201, 202, 203], "galleri": [195, 196, 197, 198, 200, 201, 202, 203], "sphinx": [195, 196, 197, 198, 200, 201, 202, 203], "cartpol": [196, 202], "tabl": 196, "pick": 196, "highest": 196, "discretiz": 196, "amort": 196, "seen": 196, "past": 196, "esitm": 196, "ipython": 196, "get_funct": [196, 200], "is_notebook": 196, "shell": 196, "get_ipython": 196, "__class__": 196, "__name__": 196, "zmqinteractiveshel": 196, "qtconsol": 196, "terminalinteractiveshel": 196, "nameerror": 196, "interpret": 196, "hyperparam": 196, "hopefulli": 196, "sentit": 196, "variat": 196, "2e": 196, "harder": [196, 203], "restrict": [196, 202], "n_optim": 196, "n_worker": 196, "smooth": 196, "loos": 196, "notic": 196, "eps_greedy_v": 196, "eps_greedy_val_env": 196, "predefin": 196, "init_bia": 196, "500000": 196, "techin": 196, "dummy_env": 196, "9926319718360901": 196, "07615755498409271": 196, "pole": 196, "un": 196, "actuat": 196, "cart": 196, "frictionless": 196, "upright": [196, 202], "balanc": [196, 202], "pixels_sav": 196, "eval_rollout": 196, "imageio": 196, "mimwrit": 196, "cartpole_random": 196, "mp4": 196, "fp": 196, "480": 196, "360": 196, "trick": 196, "num_ob": 196, "num_act": 196, "make_model": 196, "output_s": 196, "could": [196, 201, 202], "unflatten_kei": 196, "fairli": 196, "params_target": 196, "actor_explor": 196, "eps_init": 196, "eps_end": 196, "pai": 196, "attent": [196, 200], "params_flat": 196, "flatten_kei": 196, "params_target_flat": 196, "600": 196, "bootstrap": 196, "value_next_step": 196, "not_termin": 196, "significantli": 196, "data_collector": 196, "traj_lengths_ev": 196, "grad_val": 196, "traj_length": 196, "mavg": 196, "traj_count": 196, "prev_traj_count": 196, "enough": 196, "send": [196, 201, 203], "sampled_data": 196, "sampled_data_out": 196, "tdstep": 196, "exp_valu": 196, "mse_loss": 196, "gv": 196, "p": [196, 200], "sqrt": 196, "clip_grad_value_": 196, "p1": 196, "p2": 196, "set_": 196, "clear_output": 196, "gcf": 196, "clf": 196, "figsiz": 196, "15": [196, 199], "subplot": [196, 202], "traj": 196, "savefig": 196, "dqn_td0": 196, "png": 196, "traceback": [196, 200, 203], "__w": [196, 200, 203], "doc": [196, 200, 203], "coding_dqn": [196, 199], "382": 196, "indexerror": 196, "imshow": [196, 202], "imread": 196, "axi": 196, "traj_lengths_train": 196, "saved_results_td0": 196, "entir": 196, "capac": 196, "smooth_l1_loss": 196, "clip_grad_norm_": 196, "dqn_tdlambda": 196, "saved_results_tdlambda": 196, "fewer": 196, "load_td0": 196, "load_tdlambda": 196, "frames_td0": 196, "frames_tdlambda": 196, "evals_td0": 196, "evals_tdlambda": 196, "mavgs_td0": 196, "mavgs_tdlambda": 196, "losses_td0": 196, "losses_tdlambda": 196, "values_td0": 196, "values_tdlambda": 196, "grad_vals_td0": 196, "grad_vals_tdlambda": 196, "traj_lengths_td0": 196, "traj_lengths_tdlambda": 196, "traj_count_td0": 196, "traj_count_tdlambda": 196, "td0": 196, "goe": [196, 202], "greatli": 196, "nth": 196, "noticebli": 196, "myopic": 196, "collectorclass": 196, "till": 196, "worst": 196, "accuraci": 196, "fanci": 196, "techniqu": 196, "035": [196, 199], "tutorials_python": 197, "tutorials_jupyt": 197, "distinct": 198, "humanoid": [198, 202], "walk": [198, 202], "env1": 198, "env1_obs_kei": 198, "observation_stand": 198, "env2": 198, "env2_obs_kei": 198, "observation_walk": 198, "tdreset1": 198, "tdreset2": 198, "tdreset": 198, "67": 198, "backbon": [198, 203], "policy_common": 198, "policy_stand": 198, "policy_walk": 198, "seq": 198, "21": 198, "But": 198, "env1_mak": 198, "env2_mak": 198, "_single_task": 198, "td_rollout": 198, "shown": 198, "459": [198, 199], "multi_task": [198, 199], "51": 199, "347": 199, "torch_env": [199, 202], "26": [199, 202], "326": [199, 202], "torchrl_demo": [199, 203], "574": [199, 203], "021": [199, 200], "tensordict_tutori": [199, 201], "020": [199, 201], "recommand": 200, "conveni": [200, 201], "a_out": 200, "mergelinear": 200, "in_1": 200, "in_2": 200, "linear_1": 200, "linear_2": 200, "x_1": 200, "x_2": 200, "multiheadlinear": 200, "out_1": 200, "out_2": 200, "splitlinear": 200, "output_1": 200, "output_2": 200, "split_and_merge_linear": 200, "make_functional_with_buff": 200, "replica": 200, "params_expand": [200, 203], "buffers_expand": 200, "num_model": 200, "group": 200, "zeros_lik": 200, "result_td": 200, "ok": 200, "conflict": 200, "wire": 200, "tensordictsequentialand": 200, "block": 200, "demonstr": [200, 202], "architectur": 200, "vaswani": 200, "2017": 200, "asid": 200, "src": 200, "ffn": 200, "skiplayernorm": 200, "splithead": 200, "tokenstoqkv": 200, "339": 200, "modulenotfounderror": 200, "attentionblocktensordict": 200, "connect": 200, "moreov": 200, "complic": [200, 201, 202], "to_nam": 200, "from_nam": 200, "to_dim": 200, "to_len": 200, "from_dim": 200, "latent_dim": 200, "num_head": 200, "x_out": 200, "attn": 200, "thank": 200, "transformerblockencodertensordict": 200, "transformerblockdecodertensordict": 200, "token": 200, "extract": 200, "x_from": 200, "x_to": 200, "transformerencodertensordict": 200, "num_block": 200, "transformerdecodertensordict": 200, "transformertensordict": 200, "from_len": 200, "x_encod": 200, "x_decod": 200, "ve": 200, "operar": 200, "td_token": 200, "tdtransform": 200, "t1": 200, "t2": 200, "t3": 200, "t4": 200, "minim": 200, "introduc": [200, 201], "margin": 200, "deal": 201, "furthermor": 201, "awai": 201, "organ": 201, "power": 201, "segment": 201, "get_data_a": 201, "get_data_b": 201, "reusabl": 201, "lot": 201, "rewriten": 201, "modal": 201, "get_data": 201, "reus": 201, "argu": 201, "dictdataset": 201, "__getitem__": 201, "collat": 201, "collate_dict_fn": 201, "dict_list": 201, "final_dict": 201, "single_dict": 201, "simpler": 201, "collate_tensordict_fn": 201, "furtherdown": 201, "_permutedtensordict": 201, "_unsqueezedtensordict": 201, "_viewedtensordict": 201, "datastructur": 201, "explicitli": 201, "caramba": 201, "algebra": 201, "foo": [201, 202], "multidimension": 201, "insid": [201, 202], "violat": 201, "err": 201, "resp": 201, "among": 201, "tensordict_clon": 201, "tensodict": 201, "tuple_index": 201, "new_tensordict": 201, "get_sub_tensordict": 201, "subtensordict": 201, "pointer": 201, "subtd": 201, "td2": 201, "booltensor": 201, "fashion": 201, "clonned_tensordict": 201, "staked_tensordict": 201, "contigu": [201, 203], "isinst": 201, "unbind": 201, "list_tensordict": 201, "comeback": 201, "permut": [201, 202, 203], "unsqueezed_tensordict": 201, "role": 202, "supervis": 202, "unsupervis": 202, "rom": 202, "licens": 202, "pygam": 202, "unifi": 202, "_build_env": 202, "sphinx_gallery_start_ignor": 202, "warn": 202, "filterwarn": 202, "sphinx_gallery_end_ignor": 202, "adventur": 202, "ram": 202, "airraid": 202, "alien": 202, "amidar": 202, "assault": 202, "happen": 202, "continuousbox": 202, "tool": 202, "0888": 202, "pack": 202, "brief": 202, "exectut": 202, "brax": 202, "reproduct": 202, "did": 202, "shortcut": 202, "tensordict_tprim": 202, "tensordict_rollout": [202, 203], "quickli": 202, "axesimag": 202, "0x7f566c503550": 202, "inconsist": 202, "supplementari": 202, "again": 202, "acrobot": 202, "swingup": 202, "swingup_spars": 202, "ball_in_cup": 202, "catch": 202, "balance_spars": 202, "three_pol": 202, "two_pol": 202, "finger": 202, "turn_easi": 202, "turn_hard": 202, "fish": 202, "swim": 202, "hopper": 202, "hop": 202, "run_pure_st": 202, "bring_bal": 202, "bring_peg": 202, "insert_bal": 202, "insert_peg": 202, "point_mass": 202, "reacher": 202, "swimmer": 202, "swimmer6": 202, "swimmer15": 202, "walker": 202, "dog": 202, "fetch": 202, "trot": 202, "humanoid_cmu": 202, "lqr": 202, "lqr_2_1": 202, "lqr_6_2": 202, "quadrup": 202, "escap": 202, "stacker": 202, "stack_2": 202, "stack_4": 202, "240": [202, 203], "320": 202, "env_transform": 202, "wrapper1": 202, "wrapper2": 202, "obviou": 202, "truth": 202, "extern": 202, "env0": 202, "env_transformed_bi": 202, "stanc": 202, "transformeddistribut": 202, "base_dist": 202, "unboundeddiscretetensorspec": 202, "concat": 202, "mofidi": 202, "_inv_apply_transform": 202, "_apply_transform": 202, "transformedenviron": 202, "moderet": 202, "computation": 202, "legitim": 202, "side": 202, "incom": 202, "amongst": 202, "has_cuda": 202, "simplest": 202, "wor": 202, "convention": 202, "program": 202, "scope": 202, "difficulti": 202, "markovian": 202, "reconstruct": 202, "3288080526": 202, "sometim": 202, "constain": 202, "sleep": 202, "uuid": 202, "uuid1": 202, "bar_": 202, "get_someth": 202, "bar_feef354": 202, "8b72": 202, "11ed": 202, "a5c3": 202, "0242ac120002": 202, "aargh": 202, "ourselv": 202, "foo_list": 202, "vec_env": 202, "_dispatch_caller_parallel": 202, "0x7f5659917d60": 202, "bar_022f0e14": 202, "8b73": 202, "a1f7": 202, "bar_0245a5b6": 202, "8afb": 202, "bar_0246fc90": 202, "bb38": 202, "121": 202, "122": 202, "parallen": 202, "carefulli": 202, "commonli": 202, "approxim": 202, "particularili": 202, "evolv": 202, "caution": 202, "previous": 202, "steadi": 202, "approx": 202, "1970": 202, "1459": 202, "2070": 202, "2030": 202, "1472": 202, "1783": 202, "_extra_st": 202, "observation_count": 202, "observation_ssq": 202, "observation_sum": 202, "2447": 202, "1405": 202, "0894": 202, "9170": 202, "9383": 202, "9550": 202, "dispach": 202, "small": 202, "absor": 202, "18": 202, "demo": 203, "icml": 203, "dai": 203, "overview": 203, "vmoen": 203, "fb": 203, "question": 203, "team": 203, "decid": 203, "invest": 203, "platform": 203, "media": 203, "truli": 203, "rest": 203, "predominantli": 203, "wandb": 203, "tensorboard": 203, "tensordict1": 203, "tensordict2": 203, "tensordict_sampl": 203, "_sum_tre": 203, "28791671991348267": 203, "06984968483448029": 203, "gym_env": 203, "0000": 203, "366": 203, "431": 203, "tensordict_reset": 203, "469": 203, "out_tensordict": 203, "681": 203, "2004": 203, "valueerror": 203, "myenv": 203, "othertransform": 203, "squash": 203, "backbone_modul": 203, "value_modul": 203, "tensordict_exp": 203, "base_modul": 203, "is_don": 203, "tensordicts_prealloc": 203, "tensordicts_stack": 203, "disclaim": 203, "concatmodul": 203, "loss_fn": 203, "loss_td": 203, "bug": 203, "bc": 203, "year": 203, "roadmap": 203, "compris": 203, "hierarch": 203, "contributor": 203, "curiou": 203, "feedback": 203, "nascent": 203, "pypi": 203}, "objects": {"torchrl._utils": [[10, 0, 1, "", "implement_for"]], "torchrl.collectors": [[11, 0, 1, "", "MultiSyncDataCollector"], [12, 0, 1, "", "MultiaSyncDataCollector"], [13, 0, 1, "", "SyncDataCollector"], [14, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.MultiSyncDataCollector": [[11, 1, 1, "", "load_state_dict"], [11, 1, 1, "", "reset"], [11, 1, 1, "", "set_seed"], [11, 1, 1, "", "shutdown"], [11, 1, 1, "", "state_dict"], [11, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[12, 1, 1, "", "load_state_dict"], [12, 1, 1, "", "reset"], [12, 1, 1, "", "set_seed"], [12, 1, 1, "", "shutdown"], [12, 1, 1, "", "state_dict"], [12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[13, 1, 1, "", "iterator"], [13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "rollout"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[15, 2, 1, "", "split_trajectories"]], "torchrl.data": [[16, 0, 1, "", "BinaryDiscreteTensorSpec"], [17, 0, 1, "", "BoundedTensorSpec"], [18, 0, 1, "", "CompositeSpec"], [19, 0, 1, "", "DiscreteTensorSpec"], [20, 0, 1, "", "MultOneHotDiscreteTensorSpec"], [21, 0, 1, "", "MultiStep"], [22, 0, 1, "", "OneHotDiscreteTensorSpec"], [23, 0, 1, "", "PrioritizedReplayBuffer"], [24, 0, 1, "", "ReplayBuffer"], [25, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [26, 0, 1, "", "TensorDictReplayBuffer"], [27, 0, 1, "", "TensorSpec"], [28, 0, 1, "", "UnboundedContinuousTensorSpec"]], "torchrl.data.BinaryDiscreteTensorSpec": [[16, 1, 1, "", "assert_is_in"], [16, 1, 1, "", "encode"], [16, 1, 1, "", "index"], [16, 1, 1, "", "is_in"], [16, 1, 1, "", "project"], [16, 1, 1, "", "rand"], [16, 1, 1, "", "to_numpy"], [16, 1, 1, "", "type_check"], [16, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[17, 1, 1, "", "assert_is_in"], [17, 1, 1, "", "encode"], [17, 1, 1, "", "index"], [17, 1, 1, "", "is_in"], [17, 1, 1, "", "project"], [17, 1, 1, "", "rand"], [17, 1, 1, "", "to_numpy"], [17, 1, 1, "", "type_check"], [17, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[18, 1, 1, "", "assert_is_in"], [18, 1, 1, "", "encode"], [18, 1, 1, "", "index"], [18, 1, 1, "", "is_in"], [18, 1, 1, "", "keys"], [18, 1, 1, "", "project"], [18, 1, 1, "", "rand"], [18, 1, 1, "", "to_numpy"], [18, 1, 1, "", "type_check"], [18, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[19, 1, 1, "", "assert_is_in"], [19, 1, 1, "", "encode"], [19, 1, 1, "", "index"], [19, 1, 1, "", "is_in"], [19, 1, 1, "", "project"], [19, 1, 1, "", "rand"], [19, 1, 1, "", "to_numpy"], [19, 1, 1, "", "type_check"], [19, 1, 1, "", "zero"]], "torchrl.data.MultOneHotDiscreteTensorSpec": [[20, 1, 1, "", "assert_is_in"], [20, 1, 1, "", "encode"], [20, 1, 1, "", "index"], [20, 1, 1, "", "is_in"], [20, 1, 1, "", "project"], [20, 1, 1, "", "rand"], [20, 1, 1, "", "to_numpy"], [20, 1, 1, "", "type_check"], [20, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[21, 1, 1, "", "add_module"], [21, 1, 1, "", "apply"], [21, 1, 1, "", "bfloat16"], [21, 1, 1, "", "buffers"], [21, 1, 1, "", "children"], [21, 1, 1, "", "cpu"], [21, 1, 1, "", "cuda"], [21, 1, 1, "", "double"], [21, 1, 1, "", "eval"], [21, 1, 1, "", "extra_repr"], [21, 1, 1, "", "float"], [21, 1, 1, "", "forward"], [21, 1, 1, "", "get_buffer"], [21, 1, 1, "", "get_extra_state"], [21, 1, 1, "", "get_parameter"], [21, 1, 1, "", "get_submodule"], [21, 1, 1, "", "half"], [21, 1, 1, "", "ipu"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "modules"], [21, 1, 1, "", "named_buffers"], [21, 1, 1, "", "named_children"], [21, 1, 1, "", "named_modules"], [21, 1, 1, "", "named_parameters"], [21, 1, 1, "", "parameters"], [21, 1, 1, "", "register_backward_hook"], [21, 1, 1, "", "register_buffer"], [21, 1, 1, "", "register_forward_hook"], [21, 1, 1, "", "register_forward_pre_hook"], [21, 1, 1, "", "register_full_backward_hook"], [21, 1, 1, "", "register_load_state_dict_post_hook"], [21, 1, 1, "", "register_module"], [21, 1, 1, "", "register_parameter"], [21, 1, 1, "", "requires_grad_"], [21, 1, 1, "", "set_extra_state"], [21, 1, 1, "", "share_memory"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "to"], [21, 1, 1, "", "to_empty"], [21, 1, 1, "", "train"], [21, 1, 1, "", "type"], [21, 1, 1, "", "xpu"], [21, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[22, 1, 1, "", "assert_is_in"], [22, 1, 1, "", "encode"], [22, 1, 1, "", "index"], [22, 1, 1, "", "is_in"], [22, 1, 1, "", "project"], [22, 1, 1, "", "rand"], [22, 1, 1, "", "to_numpy"], [22, 1, 1, "", "type_check"], [22, 1, 1, "", "zero"]], "torchrl.data.PrioritizedReplayBuffer": [[23, 1, 1, "", "add"], [23, 1, 1, "", "extend"], [23, 1, 1, "", "sample"], [23, 1, 1, "", "update_priority"]], "torchrl.data.ReplayBuffer": [[24, 1, 1, "", "add"], [24, 1, 1, "", "extend"], [24, 1, 1, "", "sample"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[25, 1, 1, "", "add"], [25, 1, 1, "", "extend"], [25, 1, 1, "", "sample"], [25, 1, 1, "", "update_priority"]], "torchrl.data.TensorDictReplayBuffer": [[26, 1, 1, "", "add"], [26, 1, 1, "", "extend"], [26, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.UnboundedContinuousTensorSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "zero"]], "torchrl.data.replay_buffers.rb_prototype": [[29, 0, 1, "", "RemoteTensorDictReplayBuffer"], [30, 0, 1, "", "ReplayBuffer"], [31, 0, 1, "", "TensorDictReplayBuffer"]], "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer": [[29, 1, 1, "", "add"], [29, 1, 1, "", "append_transform"], [29, 1, 1, "", "extend"], [29, 1, 1, "", "insert_transform"], [29, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer": [[30, 1, 1, "", "add"], [30, 1, 1, "", "append_transform"], [30, 1, 1, "", "extend"], [30, 1, 1, "", "insert_transform"], [30, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer": [[31, 1, 1, "", "add"], [31, 1, 1, "", "append_transform"], [31, 1, 1, "", "extend"], [31, 1, 1, "", "insert_transform"], [31, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.samplers": [[32, 0, 1, "", "PrioritizedSampler"], [33, 0, 1, "", "RandomSampler"], [34, 0, 1, "", "Sampler"]], "torchrl.data.replay_buffers.samplers.PrioritizedSampler": [[32, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.storages": [[35, 0, 1, "", "LazyMemmapStorage"], [36, 0, 1, "", "LazyTensorStorage"], [37, 0, 1, "", "ListStorage"], [38, 0, 1, "", "Storage"]], "torchrl.data.replay_buffers.storages.LazyMemmapStorage": [[35, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.LazyTensorStorage": [[36, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.ListStorage": [[37, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.Storage": [[38, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.writers": [[39, 0, 1, "", "RoundRobinWriter"], [40, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.writers.RoundRobinWriter": [[39, 1, 1, "", "add"], [39, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.writers.Writer": [[40, 1, 1, "", "add"], [40, 1, 1, "", "extend"]], "torchrl.envs": [[41, 0, 1, "", "EnvBase"], [42, 0, 1, "", "GymLikeEnv"], [43, 2, 1, "", "ModelBasedEnvBase"], [44, 0, 1, "", "ParallelEnv"], [45, 0, 1, "", "SerialEnv"], [43, 1, 1, "", "rand_step"], [43, 1, 1, "", "reset"], [43, 1, 1, "", "rollout"], [43, 1, 1, "", "set_seed"], [43, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[41, 1, 1, "", "add_module"], [41, 1, 1, "", "apply"], [41, 3, 1, "", "batch_locked"], [41, 1, 1, "", "bfloat16"], [41, 1, 1, "", "buffers"], [41, 1, 1, "", "children"], [41, 1, 1, "", "cpu"], [41, 1, 1, "", "cuda"], [41, 1, 1, "", "double"], [41, 1, 1, "", "eval"], [41, 1, 1, "", "extra_repr"], [41, 1, 1, "", "fake_tensordict"], [41, 1, 1, "", "float"], [41, 1, 1, "", "forward"], [41, 1, 1, "", "get_buffer"], [41, 1, 1, "", "get_extra_state"], [41, 1, 1, "", "get_parameter"], [41, 1, 1, "", "get_submodule"], [41, 1, 1, "", "half"], [41, 1, 1, "", "ipu"], [41, 1, 1, "", "load_state_dict"], [41, 1, 1, "", "modules"], [41, 1, 1, "", "named_buffers"], [41, 1, 1, "", "named_children"], [41, 1, 1, "", "named_modules"], [41, 1, 1, "", "named_parameters"], [41, 1, 1, "", "parameters"], [41, 1, 1, "id0", "rand_step"], [41, 1, 1, "", "register_backward_hook"], [41, 1, 1, "", "register_buffer"], [41, 1, 1, "", "register_forward_hook"], [41, 1, 1, "", "register_forward_pre_hook"], [41, 1, 1, "", "register_full_backward_hook"], [41, 1, 1, "", "register_load_state_dict_post_hook"], [41, 1, 1, "", "register_module"], [41, 1, 1, "", "register_parameter"], [41, 1, 1, "", "requires_grad_"], [41, 1, 1, "id1", "reset"], [41, 1, 1, "id2", "rollout"], [41, 1, 1, "", "set_extra_state"], [41, 1, 1, "id3", "set_seed"], [41, 1, 1, "", "share_memory"], [41, 3, 1, "", "specs"], [41, 1, 1, "", "state_dict"], [41, 1, 1, "id4", "step"], [41, 1, 1, "", "to"], [41, 1, 1, "", "to_empty"], [41, 1, 1, "", "train"], [41, 1, 1, "", "type"], [41, 1, 1, "", "xpu"], [41, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[42, 1, 1, "", "add_module"], [42, 1, 1, "", "apply"], [42, 3, 1, "", "batch_locked"], [42, 1, 1, "", "bfloat16"], [42, 1, 1, "", "buffers"], [42, 1, 1, "", "children"], [42, 1, 1, "", "close"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 1, 1, "", "double"], [42, 1, 1, "", "eval"], [42, 1, 1, "", "extra_repr"], [42, 1, 1, "", "fake_tensordict"], [42, 1, 1, "", "float"], [42, 1, 1, "", "forward"], [42, 1, 1, "", "get_buffer"], [42, 1, 1, "", "get_extra_state"], [42, 1, 1, "", "get_parameter"], [42, 1, 1, "", "get_submodule"], [42, 1, 1, "", "half"], [42, 1, 1, "", "ipu"], [42, 1, 1, "", "load_state_dict"], [42, 1, 1, "", "modules"], [42, 1, 1, "", "named_buffers"], [42, 1, 1, "", "named_children"], [42, 1, 1, "", "named_modules"], [42, 1, 1, "", "named_parameters"], [42, 1, 1, "", "parameters"], [42, 1, 1, "", "rand_step"], [42, 1, 1, "", "read_action"], [42, 1, 1, "", "read_done"], [42, 1, 1, "", "read_obs"], [42, 1, 1, "", "read_reward"], [42, 1, 1, "", "register_backward_hook"], [42, 1, 1, "", "register_buffer"], [42, 1, 1, "", "register_forward_hook"], [42, 1, 1, "", "register_forward_pre_hook"], [42, 1, 1, "", "register_full_backward_hook"], [42, 1, 1, "", "register_load_state_dict_post_hook"], [42, 1, 1, "", "register_module"], [42, 1, 1, "", "register_parameter"], [42, 1, 1, "", "requires_grad_"], [42, 1, 1, "", "reset"], [42, 1, 1, "", "rollout"], [42, 1, 1, "", "set_extra_state"], [42, 1, 1, "", "set_info_dict_reader"], [42, 1, 1, "", "set_seed"], [42, 1, 1, "", "share_memory"], [42, 3, 1, "", "specs"], [42, 1, 1, "", "state_dict"], [42, 1, 1, "", "step"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_empty"], [42, 1, 1, "", "train"], [42, 1, 1, "", "type"], [42, 1, 1, "", "xpu"], [42, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[44, 1, 1, "", "add_module"], [44, 1, 1, "", "apply"], [44, 3, 1, "", "batch_locked"], [44, 1, 1, "", "bfloat16"], [44, 1, 1, "", "buffers"], [44, 1, 1, "", "children"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 1, 1, "", "double"], [44, 1, 1, "", "eval"], [44, 1, 1, "", "extra_repr"], [44, 1, 1, "", "fake_tensordict"], [44, 1, 1, "", "float"], [44, 1, 1, "", "forward"], [44, 1, 1, "", "get_buffer"], [44, 1, 1, "", "get_extra_state"], [44, 1, 1, "", "get_parameter"], [44, 1, 1, "", "get_submodule"], [44, 1, 1, "", "half"], [44, 1, 1, "", "ipu"], [44, 1, 1, "", "load_state_dict"], [44, 1, 1, "", "modules"], [44, 1, 1, "", "named_buffers"], [44, 1, 1, "", "named_children"], [44, 1, 1, "", "named_modules"], [44, 1, 1, "", "named_parameters"], [44, 1, 1, "", "parameters"], [44, 1, 1, "", "rand_step"], [44, 1, 1, "", "register_backward_hook"], [44, 1, 1, "", "register_buffer"], [44, 1, 1, "", "register_forward_hook"], [44, 1, 1, "", "register_forward_pre_hook"], [44, 1, 1, "", "register_full_backward_hook"], [44, 1, 1, "", "register_load_state_dict_post_hook"], [44, 1, 1, "", "register_module"], [44, 1, 1, "", "register_parameter"], [44, 1, 1, "", "requires_grad_"], [44, 1, 1, "", "reset"], [44, 1, 1, "", "rollout"], [44, 1, 1, "", "set_extra_state"], [44, 1, 1, "", "set_seed"], [44, 1, 1, "", "share_memory"], [44, 3, 1, "", "specs"], [44, 1, 1, "", "state_dict"], [44, 1, 1, "", "step"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_empty"], [44, 1, 1, "", "train"], [44, 1, 1, "", "type"], [44, 1, 1, "", "update_kwargs"], [44, 1, 1, "", "xpu"], [44, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[45, 1, 1, "", "add_module"], [45, 1, 1, "", "apply"], [45, 3, 1, "", "batch_locked"], [45, 1, 1, "", "bfloat16"], [45, 1, 1, "", "buffers"], [45, 1, 1, "", "children"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 1, 1, "", "double"], [45, 1, 1, "", "eval"], [45, 1, 1, "", "extra_repr"], [45, 1, 1, "", "fake_tensordict"], [45, 1, 1, "", "float"], [45, 1, 1, "", "forward"], [45, 1, 1, "", "get_buffer"], [45, 1, 1, "", "get_extra_state"], [45, 1, 1, "", "get_parameter"], [45, 1, 1, "", "get_submodule"], [45, 1, 1, "", "half"], [45, 1, 1, "", "ipu"], [45, 1, 1, "", "load_state_dict"], [45, 1, 1, "", "modules"], [45, 1, 1, "", "named_buffers"], [45, 1, 1, "", "named_children"], [45, 1, 1, "", "named_modules"], [45, 1, 1, "", "named_parameters"], [45, 1, 1, "", "parameters"], [45, 1, 1, "", "rand_step"], [45, 1, 1, "", "register_backward_hook"], [45, 1, 1, "", "register_buffer"], [45, 1, 1, "", "register_forward_hook"], [45, 1, 1, "", "register_forward_pre_hook"], [45, 1, 1, "", "register_full_backward_hook"], [45, 1, 1, "", "register_load_state_dict_post_hook"], [45, 1, 1, "", "register_module"], [45, 1, 1, "", "register_parameter"], [45, 1, 1, "", "requires_grad_"], [45, 1, 1, "", "reset"], [45, 1, 1, "", "rollout"], [45, 1, 1, "", "set_extra_state"], [45, 1, 1, "", "set_seed"], [45, 1, 1, "", "share_memory"], [45, 3, 1, "", "specs"], [45, 1, 1, "", "state_dict"], [45, 1, 1, "", "step"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_empty"], [45, 1, 1, "", "train"], [45, 1, 1, "", "type"], [45, 1, 1, "", "update_kwargs"], [45, 1, 1, "", "xpu"], [45, 1, 1, "", "zero_grad"]], "torchrl.envs.libs.dm_control": [[46, 2, 1, "", "DMControlEnv"], [47, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[48, 2, 1, "", "GymEnv"], [49, 2, 1, "", "GymWrapper"]], "torchrl.envs.libs.habitat": [[50, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[51, 2, 1, "", "JumanjiEnv"], [52, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.model_based.dreamer": [[53, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[54, 0, 1, "", "BinarizeReward"], [55, 0, 1, "", "CatFrames"], [56, 0, 1, "", "CatTensors"], [57, 0, 1, "", "CenterCrop"], [58, 0, 1, "", "Compose"], [59, 0, 1, "", "DoubleToFloat"], [60, 0, 1, "", "FiniteTensorDictCheck"], [61, 0, 1, "", "FlattenObservation"], [62, 0, 1, "", "GrayScale"], [63, 0, 1, "", "NoopResetEnv"], [64, 0, 1, "", "ObservationNorm"], [65, 0, 1, "", "ObservationTransform"], [66, 0, 1, "", "PinMemoryTransform"], [67, 0, 1, "", "R3MTransform"], [68, 0, 1, "", "Resize"], [69, 0, 1, "", "RewardClipping"], [70, 0, 1, "", "RewardScaling"], [71, 0, 1, "", "RewardSum"], [72, 0, 1, "", "TensorDictPrimer"], [73, 0, 1, "", "ToTensorImage"], [74, 0, 1, "", "Transform"], [75, 0, 1, "", "TransformedEnv"], [76, 0, 1, "", "UnsqueezeTransform"], [77, 0, 1, "", "VIPRewardTransform"], [78, 0, 1, "", "VIPTransform"], [79, 0, 1, "", "VecNorm"], [80, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[54, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[55, 1, 1, "", "reset"], [55, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[56, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[57, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[58, 1, 1, "", "forward"], [58, 1, 1, "", "reset"], [58, 1, 1, "", "to"], [58, 1, 1, "", "transform_input_spec"], [58, 1, 1, "", "transform_observation_spec"], [58, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DoubleToFloat": [[59, 1, 1, "", "transform_input_spec"], [59, 1, 1, "", "transform_observation_spec"], [59, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.FlattenObservation": [[61, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.GrayScale": [[62, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[63, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[64, 1, 1, "", "init_stats"], [64, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.R3MTransform": [[67, 1, 1, "", "forward"], [67, 1, 1, "", "reset"], [67, 1, 1, "", "to"], [67, 1, 1, "", "transform_input_spec"], [67, 1, 1, "", "transform_observation_spec"], [67, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Resize": [[68, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.RewardClipping": [[69, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[70, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[71, 1, 1, "", "reset"], [71, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[72, 1, 1, "", "reset"], [72, 1, 1, "", "to"], [72, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[73, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[74, 1, 1, "", "forward"], [74, 1, 1, "", "reset"], [74, 1, 1, "", "transform_input_spec"], [74, 1, 1, "", "transform_observation_spec"], [74, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[75, 3, 1, "", "action_spec"], [75, 3, 1, "", "batch_locked"], [75, 1, 1, "", "eval"], [75, 3, 1, "", "input_spec"], [75, 1, 1, "", "load_state_dict"], [75, 3, 1, "", "observation_spec"], [75, 3, 1, "", "reward_spec"], [75, 1, 1, "", "set_seed"], [75, 1, 1, "", "state_dict"], [75, 1, 1, "", "to"], [75, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[76, 1, 1, "", "forward"], [76, 1, 1, "", "transform_input_spec"], [76, 1, 1, "", "transform_observation_spec"], [76, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[77, 1, 1, "", "forward"], [77, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[78, 1, 1, "", "forward"], [78, 1, 1, "", "reset"], [78, 1, 1, "", "to"], [78, 1, 1, "", "transform_input_spec"], [78, 1, 1, "", "transform_observation_spec"], [78, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VecNorm": [[79, 1, 1, "", "build_td_for_shared_vecnorm"], [79, 1, 1, "", "get_extra_state"], [79, 1, 1, "", "set_extra_state"], [79, 1, 1, "", "to_observation_norm"]], "torchrl.envs.transforms.gSDENoise": [[80, 1, 1, "", "reset"]], "torchrl.envs.utils": [[81, 2, 1, "", "check_env_specs"], [82, 2, 1, "", "exploration_mode"], [83, 2, 1, "", "get_available_libraries"], [84, 2, 1, "", "set_exploration_mode"], [85, 2, 1, "", "step_mdp"]], "torchrl.modules": [[86, 0, 1, "", "Actor"], [87, 0, 1, "", "ActorCriticOperator"], [88, 0, 1, "", "ActorCriticWrapper"], [89, 0, 1, "", "ActorValueOperator"], [90, 0, 1, "", "CEMPlanner"], [91, 0, 1, "", "ConvNet"], [92, 0, 1, "", "DdpgCnnActor"], [93, 0, 1, "", "DdpgCnnQNet"], [94, 0, 1, "", "DdpgMlpActor"], [95, 0, 1, "", "DdpgMlpQNet"], [96, 0, 1, "", "Delta"], [97, 0, 1, "", "DistributionalDQNnet"], [98, 0, 1, "", "DistributionalQValueActor"], [99, 0, 1, "", "DreamerActor"], [100, 0, 1, "", "DuelingCnnDQNet"], [101, 0, 1, "", "LSTMNet"], [102, 0, 1, "", "MLP"], [103, 0, 1, "", "MPCPlannerBase"], [104, 0, 1, "", "NoisyLazyLinear"], [105, 0, 1, "", "NoisyLinear"], [106, 0, 1, "", "ObsDecoder"], [107, 0, 1, "", "ObsEncoder"], [108, 0, 1, "", "OneHotCategorical"], [109, 0, 1, "", "ProbabilisticActor"], [110, 0, 1, "", "QValueActor"], [111, 0, 1, "", "RSSMPosterior"], [112, 0, 1, "", "RSSMPrior"], [113, 0, 1, "", "SafeModule"], [114, 0, 1, "", "SafeProbabilisticModule"], [115, 0, 1, "", "SafeProbabilisticSequential"], [116, 0, 1, "", "SafeSequential"], [117, 0, 1, "", "TanhDelta"], [118, 0, 1, "", "TanhNormal"], [119, 0, 1, "", "TruncatedNormal"], [120, 0, 1, "", "ValueOperator"], [121, 0, 1, "", "reset_noise"]], "torchrl.modules.ActorCriticOperator": [[87, 1, 1, "", "get_critic_operator"], [87, 1, 1, "", "get_value_operator"]], "torchrl.modules.ActorCriticWrapper": [[88, 1, 1, "", "get_policy_operator"], [88, 1, 1, "", "get_value_operator"]], "torchrl.modules.ActorValueOperator": [[89, 1, 1, "", "get_policy_operator"], [89, 1, 1, "", "get_value_operator"]], "torchrl.modules.CEMPlanner": [[90, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[91, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[92, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[93, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[94, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[95, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[96, 1, 1, "", "log_prob"], [96, 3, 1, "", "mean"], [96, 3, 1, "", "mode"], [96, 1, 1, "", "rsample"], [96, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[97, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[99, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[100, 1, 1, "", "forward"]], "torchrl.modules.LSTMNet": [[101, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[102, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[103, 1, 1, "", "forward"], [103, 1, 1, "", "planning"]], "torchrl.modules.NoisyLazyLinear": [[104, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[106, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[107, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[108, 1, 1, "", "log_prob"], [108, 3, 1, "", "mode"], [108, 1, 1, "", "rsample"], [108, 1, 1, "", "sample"]], "torchrl.modules.RSSMPosterior": [[111, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[112, 1, 1, "", "forward"]], "torchrl.modules.SafeModule": [[113, 1, 1, "", "random"], [113, 1, 1, "", "random_sample"], [113, 1, 1, "", "to"]], "torchrl.modules.SafeProbabilisticModule": [[114, 1, 1, "", "random"], [114, 1, 1, "", "random_sample"]], "torchrl.modules.TanhDelta": [[117, 3, 1, "", "mean"], [117, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[118, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[119, 1, 1, "", "log_prob"], [119, 3, 1, "", "mode"]], "torchrl.modules.tensordict_module.actors": [[122, 0, 1, "", "DistributionalQValueHook"], [123, 0, 1, "", "QValueHook"]], "torchrl.modules.tensordict_module.common": [[124, 0, 1, "", "ensure_tensordict_compatible"], [125, 0, 1, "", "is_tensordict_compatible"]], "torchrl.modules.utils": [[126, 0, 1, "", "biased_softplus"], [127, 0, 1, "", "inv_softplus"], [128, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[126, 1, 1, "", "forward"]], "torchrl.objectives": [[129, 0, 1, "", "A2CLoss"], [130, 0, 1, "", "ClipPPOLoss"], [131, 0, 1, "", "DDPGLoss"], [132, 0, 1, "", "DQNLoss"], [133, 0, 1, "", "DistributionalDQNLoss"], [134, 0, 1, "", "HardUpdate"], [135, 0, 1, "", "KLPENPPOLoss"], [136, 0, 1, "", "PPOLoss"], [137, 0, 1, "", "REDQLoss"], [138, 0, 1, "", "SACLoss"], [139, 0, 1, "", "SoftUpdate"], [140, 0, 1, "", "distance_loss"], [141, 0, 1, "", "hold_out_net"], [142, 0, 1, "", "hold_out_params"], [143, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[129, 1, 1, "", "forward"]], "torchrl.objectives.ClipPPOLoss": [[130, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[131, 1, 1, "", "forward"]], "torchrl.objectives.DQNLoss": [[132, 1, 1, "", "forward"]], "torchrl.objectives.DistributionalDQNLoss": [[133, 1, 1, "", "forward"]], "torchrl.objectives.KLPENPPOLoss": [[135, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[136, 1, 1, "", "forward"]], "torchrl.objectives.REDQLoss": [[137, 1, 1, "", "forward"]], "torchrl.objectives.SACLoss": [[138, 1, 1, "", "forward"]], "torchrl.objectives.value": [[144, 0, 1, "", "GAE"], [145, 0, 1, "", "TDEstimate"], [146, 0, 1, "", "TDLambdaEstimate"]], "torchrl.objectives.value.GAE": [[144, 1, 1, "", "forward"]], "torchrl.objectives.value.TDEstimate": [[145, 1, 1, "", "forward"]], "torchrl.objectives.value.TDLambdaEstimate": [[146, 1, 1, "", "forward"]], "torchrl.objectives.value.functional": [[147, 0, 1, "", "generalized_advantage_estimate"], [148, 0, 1, "", "td_advantage_estimate"], [149, 0, 1, "", "td_lambda_advantage_estimate"], [150, 0, 1, "", "td_lambda_return_estimate"], [151, 0, 1, "", "vec_generalized_advantage_estimate"], [152, 0, 1, "", "vec_td_lambda_advantage_estimate"], [153, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.trainers": [[154, 0, 1, "", "BatchSubSampler"], [155, 0, 1, "", "ClearCudaCache"], [156, 0, 1, "", "CountFramesLog"], [157, 0, 1, "", "LogReward"], [158, 0, 1, "", "OptimizerHook"], [159, 0, 1, "", "Recorder"], [160, 0, 1, "", "ReplayBuffer"], [161, 0, 1, "", "RewardNormalizer"], [162, 0, 1, "", "SelectKeys"], [163, 0, 1, "", "Trainer"], [164, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.ReplayBuffer": [[160, 1, 1, "", "add"], [160, 1, 1, "", "extend"], [160, 1, 1, "", "sample"]], "torchrl.trainers.helpers": [[165, 2, 1, "", "correct_for_frame_skip"], [166, 2, 1, "", "get_stats_random_rollout"], [167, 2, 1, "", "make_a2c_loss"], [168, 2, 1, "", "make_a2c_model"], [169, 2, 1, "", "make_collector_offpolicy"], [170, 2, 1, "", "make_collector_onpolicy"], [171, 2, 1, "", "make_ddpg_actor"], [172, 2, 1, "", "make_ddpg_loss"], [173, 2, 1, "", "make_dqn_actor"], [174, 2, 1, "", "make_dqn_loss"], [175, 2, 1, "", "make_ppo_loss"], [176, 2, 1, "", "make_ppo_model"], [177, 2, 1, "", "make_redq_loss"], [178, 2, 1, "", "make_redq_model"], [179, 2, 1, "", "make_replay_buffer"], [180, 2, 1, "", "make_sac_loss"], [181, 2, 1, "", "make_sac_model"], [182, 2, 1, "", "make_target_updater"], [183, 2, 1, "", "make_trainer"], [184, 2, 1, "", "parallel_env_constructor"], [185, 2, 1, "", "sync_async_collector"], [186, 2, 1, "", "sync_sync_collector"], [187, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "torchrl": [0, 1, 2, 3, 5, 191, 192, 193, 194, 195, 196, 202, 203], "document": [0, 8], "tutori": 0, "refer": [0, 189], "indic": 0, "tabl": 0, "collector": [1, 195], "packag": [1, 2, 3, 191, 192, 193, 194], "data": [1, 2, 195, 203], "helper": [1, 3], "function": [1, 203], "replai": [2, 195, 203], "buffer": [2, 195, 203], "compos": [2, 58], "prototyp": 2, "tensorspec": [2, 27], "util": [2, 191, 192, 193], "env": [3, 202, 203], "vector": [3, 203], "transform": [3, 74, 195, 200, 202, 203], "domain": 3, "specif": [3, 198], "librari": [3, 203], "work": [4, 5], "gym": [4, 202], "version": [4, 6, 9], "habitat": 5, "lab": 5, "set": [5, 201], "up": 5, "your": [5, 195], "environ": [5, 6, 195, 196, 198, 202, 203], "instal": [5, 6, 203], "from": [5, 6], "pip": [5, 6], "us": [5, 8, 195, 196, 200, 203], "common": [5, 6], "issu": [5, 6, 9], "about": 6, "mujoco": 6, "prerequisit": 6, "render": [6, 202], "all": 6, "new": 6, "bindindg": 6, "2": [6, 200], "1": [6, 200], "old": 6, "bind": 6, "py": 6, "option": 6, "clone": 6, "repo": [6, 8], "when": 6, "pro": 7, "tip": 7, "train": [7, 195, 196], "cluster": 7, "resourc": 8, "pytorch": [8, 9], "functorch": [8, 200], "rl": [8, 203], "blog": 8, "websit": 8, "educ": 8, "forum": 8, "how": 9, "reproduc": 9, "workaround": 9, "implement_for": 10, "multisyncdatacollector": 11, "multiasyncdatacollector": 12, "syncdatacollector": 13, "asyncdatacollector": 14, "split_trajectori": 15, "binarydiscretetensorspec": 16, "boundedtensorspec": 17, "compositespec": 18, "discretetensorspec": 19, "multonehotdiscretetensorspec": 20, "multistep": 21, "onehotdiscretetensorspec": 22, "prioritizedreplaybuff": 23, "replaybuff": [24, 30, 160], "tensordictprioritizedreplaybuff": 25, "tensordictreplaybuff": [26, 31], "unboundedcontinuoustensorspec": 28, "remotetensordictreplaybuff": 29, "prioritizedsampl": 32, "randomsampl": 33, "sampler": 34, "lazymemmapstorag": 35, "lazytensorstorag": 36, "liststorag": 37, "storag": 38, "roundrobinwrit": 39, "writer": 40, "envbas": 41, "gymlikeenv": 42, "modelbasedenvbas": 43, "parallelenv": 44, "serialenv": 45, "dmcontrolenv": 46, "dmcontrolwrapp": 47, "gymenv": 48, "gymwrapp": 49, "habitatenv": 50, "jumanjienv": 51, "jumanjiwrapp": 52, "dreamerenv": 53, "binarizereward": 54, "catfram": 55, "cattensor": 56, "centercrop": 57, "doubletofloat": 59, "finitetensordictcheck": 60, "flattenobserv": 61, "grayscal": 62, "noopresetenv": 63, "observationnorm": 64, "observationtransform": 65, "pinmemorytransform": 66, "r3mtransform": 67, "resiz": 68, "rewardclip": 69, "rewardsc": 70, "rewardsum": 71, "tensordictprim": 72, "totensorimag": 73, "transformedenv": 75, "unsqueezetransform": 76, "viprewardtransform": 77, "viptransform": 78, "vecnorm": [79, 202], "gsdenois": 80, "check_env_spec": 81, "exploration_mod": 82, "get_available_librari": 83, "set_exploration_mod": 84, "step_mdp": 85, "actor": [86, 200], "actorcriticoper": [87, 200], "actorcriticwrapp": 88, "actorvalueoper": 89, "cemplann": 90, "convnet": 91, "ddpgcnnactor": 92, "ddpgcnnqnet": 93, "ddpgmlpactor": 94, "ddpgmlpqnet": 95, "delta": 96, "distributionaldqnnet": 97, "distributionalqvalueactor": 98, "dreameractor": 99, "duelingcnndqnet": 100, "lstmnet": 101, "mlp": 102, "mpcplannerbas": 103, "noisylazylinear": 104, "noisylinear": 105, "obsdecod": 106, "obsencod": 107, "onehotcategor": 108, "probabilisticactor": [109, 200], "qvalueactor": 110, "rssmposterior": 111, "rssmprior": 112, "safemodul": 113, "safeprobabilisticmodul": 114, "safeprobabilisticsequenti": 115, "safesequenti": 116, "tanhdelta": 117, "tanhnorm": 118, "truncatednorm": 119, "valueoper": 120, "reset_nois": 121, "distributionalqvaluehook": 122, "qvaluehook": 123, "ensure_tensordict_compat": 124, "is_tensordict_compat": 125, "biased_softplu": 126, "inv_softplu": 127, "map": 128, "a2closs": 129, "clipppoloss": 130, "ddpgloss": 131, "dqnloss": 132, "distributionaldqnloss": 133, "hardupd": 134, "klpenppoloss": 135, "ppoloss": 136, "redqloss": 137, "sacloss": 138, "softupd": 139, "distance_loss": 140, "hold_out_net": 141, "hold_out_param": 142, "next_state_valu": 143, "gae": 144, "tdestim": 145, "tdlambdaestim": 146, "generalized_advantage_estim": 147, "td_advantage_estim": 148, "td_lambda_advantage_estim": 149, "td_lambda_return_estim": 150, "vec_generalized_advantage_estim": 151, "vec_td_lambda_advantage_estim": 152, "vec_td_lambda_return_estim": 153, "batchsubsampl": 154, "clearcudacach": 155, "countframeslog": 156, "logreward": 157, "optimizerhook": 158, "record": [159, 195], "rewardnorm": 161, "selectkei": 162, "trainer": [163, 193], "updateweight": 164, "correct_for_frame_skip": 165, "get_stats_random_rollout": 166, "make_a2c_loss": 167, "make_a2c_model": 168, "make_collector_offpolici": 169, "make_collector_onpolici": 170, "make_ddpg_actor": 171, "make_ddpg_loss": 172, "make_dqn_actor": 173, "make_dqn_loss": 174, "make_ppo_loss": 175, "make_ppo_model": 176, "make_redq_loss": 177, "make_redq_model": 178, "make_replay_buff": 179, "make_sac_loss": 180, "make_sac_model": 181, "make_target_updat": 182, "make_train": 183, "parallel_env_constructor": 184, "sync_async_collector": 185, "sync_sync_collector": 186, "transformed_env_constructor": 187, "readm": [188, 197], "demo": [188, 197], "api": 189, "knowledg": 190, "base": [190, 196], "contribut": [190, 203], "content": 190, "modul": [191, 203], "tensordict": [191, 201, 203], "hook": [191, 193], "model": [191, 195, 196, 203], "explor": 191, "planner": 191, "distribut": 191, "object": [192, 195, 203], "dqn": [192, 196], "ddpg": [192, 195], "sac": 192, "redq": 192, "ppo": 192, "a2c": 192, "return": 192, "checkpoint": 193, "builder": 193, "_util": 194, "code": [195, 196, 201], "parallel": [195, 198, 202], "execut": [195, 198], "normal": 195, "observ": 195, "build": [195, 196], "evalu": 195, "hyperparamet": [195, 196], "initi": 195, "time": [195, 199], "polici": [195, 198], "experi": 195, "result": 195, "sampl": 195, "trajectori": 195, "td": [195, 196], "lambda": [195, 196], "pixel": 196, "The": 196, "problem": 196, "deep": 196, "q": 196, "network": 196, "regular": 196, "loop": 196, "conclus": 196, "possibl": 196, "improv": [196, 201], "task": 198, "multi": 198, "divers": 198, "rollout": [198, 202], "comput": 199, "tensordictmodul": [200, 203], "exampl": 200, "simpl": 200, "usag": [200, 201], "multipl": 200, "input": 200, "3": 200, "output": 200, "4": 200, "combin": 200, "tensordictsequenti": 200, "5": 200, "compat": 200, "do": [200, 201], "": 200, "don": 200, "t": [200, 201], "probabilistictensordictmodul": 200, "showcas": 200, "implement": 200, "benchmark": 200, "modular": 201, "can": 201, "i": 201, "thi": 201, "python": 201, "dict": 201, "structur": 201, "dictionari": 201, "featur": 201, "get": 201, "kei": 201, "valu": 201, "updat": 201, "tensordict_or_dict": 201, "del": 201, "tensor": 201, "batch": 201, "size": 201, "devic": [201, 202], "memori": 201, "share": 201, "via": 201, "physic": 201, "oper": 201, "spec": 202, "seed": 202, "reset": 202, "step": 202, "frame_skip": 202, "deepmind": 202, "control": 202, "run": 202, "close": 202, "access": 202, "attribut": 202, "kwarg": 202, "introduct": 203, "chang": 203, "config": 203, "sequenc": 203, "program": 203, "ensembl": 203, "meta": 203, "special": 203, "class": 203, "state": 203}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Welcome to the TorchRL Documentation!": [[0, "welcome-to-the-torchrl-documentation"]], "Tutorials:": [[0, null]], "References:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "torchrl.collectors package": [[1, "torchrl-collectors-package"]], "Data collectors": [[1, "data-collectors"]], "Helper functions": [[1, "helper-functions"]], "torchrl.data package": [[2, "torchrl-data-package"]], "Replay Buffers": [[2, "replay-buffers"]], "Composable Replay Buffers (Prototype)": [[2, "composable-replay-buffers-prototype"]], "TensorSpec": [[2, "tensorspec"], [27, "tensorspec"]], "Utils": [[2, "utils"], [191, "utils"], [192, "utils"], [193, "utils"]], "torchrl.envs package": [[3, "torchrl-envs-package"]], "Vectorized envs": [[3, "vectorized-envs"]], "Transforms": [[3, "transforms"], [195, "transforms"], [203, "transforms"]], "Helpers": [[3, "helpers"]], "Domain-specific": [[3, "domain-specific"]], "Libraries": [[3, "libraries"]], "Working with gym": [[4, "working-with-gym"]], "Versioning": [[4, "versioning"]], "Working with habitat-lab": [[5, "working-with-habitat-lab"]], "Setting up your environment for habitat and torchrl": [[5, "setting-up-your-environment-for-habitat-and-torchrl"]], "Installing habitat-lab from pip": [[5, "installing-habitat-lab-from-pip"]], "Installing TorchRL": [[5, "installing-torchrl"]], "Using Habitat": [[5, "using-habitat"]], "Common issues": [[5, "common-issues"]], "About MuJoCo": [[6, "about-mujoco"]], "Installing MuJoCo": [[6, "installing-mujoco"]], "Prerequisite for rendering (all mujoco versions)": [[6, "prerequisite-for-rendering-all-mujoco-versions"]], "New bindindgs (\u2265 2.1.2)": [[6, "new-bindindgs-2-1-2"]], "Old bindings (\u2264 2.1.1): mujoco-py": [[6, "old-bindings-2-1-1-mujoco-py"]], "Option 1: installing mujoco-py with pip": [[6, "option-1-installing-mujoco-py-with-pip"]], "Option 2: installing mujoco-py from a cloned repo": [[6, "option-2-installing-mujoco-py-from-a-cloned-repo"]], "Common Issues when rendering Mujoco Environments": [[6, "common-issues-when-rendering-mujoco-environments"]], "Pro-tips": [[7, "pro-tips"]], "Training on a cluster": [[7, "training-on-a-cluster"]], "Useful resources": [[8, "useful-resources"]], "Pytorch documentation": [[8, "pytorch-documentation"]], "functorch documentation": [[8, "functorch-documentation"]], "Useful RL repos, blogs and websites": [[8, "useful-rl-repos-blogs-and-websites"]], "Educational resource": [[8, "educational-resource"]], "Forums": [[8, "forums"]], "Repos": [[8, "repos"]], "Versioning Issues": [[9, "versioning-issues"]], "Pytorch version": [[9, "pytorch-version"]], "How to reproduce": [[9, "how-to-reproduce"]], "Workarounds": [[9, "workarounds"]], "implement_for": [[10, "implement-for"]], "MultiSyncDataCollector": [[11, "multisyncdatacollector"]], "MultiaSyncDataCollector": [[12, "multiasyncdatacollector"]], "SyncDataCollector": [[13, "syncdatacollector"]], "aSyncDataCollector": [[14, "asyncdatacollector"]], "split_trajectories": [[15, "split-trajectories"]], "BinaryDiscreteTensorSpec": [[16, "binarydiscretetensorspec"]], "BoundedTensorSpec": [[17, "boundedtensorspec"]], "CompositeSpec": [[18, "compositespec"]], "DiscreteTensorSpec": [[19, "discretetensorspec"]], "MultOneHotDiscreteTensorSpec": [[20, "multonehotdiscretetensorspec"]], "MultiStep": [[21, "multistep"]], "OneHotDiscreteTensorSpec": [[22, "onehotdiscretetensorspec"]], "PrioritizedReplayBuffer": [[23, "prioritizedreplaybuffer"]], "ReplayBuffer": [[24, "replaybuffer"], [30, "replaybuffer"], [160, "replaybuffer"]], "TensorDictPrioritizedReplayBuffer": [[25, "tensordictprioritizedreplaybuffer"]], "TensorDictReplayBuffer": [[26, "tensordictreplaybuffer"], [31, "tensordictreplaybuffer"]], "UnboundedContinuousTensorSpec": [[28, "unboundedcontinuoustensorspec"]], "RemoteTensorDictReplayBuffer": [[29, "remotetensordictreplaybuffer"]], "PrioritizedSampler": [[32, "prioritizedsampler"]], "RandomSampler": [[33, "randomsampler"]], "Sampler": [[34, "sampler"]], "LazyMemmapStorage": [[35, "lazymemmapstorage"]], "LazyTensorStorage": [[36, "lazytensorstorage"]], "ListStorage": [[37, "liststorage"]], "Storage": [[38, "storage"]], "RoundRobinWriter": [[39, "roundrobinwriter"]], "Writer": [[40, "writer"]], "EnvBase": [[41, "envbase"]], "GymLikeEnv": [[42, "gymlikeenv"]], "ModelBasedEnvBase": [[43, "modelbasedenvbase"]], "ParallelEnv": [[44, "parallelenv"]], "SerialEnv": [[45, "serialenv"]], "DMControlEnv": [[46, "dmcontrolenv"]], "DMControlWrapper": [[47, "dmcontrolwrapper"]], "GymEnv": [[48, "gymenv"]], "GymWrapper": [[49, "gymwrapper"]], "HabitatEnv": [[50, "habitatenv"]], "JumanjiEnv": [[51, "jumanjienv"]], "JumanjiWrapper": [[52, "jumanjiwrapper"]], "DreamerEnv": [[53, "dreamerenv"]], "BinarizeReward": [[54, "binarizereward"]], "CatFrames": [[55, "catframes"]], "CatTensors": [[56, "cattensors"]], "CenterCrop": [[57, "centercrop"]], "Compose": [[58, "compose"]], "DoubleToFloat": [[59, "doubletofloat"]], "FiniteTensorDictCheck": [[60, "finitetensordictcheck"]], "FlattenObservation": [[61, "flattenobservation"]], "GrayScale": [[62, "grayscale"]], "NoopResetEnv": [[63, "noopresetenv"]], "ObservationNorm": [[64, "observationnorm"]], "ObservationTransform": [[65, "observationtransform"]], "PinMemoryTransform": [[66, "pinmemorytransform"]], "R3MTransform": [[67, "r3mtransform"]], "Resize": [[68, "resize"]], "RewardClipping": [[69, "rewardclipping"]], "RewardScaling": [[70, "rewardscaling"]], "RewardSum": [[71, "rewardsum"]], "TensorDictPrimer": [[72, "tensordictprimer"]], "ToTensorImage": [[73, "totensorimage"]], "Transform": [[74, "transform"]], "TransformedEnv": [[75, "transformedenv"]], "UnsqueezeTransform": [[76, "unsqueezetransform"]], "VIPRewardTransform": [[77, "viprewardtransform"]], "VIPTransform": [[78, "viptransform"]], "VecNorm": [[79, "vecnorm"], [202, "vecnorm"]], "gSDENoise": [[80, "gsdenoise"]], "check_env_specs": [[81, "check-env-specs"]], "exploration_mode": [[82, "exploration-mode"]], "get_available_libraries": [[83, "get-available-libraries"]], "set_exploration_mode": [[84, "set-exploration-mode"]], "step_mdp": [[85, "step-mdp"]], "Actor": [[86, "actor"], [200, "actor"]], "ActorCriticOperator": [[87, "actorcriticoperator"], [200, "actorcriticoperator"]], "ActorCriticWrapper": [[88, "actorcriticwrapper"]], "ActorValueOperator": [[89, "actorvalueoperator"]], "CEMPlanner": [[90, "cemplanner"]], "ConvNet": [[91, "convnet"]], "DdpgCnnActor": [[92, "ddpgcnnactor"]], "DdpgCnnQNet": [[93, "ddpgcnnqnet"]], "DdpgMlpActor": [[94, "ddpgmlpactor"]], "DdpgMlpQNet": [[95, "ddpgmlpqnet"]], "Delta": [[96, "delta"]], "DistributionalDQNnet": [[97, "distributionaldqnnet"]], "DistributionalQValueActor": [[98, "distributionalqvalueactor"]], "DreamerActor": [[99, "dreameractor"]], "DuelingCnnDQNet": [[100, "duelingcnndqnet"]], "LSTMNet": [[101, "lstmnet"]], "MLP": [[102, "mlp"]], "MPCPlannerBase": [[103, "mpcplannerbase"]], "NoisyLazyLinear": [[104, "noisylazylinear"]], "NoisyLinear": [[105, "noisylinear"]], "ObsDecoder": [[106, "obsdecoder"]], "ObsEncoder": [[107, "obsencoder"]], "OneHotCategorical": [[108, "onehotcategorical"]], "ProbabilisticActor": [[109, "probabilisticactor"], [200, "probabilisticactor"]], "QValueActor": [[110, "qvalueactor"]], "RSSMPosterior": [[111, "rssmposterior"]], "RSSMPrior": [[112, "rssmprior"]], "SafeModule": [[113, "safemodule"]], "SafeProbabilisticModule": [[114, "safeprobabilisticmodule"]], "SafeProbabilisticSequential": [[115, "safeprobabilisticsequential"]], "SafeSequential": [[116, "safesequential"]], "TanhDelta": [[117, "tanhdelta"]], "TanhNormal": [[118, "tanhnormal"]], "TruncatedNormal": [[119, "truncatednormal"]], "ValueOperator": [[120, "valueoperator"]], "reset_noise": [[121, "reset-noise"]], "DistributionalQValueHook": [[122, "distributionalqvaluehook"]], "QValueHook": [[123, "qvaluehook"]], "ensure_tensordict_compatible": [[124, "ensure-tensordict-compatible"]], "is_tensordict_compatible": [[125, "is-tensordict-compatible"]], "biased_softplus": [[126, "biased-softplus"]], "inv_softplus": [[127, "inv-softplus"]], "mappings": [[128, "mappings"]], "A2CLoss": [[129, "a2closs"]], "ClipPPOLoss": [[130, "clipppoloss"]], "DDPGLoss": [[131, "ddpgloss"]], "DQNLoss": [[132, "dqnloss"]], "DistributionalDQNLoss": [[133, "distributionaldqnloss"]], "HardUpdate": [[134, "hardupdate"]], "KLPENPPOLoss": [[135, "klpenppoloss"]], "PPOLoss": [[136, "ppoloss"]], "REDQLoss": [[137, "redqloss"]], "SACLoss": [[138, "sacloss"]], "SoftUpdate": [[139, "softupdate"]], "distance_loss": [[140, "distance-loss"]], "hold_out_net": [[141, "hold-out-net"]], "hold_out_params": [[142, "hold-out-params"]], "next_state_value": [[143, "next-state-value"]], "GAE": [[144, "gae"]], "TDEstimate": [[145, "tdestimate"]], "TDLambdaEstimate": [[146, "tdlambdaestimate"]], "generalized_advantage_estimate": [[147, "generalized-advantage-estimate"]], "td_advantage_estimate": [[148, "td-advantage-estimate"]], "td_lambda_advantage_estimate": [[149, "td-lambda-advantage-estimate"]], "td_lambda_return_estimate": [[150, "td-lambda-return-estimate"]], "vec_generalized_advantage_estimate": [[151, "vec-generalized-advantage-estimate"]], "vec_td_lambda_advantage_estimate": [[152, "vec-td-lambda-advantage-estimate"]], "vec_td_lambda_return_estimate": [[153, "vec-td-lambda-return-estimate"]], "BatchSubSampler": [[154, "batchsubsampler"]], "ClearCudaCache": [[155, "clearcudacache"]], "CountFramesLog": [[156, "countframeslog"]], "LogReward": [[157, "logreward"]], "OptimizerHook": [[158, "optimizerhook"]], "Recorder": [[159, "recorder"]], "RewardNormalizer": [[161, "rewardnormalizer"]], "SelectKeys": [[162, "selectkeys"]], "Trainer": [[163, "trainer"]], "UpdateWeights": [[164, "updateweights"]], "correct_for_frame_skip": [[165, "correct-for-frame-skip"]], "get_stats_random_rollout": [[166, "get-stats-random-rollout"]], "make_a2c_loss": [[167, "make-a2c-loss"]], "make_a2c_model": [[168, "make-a2c-model"]], "make_collector_offpolicy": [[169, "make-collector-offpolicy"]], "make_collector_onpolicy": [[170, "make-collector-onpolicy"]], "make_ddpg_actor": [[171, "make-ddpg-actor"]], "make_ddpg_loss": [[172, "make-ddpg-loss"]], "make_dqn_actor": [[173, "make-dqn-actor"]], "make_dqn_loss": [[174, "make-dqn-loss"]], "make_ppo_loss": [[175, "make-ppo-loss"]], "make_ppo_model": [[176, "make-ppo-model"]], "make_redq_loss": [[177, "make-redq-loss"]], "make_redq_model": [[178, "make-redq-model"]], "make_replay_buffer": [[179, "make-replay-buffer"]], "make_sac_loss": [[180, "make-sac-loss"]], "make_sac_model": [[181, "make-sac-model"]], "make_target_updater": [[182, "make-target-updater"]], "make_trainer": [[183, "make-trainer"]], "parallel_env_constructor": [[184, "parallel-env-constructor"]], "sync_async_collector": [[185, "sync-async-collector"]], "sync_sync_collector": [[186, "sync-sync-collector"]], "transformed_env_constructor": [[187, "transformed-env-constructor"]], "README Demos": [[188, "readme-demos"], [197, "readme-demos"]], "API Reference": [[189, "api-reference"]], "Knowledge Base": [[190, "knowledge-base"]], "Contributing": [[190, "contributing"], [203, "contributing"]], "Contents:": [[190, null]], "torchrl.modules package": [[191, "torchrl-modules-package"]], "TensorDict modules": [[191, "tensordict-modules"]], "Hooks": [[191, "hooks"]], "Models": [[191, "models"], [203, "models"]], "Exploration": [[191, "exploration"]], "Planners": [[191, "planners"]], "Distributions": [[191, "distributions"]], "torchrl.objectives package": [[192, "torchrl-objectives-package"]], "DQN": [[192, "dqn"]], "DDPG": [[192, "ddpg"]], "SAC": [[192, "sac"]], "REDQ": [[192, "redq"]], "PPO": [[192, "ppo"]], "A2C": [[192, "a2c"]], "Returns": [[192, "returns"]], "torchrl.trainers package": [[193, "torchrl-trainers-package"]], "Checkpointing": [[193, "checkpointing"]], "Trainer and hooks": [[193, "trainer-and-hooks"]], "Builders": [[193, "builders"]], "torchrl._utils package": [[194, "torchrl-utils-package"]], "Coding DDPG using TorchRL": [[195, "coding-ddpg-using-torchrl"]], "Environment": [[195, "environment"]], "Parallel execution": [[195, "parallel-execution"]], "Normalization of the observations": [[195, "normalization-of-the-observations"]], "Building the model": [[195, "building-the-model"]], "Evaluator: building your recorder object": [[195, "evaluator-building-your-recorder-object"]], "Replay buffer": [[195, "replay-buffer"]], "Hyperparameters": [[195, "hyperparameters"], [196, "hyperparameters"]], "Initialization": [[195, "initialization"]], "Data collector": [[195, "data-collector"]], "Time to train the policy!": [[195, "time-to-train-the-policy"]], "Experiment results": [[195, "experiment-results"]], "Sampling trajectories and using TD(lambda)": [[195, "sampling-trajectories-and-using-td-lambda"]], "Coding a pixel-based DQN using TorchRL": [[196, "coding-a-pixel-based-dqn-using-torchrl"]], "Building the environment": [[196, "building-the-environment"]], "The problem": [[196, "the-problem"]], "Building the model (Deep Q-network)": [[196, "building-the-model-deep-q-network"]], "Regular DQN": [[196, "regular-dqn"]], "Training loop": [[196, "training-loop"], [196, "id1"]], "TD-lambda": [[196, "td-lambda"]], "Conclusion and possible improvements": [[196, "conclusion-and-possible-improvements"]], "Task-specific policy in multi-task environments": [[198, "task-specific-policy-in-multi-task-environments"]], "Policy": [[198, "policy"]], "Executing diverse tasks in parallel": [[198, "executing-diverse-tasks-in-parallel"]], "Rollout": [[198, "rollout"]], "Computation times": [[199, "computation-times"]], "TensorDictModule": [[200, "tensordictmodule"]], "TensorDictModule by examples": [[200, "tensordictmodule-by-examples"]], "Example 1: Simple usage": [[200, "example-1-simple-usage"]], "Example 2: Multiple inputs": [[200, "example-2-multiple-inputs"]], "Example 3: Multiple outputs": [[200, "example-3-multiple-outputs"]], "Example 4: Combining multiple TensorDictModule with TensorDictSequential": [[200, "example-4-combining-multiple-tensordictmodule-with-tensordictsequential"]], "Example 5: Compatibility with functorch": [[200, "example-5-compatibility-with-functorch"]], "Do\u2019s and don\u2019t with TensorDictModule": [[200, "do-s-and-don-t-with-tensordictmodule"]], "ProbabilisticTensorDictModule": [[200, "probabilistictensordictmodule"]], "Showcase: Implementing a transformer using TensorDictModule": [[200, "showcase-implementing-a-transformer-using-tensordictmodule"]], "Benchmarking": [[200, "benchmarking"]], "TensorDict": [[201, "tensordict"], [203, "tensordict"]], "Improving the modularity of codes": [[201, "improving-the-modularity-of-codes"]], "Can\u2019t I do this with a python dict?": [[201, "can-t-i-do-this-with-a-python-dict"]], "TensorDict structure": [[201, "tensordict-structure"]], "TensorDict Dictionary Features": [[201, "tensordict-dictionary-features"]], "get(key)": [[201, "get-key"]], "set(key, value)": [[201, "set-key-value"]], "keys()": [[201, "keys"]], "values()": [[201, "values"]], "update(tensordict_or_dict)": [[201, "update-tensordict-or-dict"]], "del": [[201, "del"]], "TensorDict tensor features": [[201, "tensordict-tensor-features"]], "Batch size": [[201, "batch-size"]], "Devices": [[201, "devices"]], "Memory sharing via physical memory usage": [[201, "memory-sharing-via-physical-memory-usage"]], "Tensor operations": [[201, "tensor-operations"]], "TorchRL envs": [[202, "torchrl-envs"]], "Gym environments": [[202, "gym-environments"]], "Env Specs": [[202, "env-specs"]], "Seeding, resetting and steps": [[202, "seeding-resetting-and-steps"]], "Rollouts": [[202, "rollouts"]], "frame_skip": [[202, "frame-skip"]], "Rendering": [[202, "rendering"]], "DeepMind Control environments": [[202, "deepmind-control-environments"]], "Transforming envs": [[202, "transforming-envs"]], "Environment device": [[202, "environment-device"]], "Running environments in parallel": [[202, "running-environments-in-parallel"]], "Closing parallel environments": [[202, "closing-parallel-environments"]], "Seeding": [[202, "seeding"]], "Accessing environment attributes": [[202, "accessing-environment-attributes"]], "kwargs for parallel environments": [[202, "kwargs-for-parallel-environments"]], "Transforming parallel environments": [[202, "transforming-parallel-environments"]], "Introduction to TorchRL": [[203, "introduction-to-torchrl"]], "Data": [[203, "data"]], "Replay buffers": [[203, "replay-buffers"]], "Envs": [[203, "envs"]], "Changing environments config": [[203, "changing-environments-config"]], "Vectorized Environments": [[203, "vectorized-environments"]], "Modules": [[203, "modules"]], "TensorDictModules": [[203, "tensordictmodules"]], "Sequences of Modules": [[203, "sequences-of-modules"]], "Functional Programming (Ensembling / Meta-RL)": [[203, "functional-programming-ensembling-meta-rl"]], "Specialized Classes": [[203, "specialized-classes"]], "Using Environments and Modules": [[203, "using-environments-and-modules"]], "Objectives": [[203, "objectives"]], "State of the Library": [[203, "state-of-the-library"]], "Installing the Library": [[203, "installing-the-library"]]}, "indexentries": {"implement_for (class in torchrl._utils)": [[10, "torchrl._utils.implement_for"]], "multisyncdatacollector (class in torchrl.collectors)": [[11, "torchrl.collectors.MultiSyncDataCollector"]], "load_state_dict() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.update_policy_weights_"]], "multiasyncdatacollector (class in torchrl.collectors)": [[12, "torchrl.collectors.MultiaSyncDataCollector"]], "load_state_dict() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.update_policy_weights_"]], "syncdatacollector (class in torchrl.collectors)": [[13, "torchrl.collectors.SyncDataCollector"]], "iterator() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.iterator"]], "load_state_dict() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.reset"]], "rollout() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.rollout"]], "set_seed() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.update_policy_weights_"]], "asyncdatacollector (class in torchrl.collectors)": [[14, "torchrl.collectors.aSyncDataCollector"]], "load_state_dict() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.update_policy_weights_"]], "split_trajectories() (in module torchrl.collectors.utils)": [[15, "torchrl.collectors.utils.split_trajectories"]], "binarydiscretetensorspec (class in torchrl.data)": [[16, "torchrl.data.BinaryDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.encode"]], "index() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.index"]], "is_in() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.is_in"]], "project() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.project"]], "rand() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.zero"]], "boundedtensorspec (class in torchrl.data)": [[17, "torchrl.data.BoundedTensorSpec"]], "assert_is_in() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.encode"]], "index() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.index"]], "is_in() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.is_in"]], "project() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.project"]], "rand() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.type_check"]], "zero() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.zero"]], "compositespec (class in torchrl.data)": [[18, "torchrl.data.CompositeSpec"]], "assert_is_in() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.assert_is_in"]], "encode() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.encode"]], "index() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.index"]], "is_in() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.is_in"]], "keys() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.keys"]], "project() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.project"]], "rand() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.rand"]], "to_numpy() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.to_numpy"]], "type_check() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.type_check"]], "zero() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.zero"]], "discretetensorspec (class in torchrl.data)": [[19, "torchrl.data.DiscreteTensorSpec"]], "assert_is_in() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.encode"]], "index() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.index"]], "is_in() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.is_in"]], "project() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.project"]], "rand() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.type_check"]], "zero() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.zero"]], "multonehotdiscretetensorspec (class in torchrl.data)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.zero"]], "multistep (class in torchrl.data)": [[21, "torchrl.data.MultiStep"]], "add_module() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.add_module"]], "apply() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.apply"]], "bfloat16() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.bfloat16"]], "buffers() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.buffers"]], "children() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.children"]], "cpu() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.cpu"]], "cuda() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.cuda"]], "double() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.double"]], "eval() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.eval"]], "extra_repr() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.extra_repr"]], "float() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.float"]], "forward() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.forward"]], "get_buffer() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_buffer"]], "get_extra_state() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_extra_state"]], "get_parameter() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_parameter"]], "get_submodule() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_submodule"]], "half() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.half"]], "ipu() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.ipu"]], "load_state_dict() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.load_state_dict"]], "modules() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.modules"]], "named_buffers() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_buffers"]], "named_children() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_children"]], "named_modules() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_modules"]], "named_parameters() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_parameters"]], "parameters() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.parameters"]], "register_backward_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_backward_hook"]], "register_buffer() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_buffer"]], "register_forward_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_forward_hook"]], "register_forward_pre_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_load_state_dict_post_hook"]], "register_module() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_module"]], "register_parameter() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_parameter"]], "requires_grad_() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.requires_grad_"]], "set_extra_state() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.set_extra_state"]], "share_memory() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.share_memory"]], "state_dict() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.state_dict"]], "to() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.to"]], "to_empty() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.to_empty"]], "train() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.train"]], "type() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.type"]], "xpu() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.xpu"]], "zero_grad() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.zero_grad"]], "onehotdiscretetensorspec (class in torchrl.data)": [[22, "torchrl.data.OneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.onehotdiscretetensorspec method)": [[22, "torchrl.data.OneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.onehotdiscretetensorspec method)": [[22, "torchrl.data.OneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.onehotdiscretetensorspec method)": [[22, "torchrl.data.OneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.onehotdiscretetensorspec method)": [[22, "torchrl.data.OneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.onehotdiscretetensorspec method)": [[22, "torchrl.data.OneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.onehotdiscretetensorspec method)": [[22, "torchrl.data.OneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.onehotdiscretetensorspec method)": [[22, "torchrl.data.OneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.onehotdiscretetensorspec method)": [[22, "torchrl.data.OneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.onehotdiscretetensorspec method)": [[22, "torchrl.data.OneHotDiscreteTensorSpec.zero"]], "prioritizedreplaybuffer (class in torchrl.data)": [[23, "torchrl.data.PrioritizedReplayBuffer"]], "add() (torchrl.data.prioritizedreplaybuffer method)": [[23, "torchrl.data.PrioritizedReplayBuffer.add"]], "extend() (torchrl.data.prioritizedreplaybuffer method)": [[23, "torchrl.data.PrioritizedReplayBuffer.extend"]], "sample() (torchrl.data.prioritizedreplaybuffer method)": [[23, "torchrl.data.PrioritizedReplayBuffer.sample"]], "update_priority() (torchrl.data.prioritizedreplaybuffer method)": [[23, "torchrl.data.PrioritizedReplayBuffer.update_priority"]], "replaybuffer (class in torchrl.data)": [[24, "torchrl.data.ReplayBuffer"]], "add() (torchrl.data.replaybuffer method)": [[24, "torchrl.data.ReplayBuffer.add"]], "extend() (torchrl.data.replaybuffer method)": [[24, "torchrl.data.ReplayBuffer.extend"]], "sample() (torchrl.data.replaybuffer method)": [[24, "torchrl.data.ReplayBuffer.sample"]], "tensordictprioritizedreplaybuffer (class in torchrl.data)": [[25, "torchrl.data.TensorDictPrioritizedReplayBuffer"]], "add() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[25, "torchrl.data.TensorDictPrioritizedReplayBuffer.add"]], "extend() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[25, "torchrl.data.TensorDictPrioritizedReplayBuffer.extend"]], "sample() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[25, "torchrl.data.TensorDictPrioritizedReplayBuffer.sample"]], "update_priority() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[25, "torchrl.data.TensorDictPrioritizedReplayBuffer.update_priority"]], "tensordictreplaybuffer (class in torchrl.data)": [[26, "torchrl.data.TensorDictReplayBuffer"]], "add() (torchrl.data.tensordictreplaybuffer method)": [[26, "torchrl.data.TensorDictReplayBuffer.add"]], "extend() (torchrl.data.tensordictreplaybuffer method)": [[26, "torchrl.data.TensorDictReplayBuffer.extend"]], "sample() (torchrl.data.tensordictreplaybuffer method)": [[26, "torchrl.data.TensorDictReplayBuffer.sample"]], "tensorspec (class in torchrl.data)": [[27, "torchrl.data.TensorSpec"]], "assert_is_in() (torchrl.data.tensorspec method)": [[27, "torchrl.data.TensorSpec.assert_is_in"]], "encode() (torchrl.data.tensorspec method)": [[27, "torchrl.data.TensorSpec.encode"]], "index() (torchrl.data.tensorspec method)": [[27, "torchrl.data.TensorSpec.index"]], "is_in() (torchrl.data.tensorspec method)": [[27, "torchrl.data.TensorSpec.is_in"]], "project() (torchrl.data.tensorspec method)": [[27, "torchrl.data.TensorSpec.project"]], "rand() (torchrl.data.tensorspec method)": [[27, "torchrl.data.TensorSpec.rand"]], "to_numpy() (torchrl.data.tensorspec method)": [[27, "torchrl.data.TensorSpec.to_numpy"]], "type_check() (torchrl.data.tensorspec method)": [[27, "torchrl.data.TensorSpec.type_check"]], "zero() (torchrl.data.tensorspec method)": [[27, "torchrl.data.TensorSpec.zero"]], "unboundedcontinuoustensorspec (class in torchrl.data)": [[28, "torchrl.data.UnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[28, "torchrl.data.UnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundedcontinuoustensorspec method)": [[28, "torchrl.data.UnboundedContinuousTensorSpec.encode"]], "index() (torchrl.data.unboundedcontinuoustensorspec method)": [[28, "torchrl.data.UnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[28, "torchrl.data.UnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.unboundedcontinuoustensorspec method)": [[28, "torchrl.data.UnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.unboundedcontinuoustensorspec method)": [[28, "torchrl.data.UnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundedcontinuoustensorspec method)": [[28, "torchrl.data.UnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundedcontinuoustensorspec method)": [[28, "torchrl.data.UnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.unboundedcontinuoustensorspec method)": [[28, "torchrl.data.UnboundedContinuousTensorSpec.zero"]], "remotetensordictreplaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[29, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[29, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[29, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[29, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[29, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[29, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.sample"]], "replaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[30, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.add"]], "append_transform() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.append_transform"]], "extend() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.extend"]], "insert_transform() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.insert_transform"]], "sample() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.sample"]], "tensordictreplaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[31, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.sample"]], "prioritizedsampler (class in torchrl.data.replay_buffers.samplers)": [[32, "torchrl.data.replay_buffers.samplers.PrioritizedSampler"]], "update_priority() (torchrl.data.replay_buffers.samplers.prioritizedsampler method)": [[32, "torchrl.data.replay_buffers.samplers.PrioritizedSampler.update_priority"]], "randomsampler (class in torchrl.data.replay_buffers.samplers)": [[33, "torchrl.data.replay_buffers.samplers.RandomSampler"]], "sampler (class in torchrl.data.replay_buffers.samplers)": [[34, "torchrl.data.replay_buffers.samplers.Sampler"]], "lazymemmapstorage (class in torchrl.data.replay_buffers.storages)": [[35, "torchrl.data.replay_buffers.storages.LazyMemmapStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazymemmapstorage method)": [[35, "torchrl.data.replay_buffers.storages.LazyMemmapStorage.attach"]], "lazytensorstorage (class in torchrl.data.replay_buffers.storages)": [[36, "torchrl.data.replay_buffers.storages.LazyTensorStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazytensorstorage method)": [[36, "torchrl.data.replay_buffers.storages.LazyTensorStorage.attach"]], "liststorage (class in torchrl.data.replay_buffers.storages)": [[37, "torchrl.data.replay_buffers.storages.ListStorage"]], "attach() (torchrl.data.replay_buffers.storages.liststorage method)": [[37, "torchrl.data.replay_buffers.storages.ListStorage.attach"]], "storage (class in torchrl.data.replay_buffers.storages)": [[38, "torchrl.data.replay_buffers.storages.Storage"]], "attach() (torchrl.data.replay_buffers.storages.storage method)": [[38, "torchrl.data.replay_buffers.storages.Storage.attach"]], "roundrobinwriter (class in torchrl.data.replay_buffers.writers)": [[39, "torchrl.data.replay_buffers.writers.RoundRobinWriter"]], "add() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[39, "torchrl.data.replay_buffers.writers.RoundRobinWriter.add"]], "extend() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[39, "torchrl.data.replay_buffers.writers.RoundRobinWriter.extend"]], "writer (class in torchrl.data.replay_buffers.writers)": [[40, "torchrl.data.replay_buffers.writers.Writer"]], "add() (torchrl.data.replay_buffers.writers.writer method)": [[40, "torchrl.data.replay_buffers.writers.Writer.add"]], "extend() (torchrl.data.replay_buffers.writers.writer method)": [[40, "torchrl.data.replay_buffers.writers.Writer.extend"]], "envbase (class in torchrl.envs)": [[41, "torchrl.envs.EnvBase"]], "add_module() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.add_module"]], "apply() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.apply"]], "batch_locked (torchrl.envs.envbase property)": [[41, "torchrl.envs.EnvBase.batch_locked"]], "bfloat16() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.bfloat16"]], "buffers() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.buffers"]], "children() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.children"]], "cpu() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.cpu"]], "cuda() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.cuda"]], "double() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.double"]], "eval() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.eval"]], "extra_repr() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.extra_repr"]], "fake_tensordict() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.fake_tensordict"]], "float() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.float"]], "forward() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.forward"]], "get_buffer() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_buffer"]], "get_extra_state() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_extra_state"]], "get_parameter() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_parameter"]], "get_submodule() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_submodule"]], "half() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.half"]], "ipu() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.ipu"]], "load_state_dict() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.load_state_dict"]], "modules() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.modules"]], "named_buffers() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_buffers"]], "named_children() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_children"]], "named_modules() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_modules"]], "named_parameters() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_parameters"]], "parameters() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.parameters"]], "rand_step() (torchrl.envs.envbase method)": [[41, "id0"], [41, "torchrl.envs.EnvBase.rand_step"]], "register_backward_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_backward_hook"]], "register_buffer() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_buffer"]], "register_forward_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_module"]], "register_parameter() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_parameter"]], "requires_grad_() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.requires_grad_"]], "reset() (torchrl.envs.envbase method)": [[41, "id1"], [41, "torchrl.envs.EnvBase.reset"]], "rollout() (torchrl.envs.envbase method)": [[41, "id2"], [41, "torchrl.envs.EnvBase.rollout"]], "set_extra_state() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.set_extra_state"]], "set_seed() (torchrl.envs.envbase method)": [[41, "id3"], [41, "torchrl.envs.EnvBase.set_seed"]], "share_memory() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.share_memory"]], "specs (torchrl.envs.envbase property)": [[41, "torchrl.envs.EnvBase.specs"]], "state_dict() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.state_dict"]], "step() (torchrl.envs.envbase method)": [[41, "id4"], [41, "torchrl.envs.EnvBase.step"]], "to() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.to"]], "to_empty() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.to_empty"]], "train() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.train"]], "type() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.type"]], "xpu() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.xpu"]], "zero_grad() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.zero_grad"]], "gymlikeenv (class in torchrl.envs)": [[42, "torchrl.envs.GymLikeEnv"]], "add_module() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.add_module"]], "apply() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.apply"]], "batch_locked (torchrl.envs.gymlikeenv property)": [[42, "torchrl.envs.GymLikeEnv.batch_locked"]], "bfloat16() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.bfloat16"]], "buffers() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.buffers"]], "children() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.children"]], "close() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.close"]], "cpu() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.cpu"]], "cuda() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.cuda"]], "double() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.double"]], "eval() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.eval"]], "extra_repr() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.fake_tensordict"]], "float() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.float"]], "forward() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.forward"]], "get_buffer() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.get_buffer"]], "get_extra_state() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.get_extra_state"]], "get_parameter() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.get_parameter"]], "get_submodule() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.get_submodule"]], "half() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.half"]], "ipu() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.ipu"]], "load_state_dict() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.load_state_dict"]], "modules() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.modules"]], "named_buffers() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.named_buffers"]], "named_children() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.named_children"]], "named_modules() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.named_modules"]], "named_parameters() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.named_parameters"]], "parameters() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.parameters"]], "rand_step() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.rand_step"]], "read_action() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.read_action"]], "read_done() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.read_done"]], "read_obs() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.read_obs"]], "read_reward() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.read_reward"]], "register_backward_hook() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_module"]], "register_parameter() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_parameter"]], "requires_grad_() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.requires_grad_"]], "reset() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.reset"]], "rollout() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.rollout"]], "set_extra_state() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.set_extra_state"]], "set_info_dict_reader() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.set_info_dict_reader"]], "set_seed() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.set_seed"]], "share_memory() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.share_memory"]], "specs (torchrl.envs.gymlikeenv property)": [[42, "torchrl.envs.GymLikeEnv.specs"]], "state_dict() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.state_dict"]], "step() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.step"]], "to() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.to"]], "to_empty() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.to_empty"]], "train() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.train"]], "type() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.type"]], "xpu() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.xpu"]], "zero_grad() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.zero_grad"]], "modelbasedenvbase() (in module torchrl.envs)": [[43, "torchrl.envs.ModelBasedEnvBase"]], "rand_step() (in module torchrl.envs)": [[43, "torchrl.envs.rand_step"]], "reset() (in module torchrl.envs)": [[43, "torchrl.envs.reset"]], "rollout() (in module torchrl.envs)": [[43, "torchrl.envs.rollout"]], "set_seed() (in module torchrl.envs)": [[43, "torchrl.envs.set_seed"]], "step() (in module torchrl.envs)": [[43, "torchrl.envs.step"]], "parallelenv (class in torchrl.envs)": [[44, "torchrl.envs.ParallelEnv"]], "add_module() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.add_module"]], "apply() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.apply"]], "batch_locked (torchrl.envs.parallelenv property)": [[44, "torchrl.envs.ParallelEnv.batch_locked"]], "bfloat16() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.bfloat16"]], "buffers() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.buffers"]], "children() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.children"]], "cpu() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.cpu"]], "cuda() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.cuda"]], "double() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.double"]], "eval() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.eval"]], "extra_repr() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.fake_tensordict"]], "float() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.float"]], "forward() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.forward"]], "get_buffer() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.get_buffer"]], "get_extra_state() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.get_extra_state"]], "get_parameter() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.get_parameter"]], "get_submodule() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.get_submodule"]], "half() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.half"]], "ipu() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.ipu"]], "load_state_dict() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.load_state_dict"]], "modules() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.modules"]], "named_buffers() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.named_buffers"]], "named_children() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.named_children"]], "named_modules() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.named_modules"]], "named_parameters() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.named_parameters"]], "parameters() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.parameters"]], "rand_step() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.rand_step"]], "register_backward_hook() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_module"]], "register_parameter() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_parameter"]], "requires_grad_() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.requires_grad_"]], "reset() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.reset"]], "rollout() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.rollout"]], "set_extra_state() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.set_extra_state"]], "set_seed() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.set_seed"]], "share_memory() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.share_memory"]], "specs (torchrl.envs.parallelenv property)": [[44, "torchrl.envs.ParallelEnv.specs"]], "state_dict() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.state_dict"]], "step() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.step"]], "to() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.to"]], "to_empty() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.to_empty"]], "train() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.train"]], "type() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.type"]], "update_kwargs() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.update_kwargs"]], "xpu() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.xpu"]], "zero_grad() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.zero_grad"]], "serialenv (class in torchrl.envs)": [[45, "torchrl.envs.SerialEnv"]], "add_module() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.add_module"]], "apply() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.apply"]], "batch_locked (torchrl.envs.serialenv property)": [[45, "torchrl.envs.SerialEnv.batch_locked"]], "bfloat16() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.bfloat16"]], "buffers() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.buffers"]], "children() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.children"]], "cpu() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.cpu"]], "cuda() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.cuda"]], "double() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.double"]], "eval() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.eval"]], "extra_repr() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.fake_tensordict"]], "float() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.float"]], "forward() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.forward"]], "get_buffer() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.get_buffer"]], "get_extra_state() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.get_extra_state"]], "get_parameter() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.get_parameter"]], "get_submodule() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.get_submodule"]], "half() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.half"]], "ipu() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.ipu"]], "load_state_dict() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.load_state_dict"]], "modules() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.modules"]], "named_buffers() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.named_buffers"]], "named_children() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.named_children"]], "named_modules() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.named_modules"]], "named_parameters() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.named_parameters"]], "parameters() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.parameters"]], "rand_step() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.rand_step"]], "register_backward_hook() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_module"]], "register_parameter() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_parameter"]], "requires_grad_() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.requires_grad_"]], "reset() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.reset"]], "rollout() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.rollout"]], "set_extra_state() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.set_extra_state"]], "set_seed() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.set_seed"]], "share_memory() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.share_memory"]], "specs (torchrl.envs.serialenv property)": [[45, "torchrl.envs.SerialEnv.specs"]], "state_dict() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.state_dict"]], "step() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.step"]], "to() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.to"]], "to_empty() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.to_empty"]], "train() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.train"]], "type() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.type"]], "update_kwargs() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.update_kwargs"]], "xpu() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.xpu"]], "zero_grad() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.zero_grad"]], "dmcontrolenv() (in module torchrl.envs.libs.dm_control)": [[46, "torchrl.envs.libs.dm_control.DMControlEnv"]], "dmcontrolwrapper() (in module torchrl.envs.libs.dm_control)": [[47, "torchrl.envs.libs.dm_control.DMControlWrapper"]], "gymenv() (in module torchrl.envs.libs.gym)": [[48, "torchrl.envs.libs.gym.GymEnv"]], "gymwrapper() (in module torchrl.envs.libs.gym)": [[49, "torchrl.envs.libs.gym.GymWrapper"]], "habitatenv() (in module torchrl.envs.libs.habitat)": [[50, "torchrl.envs.libs.habitat.HabitatEnv"]], "jumanjienv() (in module torchrl.envs.libs.jumanji)": [[51, "torchrl.envs.libs.jumanji.JumanjiEnv"]], "jumanjiwrapper() (in module torchrl.envs.libs.jumanji)": [[52, "torchrl.envs.libs.jumanji.JumanjiWrapper"]], "dreamerenv() (in module torchrl.envs.model_based.dreamer)": [[53, "torchrl.envs.model_based.dreamer.DreamerEnv"]], "binarizereward (class in torchrl.envs.transforms)": [[54, "torchrl.envs.transforms.BinarizeReward"]], "transform_reward_spec() (torchrl.envs.transforms.binarizereward method)": [[54, "torchrl.envs.transforms.BinarizeReward.transform_reward_spec"]], "catframes (class in torchrl.envs.transforms)": [[55, "torchrl.envs.transforms.CatFrames"]], "reset() (torchrl.envs.transforms.catframes method)": [[55, "torchrl.envs.transforms.CatFrames.reset"]], "transform_observation_spec() (torchrl.envs.transforms.catframes method)": [[55, "torchrl.envs.transforms.CatFrames.transform_observation_spec"]], "cattensors (class in torchrl.envs.transforms)": [[56, "torchrl.envs.transforms.CatTensors"]], "transform_observation_spec() (torchrl.envs.transforms.cattensors method)": [[56, "torchrl.envs.transforms.CatTensors.transform_observation_spec"]], "centercrop (class in torchrl.envs.transforms)": [[57, "torchrl.envs.transforms.CenterCrop"]], "transform_observation_spec() (torchrl.envs.transforms.centercrop method)": [[57, "torchrl.envs.transforms.CenterCrop.transform_observation_spec"]], "compose (class in torchrl.envs.transforms)": [[58, "torchrl.envs.transforms.Compose"]], "forward() (torchrl.envs.transforms.compose method)": [[58, "torchrl.envs.transforms.Compose.forward"]], "reset() (torchrl.envs.transforms.compose method)": [[58, "torchrl.envs.transforms.Compose.reset"]], "to() (torchrl.envs.transforms.compose method)": [[58, "torchrl.envs.transforms.Compose.to"]], "transform_input_spec() (torchrl.envs.transforms.compose method)": [[58, "torchrl.envs.transforms.Compose.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.compose method)": [[58, "torchrl.envs.transforms.Compose.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.compose method)": [[58, "torchrl.envs.transforms.Compose.transform_reward_spec"]], "doubletofloat (class in torchrl.envs.transforms)": [[59, "torchrl.envs.transforms.DoubleToFloat"]], "transform_input_spec() (torchrl.envs.transforms.doubletofloat method)": [[59, "torchrl.envs.transforms.DoubleToFloat.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.doubletofloat method)": [[59, "torchrl.envs.transforms.DoubleToFloat.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.doubletofloat method)": [[59, "torchrl.envs.transforms.DoubleToFloat.transform_reward_spec"]], "finitetensordictcheck (class in torchrl.envs.transforms)": [[60, "torchrl.envs.transforms.FiniteTensorDictCheck"]], "flattenobservation (class in torchrl.envs.transforms)": [[61, "torchrl.envs.transforms.FlattenObservation"]], "transform_observation_spec() (torchrl.envs.transforms.flattenobservation method)": [[61, "torchrl.envs.transforms.FlattenObservation.transform_observation_spec"]], "grayscale (class in torchrl.envs.transforms)": [[62, "torchrl.envs.transforms.GrayScale"]], "transform_observation_spec() (torchrl.envs.transforms.grayscale method)": [[62, "torchrl.envs.transforms.GrayScale.transform_observation_spec"]], "noopresetenv (class in torchrl.envs.transforms)": [[63, "torchrl.envs.transforms.NoopResetEnv"]], "reset() (torchrl.envs.transforms.noopresetenv method)": [[63, "torchrl.envs.transforms.NoopResetEnv.reset"]], "observationnorm (class in torchrl.envs.transforms)": [[64, "torchrl.envs.transforms.ObservationNorm"]], "init_stats() (torchrl.envs.transforms.observationnorm method)": [[64, "torchrl.envs.transforms.ObservationNorm.init_stats"]], "transform_observation_spec() (torchrl.envs.transforms.observationnorm method)": [[64, "torchrl.envs.transforms.ObservationNorm.transform_observation_spec"]], "observationtransform (class in torchrl.envs.transforms)": [[65, "torchrl.envs.transforms.ObservationTransform"]], "pinmemorytransform (class in torchrl.envs.transforms)": [[66, "torchrl.envs.transforms.PinMemoryTransform"]], "r3mtransform (class in torchrl.envs.transforms)": [[67, "torchrl.envs.transforms.R3MTransform"]], "forward() (torchrl.envs.transforms.r3mtransform method)": [[67, "torchrl.envs.transforms.R3MTransform.forward"]], "reset() (torchrl.envs.transforms.r3mtransform method)": [[67, "torchrl.envs.transforms.R3MTransform.reset"]], "to() (torchrl.envs.transforms.r3mtransform method)": [[67, "torchrl.envs.transforms.R3MTransform.to"]], "transform_input_spec() (torchrl.envs.transforms.r3mtransform method)": [[67, "torchrl.envs.transforms.R3MTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.r3mtransform method)": [[67, "torchrl.envs.transforms.R3MTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.r3mtransform method)": [[67, "torchrl.envs.transforms.R3MTransform.transform_reward_spec"]], "resize (class in torchrl.envs.transforms)": [[68, "torchrl.envs.transforms.Resize"]], "transform_observation_spec() (torchrl.envs.transforms.resize method)": [[68, "torchrl.envs.transforms.Resize.transform_observation_spec"]], "rewardclipping (class in torchrl.envs.transforms)": [[69, "torchrl.envs.transforms.RewardClipping"]], "transform_reward_spec() (torchrl.envs.transforms.rewardclipping method)": [[69, "torchrl.envs.transforms.RewardClipping.transform_reward_spec"]], "rewardscaling (class in torchrl.envs.transforms)": [[70, "torchrl.envs.transforms.RewardScaling"]], "transform_reward_spec() (torchrl.envs.transforms.rewardscaling method)": [[70, "torchrl.envs.transforms.RewardScaling.transform_reward_spec"]], "rewardsum (class in torchrl.envs.transforms)": [[71, "torchrl.envs.transforms.RewardSum"]], "reset() (torchrl.envs.transforms.rewardsum method)": [[71, "torchrl.envs.transforms.RewardSum.reset"]], "transform_observation_spec() (torchrl.envs.transforms.rewardsum method)": [[71, "torchrl.envs.transforms.RewardSum.transform_observation_spec"]], "tensordictprimer (class in torchrl.envs.transforms)": [[72, "torchrl.envs.transforms.TensorDictPrimer"]], "reset() (torchrl.envs.transforms.tensordictprimer method)": [[72, "torchrl.envs.transforms.TensorDictPrimer.reset"]], "to() (torchrl.envs.transforms.tensordictprimer method)": [[72, "torchrl.envs.transforms.TensorDictPrimer.to"]], "transform_observation_spec() (torchrl.envs.transforms.tensordictprimer method)": [[72, "torchrl.envs.transforms.TensorDictPrimer.transform_observation_spec"]], "totensorimage (class in torchrl.envs.transforms)": [[73, "torchrl.envs.transforms.ToTensorImage"]], "transform_observation_spec() (torchrl.envs.transforms.totensorimage method)": [[73, "torchrl.envs.transforms.ToTensorImage.transform_observation_spec"]], "transform (class in torchrl.envs.transforms)": [[74, "torchrl.envs.transforms.Transform"]], "forward() (torchrl.envs.transforms.transform method)": [[74, "torchrl.envs.transforms.Transform.forward"]], "reset() (torchrl.envs.transforms.transform method)": [[74, "torchrl.envs.transforms.Transform.reset"]], "transform_input_spec() (torchrl.envs.transforms.transform method)": [[74, "torchrl.envs.transforms.Transform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.transform method)": [[74, "torchrl.envs.transforms.Transform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.transform method)": [[74, "torchrl.envs.transforms.Transform.transform_reward_spec"]], "transformedenv (class in torchrl.envs.transforms)": [[75, "torchrl.envs.transforms.TransformedEnv"]], "action_spec (torchrl.envs.transforms.transformedenv property)": [[75, "torchrl.envs.transforms.TransformedEnv.action_spec"]], "batch_locked (torchrl.envs.transforms.transformedenv property)": [[75, "torchrl.envs.transforms.TransformedEnv.batch_locked"]], "eval() (torchrl.envs.transforms.transformedenv method)": [[75, "torchrl.envs.transforms.TransformedEnv.eval"]], "input_spec (torchrl.envs.transforms.transformedenv property)": [[75, "torchrl.envs.transforms.TransformedEnv.input_spec"]], "load_state_dict() (torchrl.envs.transforms.transformedenv method)": [[75, "torchrl.envs.transforms.TransformedEnv.load_state_dict"]], "observation_spec (torchrl.envs.transforms.transformedenv property)": [[75, "torchrl.envs.transforms.TransformedEnv.observation_spec"]], "reward_spec (torchrl.envs.transforms.transformedenv property)": [[75, "torchrl.envs.transforms.TransformedEnv.reward_spec"]], "set_seed() (torchrl.envs.transforms.transformedenv method)": [[75, "torchrl.envs.transforms.TransformedEnv.set_seed"]], "state_dict() (torchrl.envs.transforms.transformedenv method)": [[75, "torchrl.envs.transforms.TransformedEnv.state_dict"]], "to() (torchrl.envs.transforms.transformedenv method)": [[75, "torchrl.envs.transforms.TransformedEnv.to"]], "train() (torchrl.envs.transforms.transformedenv method)": [[75, "torchrl.envs.transforms.TransformedEnv.train"]], "unsqueezetransform (class in torchrl.envs.transforms)": [[76, "torchrl.envs.transforms.UnsqueezeTransform"]], "forward() (torchrl.envs.transforms.unsqueezetransform method)": [[76, "torchrl.envs.transforms.UnsqueezeTransform.forward"]], "transform_input_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[76, "torchrl.envs.transforms.UnsqueezeTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[76, "torchrl.envs.transforms.UnsqueezeTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[76, "torchrl.envs.transforms.UnsqueezeTransform.transform_reward_spec"]], "viprewardtransform (class in torchrl.envs.transforms)": [[77, "torchrl.envs.transforms.VIPRewardTransform"]], "forward() (torchrl.envs.transforms.viprewardtransform method)": [[77, "torchrl.envs.transforms.VIPRewardTransform.forward"]], "reset() (torchrl.envs.transforms.viprewardtransform method)": [[77, "torchrl.envs.transforms.VIPRewardTransform.reset"]], "viptransform (class in torchrl.envs.transforms)": [[78, "torchrl.envs.transforms.VIPTransform"]], "forward() (torchrl.envs.transforms.viptransform method)": [[78, "torchrl.envs.transforms.VIPTransform.forward"]], "reset() (torchrl.envs.transforms.viptransform method)": [[78, "torchrl.envs.transforms.VIPTransform.reset"]], "to() (torchrl.envs.transforms.viptransform method)": [[78, "torchrl.envs.transforms.VIPTransform.to"]], "transform_input_spec() (torchrl.envs.transforms.viptransform method)": [[78, "torchrl.envs.transforms.VIPTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.viptransform method)": [[78, "torchrl.envs.transforms.VIPTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.viptransform method)": [[78, "torchrl.envs.transforms.VIPTransform.transform_reward_spec"]], "vecnorm (class in torchrl.envs.transforms)": [[79, "torchrl.envs.transforms.VecNorm"]], "build_td_for_shared_vecnorm() (torchrl.envs.transforms.vecnorm static method)": [[79, "torchrl.envs.transforms.VecNorm.build_td_for_shared_vecnorm"]], "get_extra_state() (torchrl.envs.transforms.vecnorm method)": [[79, "torchrl.envs.transforms.VecNorm.get_extra_state"]], "set_extra_state() (torchrl.envs.transforms.vecnorm method)": [[79, "torchrl.envs.transforms.VecNorm.set_extra_state"]], "to_observation_norm() (torchrl.envs.transforms.vecnorm method)": [[79, "torchrl.envs.transforms.VecNorm.to_observation_norm"]], "gsdenoise (class in torchrl.envs.transforms)": [[80, "torchrl.envs.transforms.gSDENoise"]], "reset() (torchrl.envs.transforms.gsdenoise method)": [[80, "torchrl.envs.transforms.gSDENoise.reset"]], "check_env_specs() (in module torchrl.envs.utils)": [[81, "torchrl.envs.utils.check_env_specs"]], "exploration_mode() (in module torchrl.envs.utils)": [[82, "torchrl.envs.utils.exploration_mode"]], "get_available_libraries() (in module torchrl.envs.utils)": [[83, "torchrl.envs.utils.get_available_libraries"]], "set_exploration_mode() (in module torchrl.envs.utils)": [[84, "torchrl.envs.utils.set_exploration_mode"]], "step_mdp() (in module torchrl.envs.utils)": [[85, "torchrl.envs.utils.step_mdp"]], "actor (class in torchrl.modules)": [[86, "torchrl.modules.Actor"]], "actorcriticoperator (class in torchrl.modules)": [[87, "torchrl.modules.ActorCriticOperator"]], "get_critic_operator() (torchrl.modules.actorcriticoperator method)": [[87, "torchrl.modules.ActorCriticOperator.get_critic_operator"]], "get_value_operator() (torchrl.modules.actorcriticoperator method)": [[87, "torchrl.modules.ActorCriticOperator.get_value_operator"]], "actorcriticwrapper (class in torchrl.modules)": [[88, "torchrl.modules.ActorCriticWrapper"]], "get_policy_operator() (torchrl.modules.actorcriticwrapper method)": [[88, "torchrl.modules.ActorCriticWrapper.get_policy_operator"]], "get_value_operator() (torchrl.modules.actorcriticwrapper method)": [[88, "torchrl.modules.ActorCriticWrapper.get_value_operator"]], "actorvalueoperator (class in torchrl.modules)": [[89, "torchrl.modules.ActorValueOperator"]], "get_policy_operator() (torchrl.modules.actorvalueoperator method)": [[89, "torchrl.modules.ActorValueOperator.get_policy_operator"]], "get_value_operator() (torchrl.modules.actorvalueoperator method)": [[89, "torchrl.modules.ActorValueOperator.get_value_operator"]], "cemplanner (class in torchrl.modules)": [[90, "torchrl.modules.CEMPlanner"]], "planning() (torchrl.modules.cemplanner method)": [[90, "torchrl.modules.CEMPlanner.planning"]], "convnet (class in torchrl.modules)": [[91, "torchrl.modules.ConvNet"]], "forward() (torchrl.modules.convnet method)": [[91, "torchrl.modules.ConvNet.forward"]], "ddpgcnnactor (class in torchrl.modules)": [[92, "torchrl.modules.DdpgCnnActor"]], "forward() (torchrl.modules.ddpgcnnactor method)": [[92, "torchrl.modules.DdpgCnnActor.forward"]], "ddpgcnnqnet (class in torchrl.modules)": [[93, "torchrl.modules.DdpgCnnQNet"]], "forward() (torchrl.modules.ddpgcnnqnet method)": [[93, "torchrl.modules.DdpgCnnQNet.forward"]], "ddpgmlpactor (class in torchrl.modules)": [[94, "torchrl.modules.DdpgMlpActor"]], "forward() (torchrl.modules.ddpgmlpactor method)": [[94, "torchrl.modules.DdpgMlpActor.forward"]], "ddpgmlpqnet (class in torchrl.modules)": [[95, "torchrl.modules.DdpgMlpQNet"]], "forward() (torchrl.modules.ddpgmlpqnet method)": [[95, "torchrl.modules.DdpgMlpQNet.forward"]], "delta (class in torchrl.modules)": [[96, "torchrl.modules.Delta"]], "log_prob() (torchrl.modules.delta method)": [[96, "torchrl.modules.Delta.log_prob"]], "mean (torchrl.modules.delta property)": [[96, "torchrl.modules.Delta.mean"]], "mode (torchrl.modules.delta property)": [[96, "torchrl.modules.Delta.mode"]], "rsample() (torchrl.modules.delta method)": [[96, "torchrl.modules.Delta.rsample"]], "sample() (torchrl.modules.delta method)": [[96, "torchrl.modules.Delta.sample"]], "distributionaldqnnet (class in torchrl.modules)": [[97, "torchrl.modules.DistributionalDQNnet"]], "forward() (torchrl.modules.distributionaldqnnet method)": [[97, "torchrl.modules.DistributionalDQNnet.forward"]], "distributionalqvalueactor (class in torchrl.modules)": [[98, "torchrl.modules.DistributionalQValueActor"]], "dreameractor (class in torchrl.modules)": [[99, "torchrl.modules.DreamerActor"]], "forward() (torchrl.modules.dreameractor method)": [[99, "torchrl.modules.DreamerActor.forward"]], "duelingcnndqnet (class in torchrl.modules)": [[100, "torchrl.modules.DuelingCnnDQNet"]], "forward() (torchrl.modules.duelingcnndqnet method)": [[100, "torchrl.modules.DuelingCnnDQNet.forward"]], "lstmnet (class in torchrl.modules)": [[101, "torchrl.modules.LSTMNet"]], "forward() (torchrl.modules.lstmnet method)": [[101, "torchrl.modules.LSTMNet.forward"]], "mlp (class in torchrl.modules)": [[102, "torchrl.modules.MLP"]], "forward() (torchrl.modules.mlp method)": [[102, "torchrl.modules.MLP.forward"]], "mpcplannerbase (class in torchrl.modules)": [[103, "torchrl.modules.MPCPlannerBase"]], "forward() (torchrl.modules.mpcplannerbase method)": [[103, "torchrl.modules.MPCPlannerBase.forward"]], "planning() (torchrl.modules.mpcplannerbase method)": [[103, "torchrl.modules.MPCPlannerBase.planning"]], "noisylazylinear (class in torchrl.modules)": [[104, "torchrl.modules.NoisyLazyLinear"]], "initialize_parameters() (torchrl.modules.noisylazylinear method)": [[104, "torchrl.modules.NoisyLazyLinear.initialize_parameters"]], "noisylinear (class in torchrl.modules)": [[105, "torchrl.modules.NoisyLinear"]], "obsdecoder (class in torchrl.modules)": [[106, "torchrl.modules.ObsDecoder"]], "forward() (torchrl.modules.obsdecoder method)": [[106, "torchrl.modules.ObsDecoder.forward"]], "obsencoder (class in torchrl.modules)": [[107, "torchrl.modules.ObsEncoder"]], "forward() (torchrl.modules.obsencoder method)": [[107, "torchrl.modules.ObsEncoder.forward"]], "onehotcategorical (class in torchrl.modules)": [[108, "torchrl.modules.OneHotCategorical"]], "log_prob() (torchrl.modules.onehotcategorical method)": [[108, "torchrl.modules.OneHotCategorical.log_prob"]], "mode (torchrl.modules.onehotcategorical property)": [[108, "torchrl.modules.OneHotCategorical.mode"]], "rsample() (torchrl.modules.onehotcategorical method)": [[108, "torchrl.modules.OneHotCategorical.rsample"]], "sample() (torchrl.modules.onehotcategorical method)": [[108, "torchrl.modules.OneHotCategorical.sample"]], "probabilisticactor (class in torchrl.modules)": [[109, "torchrl.modules.ProbabilisticActor"]], "qvalueactor (class in torchrl.modules)": [[110, "torchrl.modules.QValueActor"]], "rssmposterior (class in torchrl.modules)": [[111, "torchrl.modules.RSSMPosterior"]], "forward() (torchrl.modules.rssmposterior method)": [[111, "torchrl.modules.RSSMPosterior.forward"]], "rssmprior (class in torchrl.modules)": [[112, "torchrl.modules.RSSMPrior"]], "forward() (torchrl.modules.rssmprior method)": [[112, "torchrl.modules.RSSMPrior.forward"]], "safemodule (class in torchrl.modules)": [[113, "torchrl.modules.SafeModule"]], "random() (torchrl.modules.safemodule method)": [[113, "torchrl.modules.SafeModule.random"]], "random_sample() (torchrl.modules.safemodule method)": [[113, "torchrl.modules.SafeModule.random_sample"]], "to() (torchrl.modules.safemodule method)": [[113, "torchrl.modules.SafeModule.to"]], "safeprobabilisticmodule (class in torchrl.modules)": [[114, "torchrl.modules.SafeProbabilisticModule"]], "random() (torchrl.modules.safeprobabilisticmodule method)": [[114, "torchrl.modules.SafeProbabilisticModule.random"]], "random_sample() (torchrl.modules.safeprobabilisticmodule method)": [[114, "torchrl.modules.SafeProbabilisticModule.random_sample"]], "safeprobabilisticsequential (class in torchrl.modules)": [[115, "torchrl.modules.SafeProbabilisticSequential"]], "safesequential (class in torchrl.modules)": [[116, "torchrl.modules.SafeSequential"]], "tanhdelta (class in torchrl.modules)": [[117, "torchrl.modules.TanhDelta"]], "mean (torchrl.modules.tanhdelta property)": [[117, "torchrl.modules.TanhDelta.mean"]], "mode (torchrl.modules.tanhdelta property)": [[117, "torchrl.modules.TanhDelta.mode"]], "tanhnormal (class in torchrl.modules)": [[118, "torchrl.modules.TanhNormal"]], "mode (torchrl.modules.tanhnormal property)": [[118, "torchrl.modules.TanhNormal.mode"]], "truncatednormal (class in torchrl.modules)": [[119, "torchrl.modules.TruncatedNormal"]], "log_prob() (torchrl.modules.truncatednormal method)": [[119, "torchrl.modules.TruncatedNormal.log_prob"]], "mode (torchrl.modules.truncatednormal property)": [[119, "torchrl.modules.TruncatedNormal.mode"]], "valueoperator (class in torchrl.modules)": [[120, "torchrl.modules.ValueOperator"]], "reset_noise (class in torchrl.modules)": [[121, "torchrl.modules.reset_noise"]], "distributionalqvaluehook (class in torchrl.modules.tensordict_module.actors)": [[122, "torchrl.modules.tensordict_module.actors.DistributionalQValueHook"]], "qvaluehook (class in torchrl.modules.tensordict_module.actors)": [[123, "torchrl.modules.tensordict_module.actors.QValueHook"]], "ensure_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[124, "torchrl.modules.tensordict_module.common.ensure_tensordict_compatible"]], "is_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[125, "torchrl.modules.tensordict_module.common.is_tensordict_compatible"]], "biased_softplus (class in torchrl.modules.utils)": [[126, "torchrl.modules.utils.biased_softplus"]], "forward() (torchrl.modules.utils.biased_softplus method)": [[126, "torchrl.modules.utils.biased_softplus.forward"]], "inv_softplus (class in torchrl.modules.utils)": [[127, "torchrl.modules.utils.inv_softplus"]], "mappings (class in torchrl.modules.utils)": [[128, "torchrl.modules.utils.mappings"]], "a2closs (class in torchrl.objectives)": [[129, "torchrl.objectives.A2CLoss"]], "forward() (torchrl.objectives.a2closs method)": [[129, "torchrl.objectives.A2CLoss.forward"]], "clipppoloss (class in torchrl.objectives)": [[130, "torchrl.objectives.ClipPPOLoss"]], "forward() (torchrl.objectives.clipppoloss method)": [[130, "torchrl.objectives.ClipPPOLoss.forward"]], "ddpgloss (class in torchrl.objectives)": [[131, "torchrl.objectives.DDPGLoss"]], "forward() (torchrl.objectives.ddpgloss method)": [[131, "torchrl.objectives.DDPGLoss.forward"]], "dqnloss (class in torchrl.objectives)": [[132, "torchrl.objectives.DQNLoss"]], "forward() (torchrl.objectives.dqnloss method)": [[132, "torchrl.objectives.DQNLoss.forward"]], "distributionaldqnloss (class in torchrl.objectives)": [[133, "torchrl.objectives.DistributionalDQNLoss"]], "forward() (torchrl.objectives.distributionaldqnloss method)": [[133, "torchrl.objectives.DistributionalDQNLoss.forward"]], "hardupdate (class in torchrl.objectives)": [[134, "torchrl.objectives.HardUpdate"]], "klpenppoloss (class in torchrl.objectives)": [[135, "torchrl.objectives.KLPENPPOLoss"]], "forward() (torchrl.objectives.klpenppoloss method)": [[135, "torchrl.objectives.KLPENPPOLoss.forward"]], "ppoloss (class in torchrl.objectives)": [[136, "torchrl.objectives.PPOLoss"]], "forward() (torchrl.objectives.ppoloss method)": [[136, "torchrl.objectives.PPOLoss.forward"]], "redqloss (class in torchrl.objectives)": [[137, "torchrl.objectives.REDQLoss"]], "forward() (torchrl.objectives.redqloss method)": [[137, "torchrl.objectives.REDQLoss.forward"]], "sacloss (class in torchrl.objectives)": [[138, "torchrl.objectives.SACLoss"]], "forward() (torchrl.objectives.sacloss method)": [[138, "torchrl.objectives.SACLoss.forward"]], "softupdate (class in torchrl.objectives)": [[139, "torchrl.objectives.SoftUpdate"]], "distance_loss (class in torchrl.objectives)": [[140, "torchrl.objectives.distance_loss"]], "hold_out_net (class in torchrl.objectives)": [[141, "torchrl.objectives.hold_out_net"]], "hold_out_params (class in torchrl.objectives)": [[142, "torchrl.objectives.hold_out_params"]], "next_state_value (class in torchrl.objectives)": [[143, "torchrl.objectives.next_state_value"]], "gae (class in torchrl.objectives.value)": [[144, "torchrl.objectives.value.GAE"]], "forward() (torchrl.objectives.value.gae method)": [[144, "torchrl.objectives.value.GAE.forward"]], "tdestimate (class in torchrl.objectives.value)": [[145, "torchrl.objectives.value.TDEstimate"]], "forward() (torchrl.objectives.value.tdestimate method)": [[145, "torchrl.objectives.value.TDEstimate.forward"]], "tdlambdaestimate (class in torchrl.objectives.value)": [[146, "torchrl.objectives.value.TDLambdaEstimate"]], "forward() (torchrl.objectives.value.tdlambdaestimate method)": [[146, "torchrl.objectives.value.TDLambdaEstimate.forward"]], "generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[147, "torchrl.objectives.value.functional.generalized_advantage_estimate"]], "td_advantage_estimate (class in torchrl.objectives.value.functional)": [[148, "torchrl.objectives.value.functional.td_advantage_estimate"]], "td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[149, "torchrl.objectives.value.functional.td_lambda_advantage_estimate"]], "td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[150, "torchrl.objectives.value.functional.td_lambda_return_estimate"]], "vec_generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[151, "torchrl.objectives.value.functional.vec_generalized_advantage_estimate"]], "vec_td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[152, "torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate"]], "vec_td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[153, "torchrl.objectives.value.functional.vec_td_lambda_return_estimate"]], "batchsubsampler (class in torchrl.trainers)": [[154, "torchrl.trainers.BatchSubSampler"]], "clearcudacache (class in torchrl.trainers)": [[155, "torchrl.trainers.ClearCudaCache"]], "countframeslog (class in torchrl.trainers)": [[156, "torchrl.trainers.CountFramesLog"]], "logreward (class in torchrl.trainers)": [[157, "torchrl.trainers.LogReward"]], "optimizerhook (class in torchrl.trainers)": [[158, "torchrl.trainers.OptimizerHook"]], "recorder (class in torchrl.trainers)": [[159, "torchrl.trainers.Recorder"]], "replaybuffer (class in torchrl.trainers)": [[160, "torchrl.trainers.ReplayBuffer"]], "add() (torchrl.trainers.replaybuffer method)": [[160, "torchrl.trainers.ReplayBuffer.add"]], "extend() (torchrl.trainers.replaybuffer method)": [[160, "torchrl.trainers.ReplayBuffer.extend"]], "sample() (torchrl.trainers.replaybuffer method)": [[160, "torchrl.trainers.ReplayBuffer.sample"]], "rewardnormalizer (class in torchrl.trainers)": [[161, "torchrl.trainers.RewardNormalizer"]], "selectkeys (class in torchrl.trainers)": [[162, "torchrl.trainers.SelectKeys"]], "trainer (class in torchrl.trainers)": [[163, "torchrl.trainers.Trainer"]], "updateweights (class in torchrl.trainers)": [[164, "torchrl.trainers.UpdateWeights"]], "correct_for_frame_skip() (in module torchrl.trainers.helpers)": [[165, "torchrl.trainers.helpers.correct_for_frame_skip"]], "get_stats_random_rollout() (in module torchrl.trainers.helpers)": [[166, "torchrl.trainers.helpers.get_stats_random_rollout"]], "make_a2c_loss() (in module torchrl.trainers.helpers)": [[167, "torchrl.trainers.helpers.make_a2c_loss"]], "make_a2c_model() (in module torchrl.trainers.helpers)": [[168, "torchrl.trainers.helpers.make_a2c_model"]], "make_collector_offpolicy() (in module torchrl.trainers.helpers)": [[169, "torchrl.trainers.helpers.make_collector_offpolicy"]], "make_collector_onpolicy() (in module torchrl.trainers.helpers)": [[170, "torchrl.trainers.helpers.make_collector_onpolicy"]], "make_ddpg_actor() (in module torchrl.trainers.helpers)": [[171, "torchrl.trainers.helpers.make_ddpg_actor"]], "make_ddpg_loss() (in module torchrl.trainers.helpers)": [[172, "torchrl.trainers.helpers.make_ddpg_loss"]], "make_dqn_actor() (in module torchrl.trainers.helpers)": [[173, "torchrl.trainers.helpers.make_dqn_actor"]], "make_dqn_loss() (in module torchrl.trainers.helpers)": [[174, "torchrl.trainers.helpers.make_dqn_loss"]], "make_ppo_loss() (in module torchrl.trainers.helpers)": [[175, "torchrl.trainers.helpers.make_ppo_loss"]], "make_ppo_model() (in module torchrl.trainers.helpers)": [[176, "torchrl.trainers.helpers.make_ppo_model"]], "make_redq_loss() (in module torchrl.trainers.helpers)": [[177, "torchrl.trainers.helpers.make_redq_loss"]], "make_redq_model() (in module torchrl.trainers.helpers)": [[178, "torchrl.trainers.helpers.make_redq_model"]], "make_replay_buffer() (in module torchrl.trainers.helpers)": [[179, "torchrl.trainers.helpers.make_replay_buffer"]], "make_sac_loss() (in module torchrl.trainers.helpers)": [[180, "torchrl.trainers.helpers.make_sac_loss"]], "make_sac_model() (in module torchrl.trainers.helpers)": [[181, "torchrl.trainers.helpers.make_sac_model"]], "make_target_updater() (in module torchrl.trainers.helpers)": [[182, "torchrl.trainers.helpers.make_target_updater"]], "make_trainer() (in module torchrl.trainers.helpers)": [[183, "torchrl.trainers.helpers.make_trainer"]], "parallel_env_constructor() (in module torchrl.trainers.helpers)": [[184, "torchrl.trainers.helpers.parallel_env_constructor"]], "sync_async_collector() (in module torchrl.trainers.helpers)": [[185, "torchrl.trainers.helpers.sync_async_collector"]], "sync_sync_collector() (in module torchrl.trainers.helpers)": [[186, "torchrl.trainers.helpers.sync_sync_collector"]], "transformed_env_constructor() (in module torchrl.trainers.helpers)": [[187, "torchrl.trainers.helpers.transformed_env_constructor"]]}})