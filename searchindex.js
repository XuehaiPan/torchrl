Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer", "reference/generated/torchrl.data.replay_buffers.rb_prototype.ReplayBuffer", "reference/generated/torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage", "reference/generated/torchrl.data.replay_buffers.storages.Storage", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.writers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.Actor", "reference/generated/torchrl.modules.ActorCriticOperator", "reference/generated/torchrl.modules.ActorCriticWrapper", "reference/generated/torchrl.modules.ActorValueOperator", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueActor", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.ProbabilisticActor", "reference/generated/torchrl.modules.QValueActor", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.SafeModule", "reference/generated/torchrl.modules.SafeProbabilisticModule", "reference/generated/torchrl.modules.SafeProbabilisticSequential", "reference/generated/torchrl.modules.SafeSequential", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.ValueOperator", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TDEstimate", "reference/generated/torchrl.objectives.value.TDLambdaEstimate", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBuffer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_a2c_loss", "reference/generated/torchrl.trainers.helpers.make_a2c_model", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss", "reference/generated/torchrl.trainers.helpers.make_dqn_actor", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_loss", "reference/generated/torchrl.trainers.helpers.make_ppo_model", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_sac_loss", "reference/generated/torchrl.trainers.helpers.make_sac_model", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/index", "tutorials/multi_task", "tutorials/sg_execution_times", "tutorials/tensordict_module", "tutorials/tensordict_tutorial", "tutorials/torch_envs", "tutorials/torchrl_demo"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.replay_buffers.samplers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.samplers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.storages.Storage.rst", "reference/generated/torchrl.data.replay_buffers.writers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.writers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.Actor.rst", "reference/generated/torchrl.modules.ActorCriticOperator.rst", "reference/generated/torchrl.modules.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.ActorValueOperator.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.ProbabilisticActor.rst", "reference/generated/torchrl.modules.QValueActor.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.SafeModule.rst", "reference/generated/torchrl.modules.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.SafeProbabilisticSequential.rst", "reference/generated/torchrl.modules.SafeSequential.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.ValueOperator.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.actors.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.actors.QValueHook.rst", "reference/generated/torchrl.modules.tensordict_module.common.ensure_tensordict_compatible.rst", "reference/generated/torchrl.modules.tensordict_module.common.is_tensordict_compatible.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TDEstimate.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimate.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBuffer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_loss.rst", "reference/generated/torchrl.trainers.helpers.make_a2c_model.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_actor.rst", "reference/generated/torchrl.trainers.helpers.make_ddpg_loss.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_actor.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_loss.rst", "reference/generated/torchrl.trainers.helpers.make_ppo_model.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_sac_loss.rst", "reference/generated/torchrl.trainers.helpers.make_sac_model.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/sg_execution_times.rst", "tutorials/tensordict_module.rst", "tutorials/tensordict_tutorial.rst", "tutorials/torch_envs.rst", "tutorials/torchrl_demo.rst"], "titles": ["Welcome to the TorchRL Documentation!", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "About MuJoCo", "Pro-tips and Debugging", "Useful resources", "Versioning Issues", "implement_for", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "MultOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PrioritizedReplayBuffer", "ReplayBuffer", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorSpec", "UnboundedContinuousTensorSpec", "RemoteTensorDictReplayBuffer", "ReplayBuffer", "TensorDictReplayBuffer", "PrioritizedSampler", "RandomSampler", "Sampler", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "Storage", "RoundRobinWriter", "Writer", "EnvBase", "GymLikeEnv", "ModelBasedEnvBase", "ParallelEnv", "SerialEnv", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DoubleToFloat", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "Resize", "RewardClipping", "RewardScaling", "RewardSum", "SqueezeTransform", "StepCounter", "TensorDictPrimer", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "get_available_libraries", "set_exploration_mode", "step_mdp", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DistributionalQValueActor", "DreamerActor", "DuelingCnnDQNet", "LSTMNet", "MLP", "MPCPlannerBase", "NoisyLazyLinear", "NoisyLinear", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "ProbabilisticActor", "QValueActor", "RSSMPosterior", "RSSMPrior", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticSequential", "SafeSequential", "TanhDelta", "TanhNormal", "TruncatedNormal", "ValueOperator", "reset_noise", "DistributionalQValueHook", "QValueHook", "ensure_tensordict_compatible", "is_tensordict_compatible", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DistributionalDQNLoss", "HardUpdate", "KLPENPPOLoss", "PPOLoss", "REDQLoss", "SACLoss", "SoftUpdate", "distance_loss", "hold_out_net", "hold_out_params", "next_state_value", "GAE", "TDEstimate", "TDLambdaEstimate", "generalized_advantage_estimate", "td_advantage_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBuffer", "RewardNormalizer", "SelectKeys", "Trainer", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_a2c_loss", "make_a2c_model", "make_collector_offpolicy", "make_collector_onpolicy", "make_ddpg_actor", "make_ddpg_loss", "make_dqn_actor", "make_dqn_loss", "make_ppo_loss", "make_ppo_model", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_sac_loss", "make_sac_model", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Demos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Coding DDPG using TorchRL", "Coding a pixel-based DQN using TorchRL", "README Demos", "Task-specific policy in multi-task environments", "Computation times", "TensorDictModule", "TensorDict", "TorchRL envs", "Introduction to TorchRL"], "terms": {"The": [0, 1, 2, 3, 4, 6, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 27, 28, 29, 30, 31, 38, 41, 42, 44, 45, 58, 65, 68, 71, 75, 78, 81, 89, 90, 93, 95, 96, 97, 98, 104, 106, 108, 112, 114, 115, 116, 117, 119, 123, 129, 133, 134, 135, 138, 141, 146, 147, 148, 149, 157, 161, 186, 188, 189, 196, 198, 203, 204, 205, 206], "tensordict": [0, 1, 3, 11, 12, 13, 14, 15, 18, 19, 21, 25, 26, 29, 31, 35, 36, 41, 42, 43, 44, 45, 52, 55, 56, 58, 59, 60, 64, 65, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 91, 92, 93, 101, 104, 106, 112, 113, 116, 117, 118, 119, 123, 125, 126, 127, 128, 132, 133, 134, 135, 136, 138, 139, 140, 141, 146, 147, 148, 149, 157, 161, 165, 166, 171, 174, 176, 179, 181, 184, 192, 196, 198, 199, 200, 201, 202, 203, 205], "class": [0, 1, 2, 3, 4, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 188, 189, 190, 196, 198, 199, 203, 204, 205], "ha": [0, 4, 6, 7, 9, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 75, 78, 117, 138, 198, 199, 201, 203, 204, 205, 206], "been": [0, 4, 6, 7, 11, 12, 14, 41, 42, 44, 45, 77, 199, 201, 205], "move": [0, 21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 82, 105, 116, 164, 199, 205, 206], "out": [0, 3, 4, 21, 41, 42, 44, 45, 107, 108, 116, 117, 144, 145, 196, 203, 204, 205, 206], "dedic": [0, 90, 91, 92, 198, 201], "librari": [0, 4, 6, 7, 8, 9, 86, 192, 193, 197, 198, 205], "take": [0, 1, 3, 7, 15, 41, 42, 44, 45, 58, 68, 73, 74, 77, 79, 80, 81, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 109, 110, 114, 115, 129, 131, 150, 151, 152, 153, 154, 155, 156, 157, 167, 196, 198, 199, 203, 205], "look": [0, 4, 6, 7, 21, 41, 42, 44, 45, 68, 117, 118, 119, 199, 203, 205, 206], "find": [0, 203], "sourc": [0, 1, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 198, 199, 200, 201, 203, 204, 205, 206], "code": [0, 3, 4, 6, 7, 68, 119, 200, 201, 202, 203, 205, 206], "github": [0, 2, 4, 5, 6, 9, 206], "i": [0, 1, 2, 3, 5, 6, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 54, 55, 56, 57, 58, 61, 64, 65, 68, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 83, 87, 88, 89, 90, 93, 94, 95, 96, 97, 99, 102, 103, 104, 105, 106, 107, 108, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 146, 147, 148, 149, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 168, 169, 171, 174, 179, 181, 184, 186, 190, 193, 196, 198, 199, 201, 203, 205, 206], "an": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 57, 60, 64, 65, 68, 69, 76, 77, 78, 82, 84, 90, 91, 92, 94, 95, 96, 97, 98, 104, 105, 106, 107, 110, 116, 117, 118, 127, 128, 131, 132, 133, 136, 138, 139, 140, 141, 147, 148, 149, 161, 162, 163, 166, 169, 174, 187, 188, 189, 190, 193, 198, 199, 201, 203, 204, 205, 206], "open": [0, 4, 6, 10, 206], "reinforc": [0, 2, 3, 8, 55, 95, 96, 97, 98, 125, 132, 136, 137, 141, 142, 174, 199, 206], "learn": [0, 2, 3, 6, 7, 8, 21, 55, 95, 96, 97, 98, 108, 125, 132, 136, 137, 140, 141, 142, 174, 198, 199, 201, 205, 206], "rl": [0, 1, 2, 4, 7, 9, 11, 12, 13, 14, 43, 89, 108, 112, 123, 132, 139, 157, 193, 196, 198, 203, 204, 205], "pytorch": [0, 1, 2, 7, 76, 166, 196, 198, 204, 205, 206], "It": [0, 3, 6, 21, 25, 41, 42, 43, 44, 45, 50, 65, 78, 95, 97, 102, 114, 115, 117, 132, 133, 136, 138, 139, 140, 141, 146, 147, 162, 181, 193, 198, 203, 204, 205, 206], "provid": [0, 2, 3, 4, 7, 8, 13, 21, 23, 24, 25, 30, 41, 42, 43, 44, 45, 56, 64, 65, 68, 72, 75, 78, 81, 82, 89, 94, 104, 105, 106, 112, 125, 146, 147, 148, 149, 157, 163, 169, 171, 179, 181, 184, 186, 193, 196, 198, 199, 201, 203, 205, 206], "python": [0, 3, 4, 5, 6, 9, 196, 198, 199, 200, 201, 203, 205, 206], "first": [0, 1, 3, 4, 6, 7, 10, 11, 12, 13, 14, 42, 56, 61, 65, 68, 76, 78, 105, 107, 110, 116, 117, 165, 198, 199, 201, 203, 204, 205, 206], "low": [0, 198, 199, 206], "high": [0, 8, 147, 150, 151, 154, 198, 199, 206], "level": [0, 18, 138, 198, 199, 206], "abstract": [0, 7, 17, 18, 19, 27, 28, 40, 41, 66, 106, 196, 204, 206], "ar": [0, 1, 2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 21, 22, 29, 30, 31, 35, 36, 37, 38, 41, 42, 43, 44, 45, 58, 59, 60, 68, 72, 75, 77, 78, 81, 82, 88, 93, 98, 99, 104, 106, 108, 111, 115, 116, 117, 118, 119, 131, 132, 133, 136, 138, 139, 140, 141, 143, 146, 147, 148, 149, 186, 190, 191, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206], "intend": [0, 6, 11, 12, 13, 14, 206], "effici": [0, 2, 7, 108, 198, 199, 201, 204, 206], "modular": [0, 119, 206], "properli": [0, 204, 206], "test": [0, 3, 4, 84, 104, 162, 186, 203, 206], "aim": [0, 3, 6, 68, 81, 105, 168, 193, 198, 199, 206], "support": [0, 3, 18, 38, 77, 86, 101, 116, 119, 125, 136, 147, 148, 149, 196, 203, 204, 206], "research": [0, 6, 8, 206], "most": [0, 3, 6, 7, 21, 198, 199, 203, 206], "written": [0, 3, 25, 35, 41, 42, 44, 45, 72, 116, 117, 132, 133, 138, 139, 146, 196, 198, 201, 203, 206], "highli": [0, 2, 205, 206], "wai": [0, 139, 199, 201, 205, 206], "can": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 18, 19, 21, 25, 27, 29, 41, 42, 44, 45, 55, 58, 64, 65, 68, 72, 75, 77, 78, 81, 82, 93, 106, 108, 116, 117, 118, 119, 121, 122, 128, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 146, 147, 148, 149, 162, 171, 179, 181, 184, 188, 189, 190, 193, 196, 198, 199, 201, 203, 205, 206], "easili": [0, 3, 6, 44, 45, 171, 179, 181, 184, 199, 204, 205, 206], "swap": [0, 3, 206], "compon": [0, 3, 35, 36, 37, 38, 125, 126, 132, 133, 136, 138, 139, 140, 141, 161, 166, 201, 203, 206], "transform": [0, 7, 21, 29, 30, 31, 42, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 95, 102, 125, 126, 129, 131, 171, 174, 176, 179, 181, 184, 190, 192, 199], "them": [0, 6, 29, 30, 31, 41, 42, 44, 45, 58, 68, 73, 77, 79, 80, 81, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 109, 110, 114, 115, 129, 138, 198, 199, 201, 203, 204, 205, 206], "write": [0, 7, 21, 42, 67, 116, 117, 119, 134, 135, 140, 141, 146, 196, 198, 199, 201, 203, 204, 206], "new": [0, 3, 7, 11, 12, 13, 14, 21, 23, 25, 32, 41, 42, 44, 45, 72, 77, 82, 88, 116, 117, 132, 133, 135, 136, 138, 139, 140, 141, 198, 199, 203, 204, 205, 206], "ones": [0, 18, 21, 41, 42, 44, 45, 56, 58, 59, 65, 68, 75, 78, 81, 116, 198, 204, 205, 206], "littl": [0, 3, 205, 206], "effort": [0, 3, 206], "thi": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 18, 21, 22, 25, 31, 35, 36, 37, 38, 41, 42, 43, 44, 45, 50, 55, 56, 58, 60, 62, 65, 68, 72, 73, 75, 77, 78, 79, 80, 81, 82, 84, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 121, 122, 125, 126, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 147, 148, 149, 157, 159, 162, 166, 167, 168, 169, 171, 179, 181, 184, 186, 190, 193, 196, 198, 199, 201, 203, 205, 206], "repo": [0, 5, 193, 206], "attempt": [0, 206], "align": [0, 206], "exist": [0, 21, 41, 42, 44, 45, 56, 78, 169, 190, 203, 205, 206], "ecosystem": [0, 206], "dataset": [0, 23, 24, 25, 30, 82, 163, 204, 205, 206], "pillar": [0, 206], "environ": [0, 1, 3, 4, 7, 10, 11, 12, 13, 14, 21, 22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 56, 59, 62, 64, 65, 68, 74, 77, 78, 82, 84, 93, 104, 106, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 162, 168, 169, 171, 172, 173, 174, 176, 179, 181, 184, 186, 187, 188, 189, 190, 193, 200, 202], "model": [0, 1, 3, 7, 8, 11, 12, 13, 14, 21, 41, 42, 43, 44, 45, 68, 81, 83, 90, 91, 92, 94, 105, 106, 116, 132, 139, 140, 141, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 192, 193, 196, 203, 205], "data": [0, 3, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 65, 84, 89, 90, 91, 92, 93, 101, 104, 112, 113, 116, 117, 119, 123, 125, 126, 134, 140, 141, 147, 148, 149, 157, 163, 166, 167, 172, 186, 188, 189, 190, 192, 196, 199, 203, 204, 205], "util": [0, 11, 12, 13, 14, 15, 21, 41, 42, 44, 45, 68, 81, 84, 85, 86, 87, 88, 94, 129, 130, 131, 186, 192, 197, 198, 199, 203, 205, 206], "e": [0, 1, 3, 7, 9, 10, 11, 12, 13, 14, 18, 21, 22, 35, 36, 41, 42, 44, 45, 56, 58, 68, 72, 75, 77, 78, 81, 116, 117, 121, 122, 126, 146, 147, 148, 149, 157, 168, 189, 198, 199, 204, 205, 206], "g": [0, 1, 3, 7, 9, 10, 21, 22, 41, 42, 44, 45, 56, 58, 68, 72, 75, 77, 78, 81, 116, 117, 121, 122, 146, 152, 153, 155, 156, 189, 198, 199, 205, 206], "collector": [0, 3, 11, 12, 13, 14, 15, 166, 167, 172, 173, 186, 188, 189, 192, 196, 199, 205, 206], "contain": [0, 3, 6, 11, 12, 13, 14, 18, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 38, 39, 40, 41, 42, 43, 44, 45, 58, 68, 75, 78, 81, 82, 88, 93, 94, 105, 116, 132, 133, 134, 135, 136, 138, 139, 140, 141, 146, 147, 148, 149, 157, 163, 168, 171, 174, 176, 179, 181, 184, 186, 187, 188, 189, 190, 196, 199, 203, 205, 206], "etc": [0, 3, 6, 21, 28, 41, 42, 44, 45, 78, 105, 198, 204, 205, 206], "have": [0, 3, 4, 5, 6, 7, 11, 12, 14, 18, 21, 38, 41, 42, 44, 45, 55, 64, 77, 78, 82, 94, 104, 105, 118, 119, 133, 138, 139, 143, 157, 166, 196, 198, 199, 201, 203, 204, 205, 206], "few": [0, 2, 7, 157, 199, 205, 206], "depend": [0, 3, 6, 7, 123, 139, 205, 206], "possibl": [0, 3, 19, 21, 22, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116, 162, 166, 198, 203, 204, 205, 206], "standard": [0, 65, 71, 82, 93, 102, 107, 108, 147, 148, 149, 198, 199, 206], "numpi": [0, 13, 16, 17, 18, 19, 20, 22, 27, 28, 76, 166, 198, 199, 205, 206], "common": [0, 3, 7, 42, 44, 45, 90, 91, 92, 127, 128, 186, 193, 196, 198, 201, 203, 204, 205, 206], "openai": [0, 6, 48, 49, 205, 206], "gym": [0, 3, 7, 10, 11, 12, 13, 42, 48, 49, 65, 75, 82, 171, 174, 176, 179, 181, 184, 186, 193, 198, 199, 206], "onli": [0, 1, 6, 11, 12, 14, 18, 21, 25, 41, 42, 44, 45, 56, 58, 68, 75, 78, 81, 82, 104, 116, 117, 118, 119, 169, 196, 198, 199, 201, 203, 205, 206], "option": [0, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 35, 36, 41, 42, 43, 44, 45, 46, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 81, 82, 85, 88, 89, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 134, 135, 140, 141, 146, 147, 148, 149, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 169, 171, 172, 173, 174, 175, 177, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 198, 199, 206], "On": [0, 6, 199, 204], "end": [0, 21, 29, 30, 31, 41, 42, 44, 45, 78, 94, 106, 150, 151, 152, 153, 154, 155, 156, 198, 201, 205, 206], "come": [0, 1, 7, 44, 45, 89, 90, 91, 92, 112, 123, 198, 203, 205, 206], "set": [0, 1, 2, 3, 6, 8, 11, 12, 13, 14, 21, 22, 38, 41, 42, 43, 44, 45, 56, 58, 68, 74, 75, 78, 81, 87, 106, 116, 157, 162, 173, 190, 193, 197, 198, 199, 201, 205, 206], "re": [0, 3, 7, 21, 41, 42, 44, 45, 117, 196, 199, 201, 205, 206], "usabl": [0, 196, 206], "function": [0, 3, 7, 10, 15, 21, 35, 36, 37, 38, 41, 42, 44, 45, 58, 68, 73, 77, 78, 79, 80, 81, 82, 84, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 109, 110, 111, 114, 115, 116, 117, 119, 122, 123, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 171, 174, 176, 179, 181, 184, 186, 192, 198, 199, 201, 203, 204, 205], "cost": [0, 2, 19, 199], "return": [0, 3, 6, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 39, 40, 41, 42, 43, 44, 45, 46, 54, 55, 56, 57, 58, 59, 61, 63, 65, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 85, 86, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 104, 105, 106, 111, 113, 114, 115, 116, 117, 120, 121, 122, 123, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 146, 147, 148, 149, 152, 153, 155, 156, 163, 166, 168, 171, 172, 174, 176, 179, 181, 184, 186, 187, 188, 189, 190, 192, 196, 198, 199, 201, 203, 204, 205, 206], "process": [0, 1, 3, 4, 11, 12, 14, 44, 45, 82, 196, 198, 199, 205, 206], "good": [0, 1, 8, 205, 206], "runtim": [0, 3, 21, 41, 42, 44, 45], "perform": [0, 3, 7, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 58, 64, 68, 73, 77, 78, 79, 80, 81, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 109, 110, 114, 115, 129, 139, 162, 166, 198, 199, 201, 204, 205], "introduct": [0, 200, 202, 205], "env": [0, 1, 4, 5, 6, 7, 11, 12, 13, 21, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 106, 116, 169, 171, 172, 173, 174, 176, 179, 181, 184, 186, 188, 189, 190, 192, 198, 199, 200, 201, 202], "modul": [0, 3, 7, 10, 21, 41, 42, 43, 44, 45, 58, 68, 73, 75, 77, 78, 79, 80, 81, 82, 83, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 140, 142, 144, 147, 148, 149, 166, 170, 175, 177, 178, 180, 183, 186, 191, 192, 196, 198, 199, 200, 201, 203], "us": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 18, 19, 21, 23, 24, 25, 29, 30, 31, 32, 41, 42, 43, 44, 45, 46, 56, 57, 65, 68, 75, 76, 77, 78, 81, 82, 84, 87, 88, 93, 94, 95, 96, 102, 105, 106, 108, 116, 117, 121, 122, 125, 128, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 146, 147, 148, 149, 150, 151, 154, 162, 163, 166, 167, 169, 172, 173, 174, 182, 186, 190, 191, 193, 196, 197, 200, 201, 202, 204, 205], "object": [0, 3, 11, 12, 13, 14, 18, 21, 35, 36, 37, 38, 41, 42, 44, 45, 68, 77, 78, 82, 89, 90, 112, 116, 117, 118, 127, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 169, 172, 173, 185, 186, 190, 192, 196, 199, 203, 205], "state": [0, 1, 3, 11, 12, 13, 14, 21, 41, 42, 43, 44, 45, 52, 55, 56, 58, 68, 74, 75, 77, 78, 80, 81, 82, 83, 90, 93, 102, 104, 105, 109, 114, 115, 116, 140, 146, 147, 148, 149, 190, 198, 199, 205], "contribut": 0, "instal": [0, 4, 9, 166, 193, 205], "improv": [0, 2, 62, 132], "structur": [0, 3, 6, 147, 148, 149], "dictionari": [0, 11, 12, 13, 14, 18, 21, 41, 42, 44, 45, 78, 117, 188, 189, 190, 196, 198, 205], "featur": [0, 3, 11, 12, 13, 14, 22, 41, 42, 44, 45, 55, 94, 102, 103, 105, 107, 108, 117, 147, 148, 149, 190, 198, 199, 203, 205, 206], "tensor": [0, 3, 7, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 36, 39, 40, 41, 42, 43, 44, 45, 52, 55, 56, 58, 61, 65, 68, 71, 75, 76, 77, 78, 81, 82, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 111, 112, 113, 116, 117, 119, 120, 121, 122, 123, 125, 126, 129, 130, 134, 135, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 163, 171, 174, 176, 179, 181, 184, 196, 198, 199, 201, 203, 205, 206], "tensordictmodul": [0, 11, 12, 13, 14, 116, 118, 198, 199, 200, 201, 202], "exampl": [0, 3, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 56, 58, 59, 65, 68, 75, 76, 78, 81, 82, 88, 89, 90, 91, 92, 93, 94, 101, 104, 105, 112, 113, 116, 119, 123, 125, 126, 128, 147, 148, 149, 157, 158, 159, 160, 161, 164, 165, 167, 171, 174, 176, 179, 181, 184, 186, 191, 196, 198, 199, 200, 201, 204, 205, 206], "do": [0, 3, 6, 11, 12, 13, 14, 42, 64, 88, 91, 107, 196, 198, 199, 201, 205, 206], "": [0, 1, 3, 5, 6, 7, 21, 23, 24, 25, 30, 41, 42, 44, 45, 58, 68, 75, 78, 81, 82, 84, 94, 108, 116, 117, 141, 147, 148, 149, 163, 181, 184, 198, 199, 201, 204, 205, 206], "don": [0, 5, 6, 16, 17, 18, 19, 20, 22, 27, 28, 41, 198, 204, 205, 206], "t": [0, 3, 5, 6, 7, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 32, 41, 42, 44, 45, 68, 81, 82, 88, 116, 128, 134, 147, 148, 149, 166, 167, 190, 193, 198, 199, 201, 205, 206], "showcas": 0, "implement": [0, 2, 3, 8, 10, 21, 38, 41, 42, 44, 45, 82, 120, 121, 122, 132, 139, 141, 171, 179, 181, 184, 196, 198, 199, 206], "deepmind": [0, 6, 8, 46, 47], "control": [0, 1, 3, 4, 44, 45, 46, 47, 95, 96, 97, 98, 106, 115, 116, 117, 118, 133, 138, 139, 142, 147, 150, 151, 154, 174, 196, 198], "devic": [0, 1, 2, 3, 6, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 27, 28, 35, 36, 41, 42, 43, 44, 45, 52, 53, 58, 67, 68, 75, 76, 78, 81, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 107, 108, 112, 113, 116, 119, 123, 125, 126, 134, 167, 171, 174, 176, 179, 181, 182, 184, 198, 199, 201, 203, 206], "run": [0, 1, 3, 4, 5, 6, 7, 9, 11, 12, 14, 21, 41, 42, 43, 44, 45, 46, 47, 58, 64, 65, 68, 73, 77, 78, 79, 80, 81, 82, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 109, 110, 114, 115, 118, 119, 129, 162, 188, 189, 190, 193, 196, 198, 199, 201, 203, 204, 206], "parallel": [0, 1, 3, 7, 11, 12, 14, 84, 132, 187, 188, 189, 190, 199], "vecnorm": [0, 190, 192], "task": [0, 8, 44, 45, 46, 68, 81, 198, 199, 200, 202, 205, 206], "specif": [0, 4, 7, 25, 26, 31, 42, 166, 192, 196, 200, 202], "polici": [0, 1, 2, 3, 7, 11, 12, 13, 14, 41, 42, 43, 44, 45, 87, 88, 90, 91, 92, 108, 116, 117, 125, 126, 132, 133, 134, 138, 139, 140, 141, 162, 167, 171, 172, 173, 174, 176, 179, 186, 188, 189, 196, 199, 200, 202, 203, 205, 206], "multi": [0, 3, 6, 8, 21, 41, 42, 44, 45, 104, 105, 198, 199, 200, 202, 206], "execut": [0, 1, 3, 6, 7, 13, 29, 30, 31, 41, 42, 43, 44, 45, 118, 119, 169, 190, 196, 199, 202, 203, 205], "divers": [0, 44, 45], "rollout": [0, 1, 3, 11, 12, 13, 14, 41, 42, 43, 44, 45, 84, 93, 132, 169, 198, 199, 206], "ddpg": [0, 95, 96, 97, 98, 134, 137, 142, 174, 175, 192, 200, 202], "normal": [0, 29, 65, 82, 94, 105, 117, 121, 122, 162, 164, 190, 196, 199, 205], "observ": [0, 2, 3, 7, 11, 12, 13, 27, 41, 42, 43, 44, 45, 46, 47, 52, 55, 56, 57, 58, 59, 61, 63, 65, 66, 68, 69, 72, 74, 75, 76, 77, 78, 79, 81, 82, 88, 89, 90, 91, 92, 95, 96, 97, 98, 101, 104, 109, 110, 112, 113, 114, 123, 125, 126, 147, 148, 149, 171, 174, 176, 179, 181, 184, 186, 196, 199, 201, 203, 204, 205, 206], "build": [0, 3, 6, 15, 18, 21, 41, 42, 44, 45, 82, 93, 117, 166, 170, 175, 177, 178, 180, 182, 183, 185, 196, 203, 204, 205, 206], "evalu": [0, 21, 41, 42, 44, 45, 78, 99, 111, 122, 140, 172, 173, 199], "your": [0, 6, 7, 9, 21, 41, 42, 44, 45, 82, 190, 193, 199, 204, 206], "record": [0, 21, 41, 42, 44, 45, 139, 186, 192, 196, 199], "replai": [0, 7, 13, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 38, 39, 44, 45, 134, 135, 140, 141, 163, 166, 182, 186, 192, 196, 199], "buffer": [0, 3, 7, 13, 21, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 58, 68, 75, 78, 81, 116, 119, 134, 135, 140, 141, 163, 166, 182, 186, 192, 196, 199, 203, 205], "hyperparamet": [0, 1], "initi": [0, 6, 11, 12, 13, 14, 21, 41, 42, 44, 45, 65, 68, 75, 77, 78, 83, 93, 107, 108, 138, 140, 141, 171, 174, 176, 179, 181, 184, 190, 199, 205], "time": [0, 3, 6, 7, 11, 12, 13, 14, 21, 41, 42, 44, 45, 56, 75, 82, 88, 102, 104, 140, 147, 148, 149, 166, 199, 201, 203, 204, 205, 206], "train": [0, 1, 11, 12, 13, 14, 21, 41, 42, 44, 45, 62, 68, 78, 81, 95, 97, 132, 133, 136, 138, 139, 140, 141, 147, 166, 167, 186, 196, 204, 205], "experi": [0, 3, 23, 32, 193], "result": [0, 1, 3, 6, 11, 12, 13, 14, 21, 41, 42, 44, 45, 54, 55, 56, 57, 58, 59, 61, 63, 65, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 84, 88, 105, 126, 147, 150, 151, 152, 153, 154, 155, 156, 167, 199, 204, 205, 206], "sampl": [0, 2, 7, 8, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 41, 43, 85, 87, 93, 99, 111, 114, 116, 117, 121, 122, 133, 134, 135, 138, 139, 157, 163, 166, 168, 199, 203, 205, 206], "trajectori": [0, 1, 11, 12, 13, 14, 15, 21, 41, 42, 44, 45, 77, 93, 139, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 199, 205, 206], "td": [0, 18, 46, 47, 48, 49, 51, 52, 56, 59, 65, 76, 78, 82, 88, 89, 90, 91, 92, 93, 101, 106, 112, 113, 116, 119, 123, 125, 126, 148, 149, 152, 153, 155, 156, 157, 165, 171, 174, 176, 179, 181, 184, 203, 204, 205, 206], "lambda": [0, 11, 12, 13, 14, 149, 152, 153, 155, 156, 186, 203, 204, 205, 206], "pixel": [0, 3, 6, 18, 63, 68, 69, 76, 81, 95, 109, 110, 171, 176, 179, 181, 184, 198, 200, 202, 205, 206], "base": [0, 3, 7, 8, 11, 12, 13, 14, 34, 40, 43, 80, 90, 166, 171, 179, 181, 184, 196, 198, 200, 202, 205], "dqn": [0, 101, 113, 125, 135, 136, 137, 142, 176, 177, 192, 200, 202], "problem": [0, 6, 7, 13, 205], "deep": [0, 8, 55, 95, 96, 97, 98, 100, 132, 137, 141, 142, 174, 198], "q": [0, 95, 96, 97, 98, 100, 103, 125, 126, 134, 135, 136, 137, 140, 141, 181, 184, 203], "network": [0, 1, 7, 21, 41, 42, 44, 45, 90, 91, 92, 94, 95, 96, 97, 98, 100, 102, 103, 105, 108, 109, 110, 114, 115, 116, 134, 135, 136, 137, 140, 141, 142, 144, 147, 148, 149, 171, 174, 179, 185, 186, 196, 198, 201, 203, 205], "regular": [0, 14, 116, 117, 126, 136, 167, 196, 198, 203, 204, 205], "conclus": 0, "api": [0, 3, 4, 68, 81, 196, 205, 206], "packag": [0, 5, 6, 9, 192, 193, 205], "trainer": [0, 132, 133, 136, 138, 139, 140, 141, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 198], "_util": [0, 10, 192], "knowledg": 0, "work": [0, 6, 7, 21, 41, 42, 44, 45, 56, 68, 82, 94, 105, 166, 193, 199, 201, 203, 204, 205, 206], "habitat": [0, 50, 193], "lab": [0, 3, 46, 47, 193], "about": [0, 4, 193, 198, 199, 205, 206], "mujoco": [0, 5, 193], "issu": [0, 4, 7, 116, 117, 193, 206], "when": [0, 1, 3, 4, 7, 11, 12, 13, 14, 21, 23, 24, 25, 29, 30, 31, 35, 36, 37, 38, 41, 42, 44, 45, 58, 64, 68, 72, 75, 77, 78, 81, 82, 87, 93, 105, 106, 107, 116, 117, 119, 121, 129, 133, 138, 139, 146, 163, 190, 193, 196, 198, 199, 203, 204, 205], "render": [0, 7, 162, 193, 198, 199], "pro": [0, 6, 193], "tip": [0, 6, 193], "debug": [0, 5, 193, 205], "resourc": [0, 193], "version": [0, 1, 10, 21, 41, 42, 44, 45, 149, 193, 198, 199, 205], "index": [0, 6, 7, 9, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 40, 88, 163, 198, 201, 204, 206], "search": [0, 199], "page": [0, 6], "somewhat": [1, 205], "equival": [1, 11, 12, 13, 14, 21, 41, 42, 44, 45, 78, 205, 206], "dataload": [1, 204], "except": [1, 16, 17, 18, 19, 20, 22, 27, 28, 41, 60, 111, 128, 198, 199, 204, 205], "1": [1, 2, 3, 7, 9, 11, 12, 13, 14, 19, 20, 21, 22, 28, 41, 42, 43, 44, 45, 52, 54, 56, 58, 59, 62, 64, 65, 68, 75, 76, 78, 81, 82, 88, 90, 91, 92, 93, 94, 95, 96, 98, 103, 105, 107, 108, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 125, 129, 132, 133, 138, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 164, 171, 174, 176, 179, 181, 184, 186, 190, 193, 196, 198, 199, 201, 204, 205, 206], "thei": [1, 3, 7, 8, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 59, 60, 77, 78, 104, 132, 133, 136, 138, 139, 140, 141, 166, 196, 198, 199, 201, 203, 204, 205, 206], "collect": [1, 3, 7, 11, 12, 13, 14, 21, 23, 24, 25, 26, 29, 30, 31, 65, 68, 81, 84, 134, 140, 141, 157, 163, 166, 167, 168, 169, 186, 196, 198, 199, 204, 205, 206], "over": [1, 2, 3, 7, 11, 12, 13, 14, 21, 41, 42, 44, 45, 65, 119, 136, 168, 196, 198, 203, 204, 205, 206], "non": [1, 7, 21, 23, 25, 41, 42, 44, 45, 54, 58, 68, 75, 78, 81, 116, 117, 147, 148, 149, 198, 203, 205], "static": [1, 82], "2": [1, 7, 9, 11, 12, 13, 20, 21, 41, 42, 44, 45, 56, 58, 65, 68, 75, 78, 81, 82, 94, 95, 96, 97, 101, 103, 104, 105, 116, 123, 125, 133, 134, 138, 140, 141, 146, 147, 148, 149, 152, 153, 155, 156, 157, 198, 199, 201, 204, 205, 206], "like": [1, 6, 21, 41, 42, 44, 45, 50, 76, 84, 140, 198, 204, 205, 206], "being": [1, 3, 7, 14, 21, 41, 42, 44, 45, 78, 87, 167, 188, 189, 190, 198, 199], "accept": [1, 11, 12, 13, 14, 21, 41, 42, 43, 44, 45, 58, 68, 72, 75, 78, 81, 116, 117, 118, 196, 203, 205], "two": [1, 7, 9, 21, 41, 42, 44, 45, 98, 117, 138, 141, 143, 162, 166, 171, 179, 181, 184, 198, 199, 201, 203, 204, 205, 206], "main": [1, 2, 4, 117, 166, 198, 199, 201, 205], "argument": [1, 3, 11, 12, 13, 14, 18, 21, 41, 42, 44, 45, 58, 68, 75, 77, 78, 81, 94, 105, 107, 116, 117, 118, 123, 159, 168, 171, 174, 176, 179, 181, 184, 186, 187, 190, 198, 199, 203, 205], "list": [1, 5, 6, 7, 8, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 37, 38, 41, 42, 43, 44, 45, 55, 68, 72, 78, 81, 105, 119, 123, 145, 147, 149, 162, 163, 188, 189, 198, 199, 201, 203, 204, 205, 206], "constructor": [1, 13, 77, 147, 148, 149, 171, 174, 176, 179, 181, 184, 187, 190, 203], "iter": [1, 12, 13, 20, 21, 23, 24, 25, 26, 29, 30, 31, 41, 42, 44, 45, 65, 82, 94, 105, 116, 117, 118, 119, 127, 145, 162, 163, 165, 166, 171, 179, 181, 184, 196, 198], "step": [1, 3, 7, 11, 12, 13, 14, 21, 41, 42, 43, 44, 45, 52, 64, 65, 74, 78, 88, 93, 102, 104, 106, 117, 132, 139, 146, 157, 162, 166, 196, 198, 199, 201, 204, 206], "queri": [1, 11, 12, 13, 14, 21, 41, 42, 44, 45, 68, 77, 82, 119, 203, 206], "defin": [1, 2, 16, 17, 18, 19, 20, 22, 27, 28, 41, 42, 44, 45, 58, 68, 73, 77, 79, 80, 81, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 109, 110, 114, 115, 129, 147, 148, 149, 187, 199, 203, 204, 205], "number": [1, 3, 7, 11, 12, 13, 14, 17, 19, 21, 22, 23, 24, 25, 30, 32, 35, 36, 37, 41, 42, 43, 44, 45, 55, 62, 64, 65, 71, 74, 82, 93, 94, 99, 100, 102, 103, 105, 109, 110, 114, 115, 116, 117, 120, 121, 122, 131, 140, 141, 157, 159, 162, 163, 166, 167, 168, 169, 188, 189, 190, 198, 199, 205], "befor": [1, 3, 6, 9, 11, 12, 13, 14, 21, 41, 42, 44, 45, 54, 55, 56, 57, 58, 59, 61, 63, 65, 68, 69, 70, 71, 74, 75, 76, 77, 79, 81, 105, 107, 108, 132, 133, 136, 138, 139, 140, 141, 148, 149, 198, 199, 203, 204, 205], "deliv": [1, 199, 206], "stack": [1, 6, 7, 25, 44, 45, 82, 88, 118, 119, 157, 199, 201, 203, 204, 206], "user": [1, 4, 7, 21, 41, 42, 44, 45, 74, 78, 104, 187, 196, 199, 203, 205, 206], "reset": [1, 3, 7, 11, 12, 13, 14, 41, 42, 43, 44, 45, 52, 55, 58, 64, 68, 72, 74, 75, 77, 80, 81, 82, 83, 88, 124, 171, 174, 176, 179, 181, 184, 198, 199, 201, 206], "whenev": [1, 3, 167], "reach": [1, 11, 12, 13, 14, 41, 42, 44, 45, 205, 206], "done": [1, 3, 6, 7, 11, 12, 13, 18, 21, 41, 42, 43, 44, 45, 52, 65, 71, 74, 75, 82, 88, 93, 134, 135, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 171, 174, 176, 179, 181, 184, 198, 199, 201, 204, 205, 206], "after": [1, 7, 18, 21, 41, 42, 44, 45, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 88, 107, 198, 199, 203, 204, 205], "predifin": 1, "becaus": [1, 6, 77, 98, 104, 116, 117, 198, 199, 201, 204, 205], "potenti": 1, "comput": [1, 3, 7, 11, 13, 19, 21, 23, 25, 41, 42, 44, 45, 58, 65, 68, 73, 77, 78, 79, 80, 81, 90, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 109, 110, 114, 115, 117, 121, 122, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 169, 198, 199, 201, 203], "heavi": [1, 7], "crucial": [1, 198, 199, 205], "configur": [1, 7, 11, 12, 13, 14, 139, 171, 179, 181, 184], "appropri": [1, 6, 11, 12, 13, 14, 39, 40, 187, 190], "paramet": [1, 7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 179, 181, 184, 186, 187, 188, 189, 190, 198, 199, 203, 206], "consider": [1, 3, 7, 198], "whether": [1, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 41, 42, 43, 44, 45, 78, 94, 105, 123, 134, 135, 136, 140, 141, 149, 163, 199, 205], "should": [1, 3, 4, 6, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 38, 41, 42, 43, 44, 45, 58, 65, 68, 72, 73, 77, 78, 79, 80, 81, 82, 84, 88, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 109, 110, 114, 115, 116, 117, 129, 137, 138, 139, 140, 142, 146, 147, 148, 149, 161, 162, 163, 166, 186, 188, 189, 190, 196, 198, 199, 201, 205, 206], "occur": [1, 7, 12, 56, 116, 117, 205], "serial": [1, 3, 21, 41, 42, 44, 45, 82], "optim": [1, 7, 21, 41, 42, 44, 45, 93, 107, 108, 139, 141, 161, 166, 171, 179, 186, 196, 198, 199, 204], "syncdatacollector": [1, 11, 12, 14, 186, 189, 192], "worker": [1, 11, 12, 13, 14, 44, 45, 82, 188, 189, 190, 205, 206], "multisyncdatacollector": [1, 189, 192, 206], "split": [1, 11, 12, 13, 14, 132, 133, 136, 138, 139, 140, 141, 196, 206], "workload": 1, "across": [1, 82, 167, 204], "aggreg": [1, 94, 95, 96, 119, 204], "final": [1, 118, 147, 162, 198, 199, 205], "multiasyncdatacollector": [1, 14, 188, 192, 198, 199, 206], "sever": [1, 7, 21, 41, 42, 44, 45, 56, 78, 139, 205], "batch": [1, 3, 11, 12, 13, 14, 15, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 41, 42, 43, 44, 45, 65, 78, 99, 100, 104, 107, 111, 116, 120, 132, 133, 136, 138, 139, 140, 141, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 165, 166, 167, 188, 189, 190, 196, 198, 199, 201, 203, 205, 206], "gather": [1, 23, 25, 146, 169, 193, 203, 205], "continu": [1, 8, 17, 28, 95, 96, 97, 98, 117, 119, 142, 147, 150, 151, 154, 174, 198, 205], "concomittantli": 1, "impli": [1, 205], "weight": [1, 8, 11, 12, 13, 14, 21, 23, 25, 41, 42, 44, 45, 58, 68, 75, 78, 81, 108, 116, 132, 133, 167, 185, 196, 198, 199, 201, 206], "mai": [1, 3, 4, 6, 7, 11, 12, 13, 14, 21, 41, 42, 44, 45, 78, 82, 105, 196, 198, 205, 206], "slightli": [1, 198, 203, 205], "lag": [1, 11, 12, 13, 14], "therefor": [1, 3, 6, 139, 204, 205], "although": [1, 7, 41, 42, 44, 45, 58, 68, 73, 77, 79, 80, 81, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 109, 110, 114, 115, 129, 196, 198, 199], "fastest": 1, "price": 1, "suitabl": 1, "where": [1, 3, 6, 7, 11, 12, 13, 14, 23, 24, 25, 26, 29, 30, 31, 35, 36, 41, 42, 43, 44, 45, 68, 72, 77, 81, 116, 117, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 149, 163, 166, 167, 196, 198, 199, 201, 203, 205], "asynchron": [1, 8, 12, 21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116, 132, 188], "off": [1, 2, 121, 122, 141, 162, 172, 196, 199, 205], "curriculum": 1, "For": [1, 3, 6, 7, 8, 9, 11, 12, 13, 14, 21, 41, 42, 44, 45, 107, 125, 132, 136, 139, 162, 174, 196, 198, 203, 205], "remot": [1, 29, 44, 45, 205], "necessari": [1, 5, 7, 11, 12, 13, 14, 140, 147, 148, 149, 198], "synchronis": 1, "from": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 41, 42, 43, 44, 45, 56, 65, 68, 74, 75, 76, 77, 78, 81, 82, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 105, 106, 107, 112, 113, 116, 117, 118, 119, 121, 122, 123, 125, 126, 133, 134, 135, 138, 139, 140, 141, 146, 147, 148, 149, 157, 163, 166, 168, 169, 171, 174, 176, 179, 181, 182, 184, 186, 187, 190, 193, 196, 198, 199, 201, 203, 204, 205, 206], "either": [1, 4, 21, 41, 42, 44, 45, 174, 196, 204, 205, 206], "update_policy_weights_": [1, 11, 12, 13, 14, 198, 199, 206], "update_at_each_batch": [1, 11, 12, 14, 198], "true": [1, 3, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 41, 42, 43, 44, 45, 46, 47, 56, 58, 64, 65, 68, 71, 74, 75, 76, 78, 81, 82, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 103, 105, 107, 108, 116, 117, 118, 119, 121, 122, 128, 132, 133, 138, 139, 140, 141, 143, 147, 148, 149, 152, 153, 155, 156, 159, 160, 162, 166, 176, 190, 196, 198, 199, 201, 203, 204, 205, 206], "second": [1, 7, 165, 198, 199, 201, 203, 204, 205, 206], "consid": [1, 7, 21, 41, 42, 44, 45, 99, 120, 198, 204], "oper": [1, 3, 6, 7, 11, 12, 14, 21, 41, 42, 44, 45, 77, 90, 91, 92, 116, 125, 132, 133, 134, 135, 136, 138, 139, 146, 147, 148, 149, 166, 174, 176, 181, 184, 196, 198, 199, 201, 203, 205], "instanc": [1, 3, 6, 7, 11, 12, 13, 14, 21, 27, 41, 42, 43, 44, 45, 47, 55, 58, 68, 73, 75, 77, 79, 80, 81, 82, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 109, 110, 114, 115, 117, 118, 119, 129, 162, 169, 171, 172, 173, 174, 176, 179, 181, 184, 186, 188, 189, 196, 199, 203, 204, 205, 206], "cpu": [1, 3, 7, 9, 11, 12, 13, 21, 27, 35, 36, 41, 42, 43, 44, 45, 52, 53, 58, 68, 75, 78, 81, 93, 108, 112, 116, 119, 171, 174, 176, 179, 181, 184, 198, 199, 201, 204, 205, 206], "slower": 1, "than": [1, 7, 11, 12, 13, 14, 98, 105, 116, 167, 193, 198, 199, 203, 204, 205, 206], "one": [1, 3, 4, 6, 7, 10, 11, 12, 13, 14, 20, 22, 23, 24, 25, 26, 29, 30, 31, 38, 39, 40, 41, 42, 44, 45, 58, 64, 68, 73, 77, 78, 79, 80, 81, 82, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 109, 110, 111, 113, 114, 115, 116, 117, 125, 126, 129, 131, 132, 133, 134, 135, 138, 139, 140, 159, 161, 162, 163, 166, 169, 171, 179, 181, 184, 190, 193, 196, 198, 199, 201, 203, 204, 205, 206], "cuda": [1, 3, 6, 21, 41, 42, 44, 45, 58, 67, 68, 75, 78, 81, 116, 158, 198, 199, 204, 205], "multipl": [1, 3, 4, 7, 11, 12, 13, 14, 19, 44, 45, 56, 72, 77, 82, 104, 107, 108, 116, 117, 140, 181, 190, 196, 199, 204, 206], "infer": [1, 44, 45, 82, 107, 141, 198, 203, 204], "dispatch": 1, "avail": [1, 5, 117, 125, 126, 188, 189, 198, 199, 205], "speed": [1, 2, 7, 19, 198, 199], "up": [1, 2, 3, 7, 8, 19, 193, 198, 199, 203, 205], "avoid": [1, 21, 41, 42, 44, 45, 78, 82, 116, 168, 203], "oom": 1, "error": [1, 3, 6, 9, 10, 21, 41, 42, 44, 45, 84, 128, 198, 199, 204, 205], "choic": [1, 2], "size": [1, 3, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 41, 42, 43, 44, 45, 52, 53, 56, 68, 73, 75, 76, 78, 79, 81, 90, 91, 92, 93, 94, 99, 101, 104, 105, 111, 112, 113, 114, 115, 116, 119, 120, 123, 125, 126, 146, 147, 148, 149, 157, 163, 171, 174, 176, 179, 181, 184, 198, 199, 201, 203, 205, 206], "pass": [1, 3, 13, 18, 21, 25, 41, 42, 44, 45, 58, 68, 73, 77, 79, 80, 81, 82, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 107, 109, 110, 114, 115, 116, 117, 119, 128, 129, 147, 148, 149, 188, 189, 190, 198, 199, 201, 205], "ie": 1, "store": [1, 7, 11, 12, 13, 14, 18, 21, 25, 31, 35, 36, 37, 41, 42, 44, 45, 82, 93, 104, 171, 174, 176, 179, 181, 184, 196, 198, 199, 204, 205], "while": [1, 3, 6, 7, 21, 41, 42, 44, 45, 58, 68, 73, 77, 79, 80, 81, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 109, 110, 114, 115, 129, 138, 139, 198, 199, 206], "wait": [1, 199], "also": [1, 2, 3, 7, 21, 25, 41, 42, 44, 45, 72, 78, 115, 118, 119, 132, 134, 135, 147, 196, 198, 199, 201, 203, 204, 205], "impact": 1, "memori": [1, 7, 19, 21, 35, 41, 42, 44, 45, 58, 68, 75, 78, 81, 82, 116, 190, 196, 198, 206], "manag": [1, 7, 144, 145, 162, 198, 203], "kei": [1, 3, 6, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 31, 41, 42, 44, 45, 55, 56, 65, 68, 72, 75, 77, 78, 81, 82, 88, 93, 106, 116, 117, 118, 119, 123, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 146, 147, 148, 149, 161, 162, 165, 166, 169, 171, 179, 181, 184, 196, 198, 199, 201, 203, 205, 206], "which": [1, 3, 6, 7, 10, 11, 12, 13, 14, 18, 19, 21, 22, 31, 41, 42, 44, 45, 55, 56, 62, 64, 65, 68, 77, 78, 90, 91, 92, 116, 117, 119, 121, 122, 132, 133, 136, 138, 139, 140, 141, 143, 147, 157, 161, 171, 174, 176, 179, 181, 184, 196, 198, 199, 201, 203, 204, 205], "passing_devic": [1, 11, 12, 13, 14, 198, 199, 206], "dure": [1, 11, 12, 13, 14, 41, 42, 44, 45, 62, 78, 162, 166, 198, 205], "A": [1, 3, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 50, 62, 68, 75, 77, 78, 80, 82, 83, 84, 88, 93, 94, 105, 108, 117, 118, 119, 125, 129, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 149, 159, 163, 166, 167, 171, 176, 179, 181, 184, 186, 199, 204, 205], "heurist": [1, 16, 17, 18, 19, 20, 22, 27, 28, 198, 205], "usual": [1, 3, 5, 6, 7, 41, 42, 44, 45, 108, 171, 179, 181, 184, 193, 196, 205], "same": [1, 3, 13, 21, 41, 42, 44, 45, 62, 64, 65, 77, 78, 82, 94, 105, 198, 199, 201, 203, 204, 205], "storag": [1, 2, 7, 21, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 41, 42, 44, 45, 163, 192, 196, 198, 199], "default": [1, 3, 9, 11, 12, 13, 14, 18, 19, 21, 22, 25, 30, 35, 36, 41, 42, 44, 45, 46, 55, 56, 61, 64, 65, 68, 71, 75, 76, 78, 81, 82, 88, 89, 93, 94, 95, 96, 97, 98, 99, 102, 103, 105, 107, 108, 109, 110, 112, 114, 115, 116, 117, 120, 121, 122, 123, 129, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 152, 153, 155, 156, 157, 159, 160, 162, 164, 166, 171, 174, 179, 181, 184, 186, 190, 196, 198, 199, 203, 204, 205, 206], "behaviour": [1, 3, 42, 56, 121, 122, 162, 199], "besid": 1, "those": [1, 4, 6, 44, 45, 65, 117, 118, 119, 167, 188, 189, 198, 199, 205], "choos": [1, 198], "follow": [1, 2, 3, 5, 6, 7, 21, 41, 42, 43, 44, 45, 68, 94, 105, 131, 133, 138, 166, 181, 184, 196, 198, 199, 201, 203, 204, 205, 206], "max_frames_per_traj": [1, 11, 12, 13, 14, 168, 198, 206], "frame": [1, 11, 12, 13, 14, 21, 42, 55, 62, 159, 162, 166, 168, 169, 198, 199, 205, 206], "call": [1, 3, 6, 7, 10, 11, 12, 13, 14, 21, 23, 24, 25, 29, 30, 31, 35, 36, 37, 38, 41, 42, 44, 45, 55, 58, 59, 67, 68, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 107, 109, 110, 114, 115, 116, 117, 119, 129, 146, 162, 163, 196, 198, 199, 203, 204, 205, 206], "frames_per_batch": [1, 11, 12, 13, 14, 168, 198, 199, 206], "each": [1, 3, 6, 7, 11, 12, 13, 14, 15, 20, 21, 23, 25, 41, 42, 44, 45, 72, 74, 75, 82, 119, 125, 126, 152, 153, 155, 156, 162, 188, 189, 198, 199, 203, 205, 206], "init_random_fram": [1, 11, 12, 13, 14, 168, 198, 199], "random": [1, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 27, 28, 33, 41, 42, 43, 44, 45, 64, 65, 75, 116, 117, 140, 162, 169, 198, 199, 205, 206], "rand_step": [1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 82, 205, 206], "reset_at_each_it": [1, 11, 12, 13, 14, 198], "split_traj": [1, 11, 12, 13, 14, 198], "pad": [1, 15, 94, 95, 96, 104, 198, 199], "along": [1, 55, 56, 65, 72, 76, 105, 108, 116, 117, 199, 204], "mask": [1, 11, 12, 13, 198, 199, 204, 205], "point": [1, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 32, 39, 40, 41, 42, 44, 45, 55, 58, 68, 75, 76, 78, 81, 106, 116, 131, 136, 166, 193, 201, 205], "boolean": [1, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 27, 28, 42, 150, 151, 152, 153, 154, 155, 156, 196], "repres": [1, 3, 11, 12, 13, 14, 25, 41, 42, 44, 45, 62, 117, 125, 126, 143, 147, 203, 204], "valid": [1, 78, 94, 105, 138, 196, 205], "valu": [1, 3, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 41, 42, 44, 45, 54, 56, 64, 65, 68, 70, 72, 75, 76, 77, 78, 81, 82, 89, 90, 91, 92, 95, 96, 97, 98, 99, 101, 102, 103, 105, 107, 108, 111, 112, 113, 116, 117, 120, 121, 122, 123, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 166, 171, 174, 179, 181, 184, 186, 196, 198, 199, 201, 203, 205, 206], "exploration_mod": [1, 11, 13, 162, 192, 198, 199, 203], "explor": [1, 83, 108, 116, 117, 132, 162, 172, 173, 186, 192, 198, 199], "strategi": [1, 196, 198], "reset_when_don": [1, 11, 13], "central": 2, "part": [2, 7, 21, 41, 42, 44, 45, 65, 72, 123, 157, 190, 198, 199, 203, 205], "algorithm": [2, 7, 8, 11, 12, 43, 62, 132, 139, 140, 157, 171, 172, 179, 196, 198, 199, 204, 206], "wide": [2, 3, 4], "we": [2, 3, 4, 6, 8, 18, 21, 41, 42, 44, 45, 68, 82, 93, 104, 193, 196, 198, 199, 201, 203, 204, 205, 206], "veri": [2, 3, 198, 199, 205, 206], "influenti": 2, "latenc": 2, "especi": [2, 3, 6, 7, 56], "distribut": [2, 3, 8, 9, 23, 25, 65, 93, 99, 100, 101, 102, 111, 114, 115, 117, 118, 120, 121, 122, 125, 133, 136, 138, 139, 192, 196, 198, 199, 203, 205, 206], "larger": 2, "volum": 2, "lazymemmapstorag": [2, 192, 198, 199], "advis": [2, 205], "share": [2, 7, 35, 36, 37, 38, 44, 45, 82, 90, 91, 92, 190, 201, 203, 205, 206], "due": [2, 3, 4, 205], "lower": [2, 11, 12, 13, 14, 17, 82, 114, 115, 204], "serialis": 2, "memmaptensor": 2, "well": [2, 3, 7, 11, 12, 14, 21, 38, 41, 42, 44, 45, 114, 115, 198, 199, 203, 204, 205, 206], "abil": 2, "specifi": [2, 10, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 72, 73, 79, 93, 116, 117, 198, 203], "file": [2, 5, 6, 196, 199, 202, 203, 206], "locat": [2, 6, 42, 65, 71, 121, 122, 204], "node": [2, 171, 174, 176, 179, 181, 184], "failur": 2, "recoveri": 2, "mean": [2, 3, 6, 13, 65, 82, 93, 99, 102, 104, 117, 120, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 198, 199, 205, 206], "liststorag": [2, 23, 24, 25, 30, 163, 192], "were": [2, 6, 44, 45, 198], "found": [2, 5, 6, 9, 18, 21, 25, 41, 42, 44, 45, 82, 117, 134, 139, 198, 199, 203], "rough": 2, "benchmark": [2, 8], "http": [2, 4, 5, 6, 9, 23, 32, 55, 68, 95, 96, 97, 98, 102, 103, 108, 109, 110, 114, 115, 125, 132, 136, 137, 139, 140, 141, 142, 147, 150, 151, 154, 171, 174, 179, 181, 184, 206], "com": [2, 4, 5, 6, 9, 206], "tree": 2, "type": [2, 21, 27, 41, 42, 43, 44, 45, 58, 68, 75, 78, 81, 82, 94, 105, 108, 116, 117, 127, 171, 174, 176, 179, 181, 184, 188, 198, 199, 204, 205], "1x": 2, "lazytensorstorag": [2, 192], "83x": 2, "3": [2, 3, 5, 6, 9, 11, 12, 13, 18, 19, 20, 21, 22, 41, 42, 44, 45, 55, 58, 61, 65, 68, 75, 76, 78, 81, 89, 90, 91, 92, 93, 94, 95, 96, 101, 103, 104, 105, 112, 116, 119, 123, 125, 128, 147, 148, 149, 152, 153, 155, 156, 165, 176, 196, 198, 199, 204, 205, 206], "44x": 2, "parent": [2, 3, 27, 41, 56, 62, 65, 68, 77, 90, 139, 199, 204, 205, 206], "subclass": [2, 3, 41, 42, 44, 45, 58, 68, 73, 77, 79, 80, 81, 84, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 109, 110, 113, 114, 115, 116, 117, 118, 129, 139, 198], "basic": [2, 43, 205], "properti": [2, 41, 42, 43, 44, 45, 78, 99, 107, 111, 120, 121, 122, 203, 204], "action": [2, 3, 7, 8, 11, 12, 13, 19, 22, 27, 41, 42, 43, 44, 45, 52, 59, 62, 64, 78, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 105, 106, 112, 113, 115, 117, 120, 121, 123, 125, 126, 135, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 171, 174, 176, 179, 181, 184, 186, 190, 196, 198, 199, 201, 203, 204, 205, 206], "shape": [2, 3, 16, 17, 18, 19, 20, 22, 27, 28, 41, 42, 44, 45, 56, 76, 99, 100, 105, 107, 111, 112, 116, 119, 120, 143, 157, 166, 186, 198, 199, 201, 203, 204, 205, 206], "dtype": [2, 3, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 32, 41, 42, 43, 44, 45, 52, 53, 58, 59, 65, 68, 75, 76, 78, 81, 90, 91, 92, 93, 101, 107, 108, 112, 113, 116, 119, 123, 125, 126, 147, 148, 149, 171, 174, 176, 179, 181, 184, 198, 199, 201, 203, 204, 205, 206], "domain": [2, 7, 16, 17, 18, 19, 20, 22, 27, 28, 75, 116, 117, 118, 119, 192, 205, 206], "offer": [3, 6, 205], "handl": [3, 21, 41, 42, 44, 45, 82, 105, 166, 188, 189], "differ": [3, 11, 12, 13, 14, 21, 41, 42, 44, 45, 78, 105, 125, 126, 139, 143, 147, 148, 162, 166, 167, 188, 189, 196, 198, 199, 201, 204, 205], "backend": [3, 6, 196, 198], "dm": [3, 205], "custom": [3, 4, 21, 41, 42, 44, 45, 190], "goal": [3, 198, 199], "abl": [3, 201, 204, 206], "even": [3, 7, 12, 35, 36, 37, 38, 198, 204, 205], "simul": [3, 4, 6, 7, 53, 93, 198], "some": [3, 6, 7, 8, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 68, 95, 117, 118, 119, 157, 168, 196, 198, 199, 203, 205, 206], "box": [3, 16, 17, 18, 19, 20, 22, 27, 28], "wrapper": [3, 14, 25, 26, 31, 43, 46, 47, 48, 49, 50, 51, 52, 117, 147, 190, 198, 205], "under": [3, 21, 41, 42, 44, 45, 116, 117, 198, 205], "lib": [3, 4, 5, 6, 8, 9, 11, 12, 13, 46, 47, 48, 49, 50, 51, 52, 65, 75, 82, 171, 174, 176, 179, 181, 184, 186, 198, 199, 201, 205, 206], "hope": 3, "imit": 3, "other": [3, 6, 7, 21, 35, 36, 37, 38, 41, 42, 43, 44, 45, 82, 108, 117, 132, 133, 136, 138, 139, 140, 141, 171, 179, 181, 184, 188, 189, 196, 198, 199, 203, 205, 206], "envbas": [3, 11, 12, 13, 14, 42, 44, 45, 64, 77, 78, 82, 84, 93, 106, 162, 169, 171, 172, 173, 174, 176, 179, 181, 184, 186, 188, 189, 190, 192], "torch": [3, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 32, 35, 36, 41, 42, 43, 44, 45, 52, 56, 58, 59, 65, 68, 71, 75, 76, 78, 81, 82, 88, 89, 90, 91, 92, 93, 94, 99, 101, 102, 104, 105, 107, 108, 111, 112, 113, 116, 117, 119, 120, 121, 122, 123, 125, 126, 127, 134, 147, 148, 149, 157, 165, 171, 174, 176, 179, 181, 184, 186, 196, 198, 199, 201, 203, 204, 205, 206], "nn": [3, 11, 12, 13, 21, 41, 42, 43, 44, 45, 58, 68, 75, 78, 81, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 112, 113, 116, 117, 118, 119, 123, 125, 126, 127, 128, 132, 135, 136, 147, 148, 149, 181, 184, 186, 198, 199, 201, 203, 206], "typic": [3, 7, 21, 41, 42, 44, 45, 196], "method": [3, 11, 12, 13, 14, 21, 25, 29, 35, 36, 37, 38, 41, 42, 44, 45, 55, 58, 65, 68, 69, 75, 78, 81, 90, 91, 92, 93, 104, 116, 117, 118, 127, 132, 187, 196, 197, 198, 203, 204, 205], "organis": 3, "allow": [3, 11, 12, 13, 14, 21, 22, 41, 42, 44, 45, 88, 105, 143, 196, 198, 203, 204, 205], "gener": [3, 6, 7, 13, 30, 34, 43, 65, 72, 89, 99, 111, 112, 117, 123, 140, 147, 150, 151, 154, 166, 198, 199, 200, 201, 203, 204, 205, 206], "arbitrari": [3, 22, 44, 45, 198, 199], "input": [3, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 41, 42, 43, 44, 45, 56, 58, 59, 68, 72, 77, 79, 81, 88, 94, 95, 96, 97, 98, 104, 105, 107, 108, 114, 115, 116, 117, 118, 119, 131, 132, 133, 136, 138, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 168, 186, 196, 199, 204, 205, 206], "output": [3, 11, 12, 13, 14, 21, 23, 24, 25, 30, 41, 42, 43, 44, 45, 68, 77, 81, 90, 94, 95, 96, 100, 102, 104, 105, 116, 117, 118, 119, 125, 126, 132, 133, 136, 138, 139, 140, 141, 147, 157, 163, 198, 201, 204, 205, 206], "nest": [3, 18, 21, 41, 42, 44, 45, 147, 148, 149, 196, 199, 204, 206], "attribut": [3, 21, 41, 42, 44, 45, 68, 74, 117, 199, 203], "batch_siz": [3, 7, 11, 12, 13, 18, 23, 24, 26, 29, 30, 31, 41, 43, 52, 53, 75, 90, 91, 92, 93, 101, 112, 113, 116, 119, 123, 125, 126, 157, 163, 171, 174, 176, 179, 181, 184, 198, 199, 201, 203, 204, 205, 206], "togeth": [3, 11, 12, 13, 14, 90, 91, 92, 203], "expect": [3, 6, 18, 21, 27, 41, 42, 43, 44, 45, 54, 55, 56, 57, 58, 59, 61, 63, 65, 68, 69, 70, 71, 74, 75, 76, 77, 79, 81, 84, 116, 119, 132, 133, 138, 139, 169, 193, 196, 198, 205], "live": [3, 11, 12, 13, 14, 21, 23, 24, 25, 26, 29, 30, 31, 41, 42, 43, 44, 45, 163], "doe": [3, 23, 25, 32, 38, 107, 118, 119, 133, 138, 139, 146, 166, 196, 198, 204, 205], "actual": [3, 6, 11, 12, 14, 41, 42, 44, 45, 168, 198, 199], "respons": [3, 7, 166, 203, 205], "just": [3, 157, 196, 199, 203, 204, 205, 206], "retriev": [3, 29, 30, 31, 41, 42, 44, 45, 56, 65, 88, 93, 117, 133, 138, 139, 147, 148, 149, 171, 174, 176, 179, 181, 184, 190, 196, 204, 205], "care": [3, 7, 41, 42, 44, 45, 58, 68, 73, 77, 79, 80, 81, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 109, 110, 114, 115, 129, 198, 199], "map": [3, 7, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 35, 41, 42, 44, 45, 54, 55, 56, 57, 58, 59, 61, 63, 65, 68, 69, 70, 71, 74, 75, 76, 77, 79, 81, 82, 90, 91, 92, 116, 117, 119, 125, 163, 192, 198, 199, 203, 204], "desir": [3, 21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 87, 94, 105, 116, 117, 198, 199, 204], "see": [3, 5, 6, 7, 8, 11, 12, 13, 14, 21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 83, 94, 105, 107, 116, 117, 121, 122, 198, 199, 203, 204, 205], "below": [3, 6, 11, 12, 13, 14, 21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 94, 105, 116, 121, 122, 191, 200], "parametr": [3, 108, 117, 141, 198, 203], "hardwar": 3, "observation_spec": [3, 41, 43, 55, 56, 57, 58, 59, 61, 63, 65, 68, 69, 72, 74, 75, 76, 77, 78, 79, 81, 93, 169, 186, 198, 201, 205], "compositespec": [3, 41, 43, 74, 75, 89, 93, 112, 119, 192, 198, 205], "all": [3, 7, 11, 12, 13, 14, 21, 41, 42, 43, 44, 45, 58, 60, 65, 68, 72, 73, 75, 77, 78, 79, 80, 81, 82, 86, 87, 88, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 109, 110, 114, 115, 116, 117, 119, 129, 161, 166, 168, 188, 189, 190, 193, 196, 198, 199, 200, 201, 203, 204, 205, 206], "spec": [3, 16, 17, 18, 19, 20, 22, 27, 28, 41, 42, 43, 44, 45, 54, 55, 56, 57, 58, 59, 61, 63, 65, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 84, 89, 90, 91, 92, 101, 112, 113, 115, 116, 117, 119, 125, 126, 171, 174, 176, 179, 181, 184, 198, 199, 201, 206], "pair": [3, 21, 25, 41, 42, 44, 45, 90, 117, 198, 199, 201, 204, 205], "input_spec": [3, 41, 43, 44, 45, 58, 59, 68, 77, 78, 79, 81, 93, 205], "action_spec": [3, 41, 42, 43, 44, 45, 52, 78, 89, 91, 101, 112, 113, 115, 125, 126, 186, 198, 199, 201, 205, 206], "tensorspec": [3, 16, 17, 18, 19, 20, 22, 28, 41, 43, 54, 55, 56, 57, 58, 59, 61, 63, 65, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 89, 112, 115, 116, 117, 118, 192], "reward_spec": [3, 41, 43, 54, 58, 59, 68, 70, 71, 72, 77, 78, 79, 81, 93, 205], "reward": [3, 11, 12, 13, 21, 27, 41, 42, 43, 44, 45, 52, 54, 58, 59, 68, 70, 71, 72, 77, 78, 79, 80, 81, 82, 88, 93, 134, 135, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 162, 164, 190, 196, 198, 199, 201, 204, 205, 206], "importantli": [3, 117], "4": [3, 6, 11, 12, 13, 19, 22, 43, 46, 47, 48, 51, 55, 82, 89, 90, 91, 92, 93, 94, 95, 96, 101, 102, 103, 104, 105, 112, 113, 116, 119, 123, 125, 126, 128, 198, 199, 201, 204, 205, 206], "action_s": 3, "simpli": [3, 5, 198, 199, 205], "With": [3, 196, 204, 205], "necessarili": 3, "requir": [3, 6, 7, 13, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 41, 42, 44, 45, 58, 68, 75, 78, 81, 105, 116, 118, 119, 132, 133, 136, 138, 139, 140, 141, 196, 198, 199, 203, 205], "stateless": [3, 44, 45, 77, 205], "set_se": [3, 11, 12, 13, 14, 41, 42, 43, 44, 45, 52, 65, 78, 198, 205, 206], "integ": [3, 11, 12, 13, 14, 20, 21, 22, 23, 24, 25, 38, 41, 42, 44, 45, 62, 65, 74, 94, 105, 163], "seed": [3, 11, 12, 13, 14, 41, 42, 43, 44, 45, 46, 78, 166, 198], "next": [3, 7, 11, 12, 13, 18, 21, 23, 24, 25, 30, 41, 42, 43, 44, 45, 52, 82, 88, 115, 140, 146, 147, 148, 149, 163, 198, 199, 201, 205, 206], "determinist": [3, 21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 89, 102, 109, 115, 116, 117, 198, 199, 205], "preced": [3, 104, 203], "without": [3, 6, 8, 21, 41, 42, 44, 45, 91, 140, 146, 186, 193, 198, 199, 205], "risk": 3, "overlap": 3, "consecut": [3, 199, 205], "still": [3, 8, 74, 138, 198, 199, 201, 205], "reproduc": 3, "max_step": [3, 41, 42, 43, 44, 45, 74, 88, 198, 199, 205, 206], "maximum": [3, 11, 12, 13, 14, 17, 21, 23, 24, 25, 35, 36, 37, 41, 42, 44, 45, 70, 74, 112, 120, 121, 122, 141, 163, 198, 199, 205], "safemodul": [3, 43, 53, 90, 91, 92, 93, 106, 112, 117, 119, 127, 128, 132, 133, 134, 138, 139, 140, 141, 146, 147, 148, 149, 162, 172, 173, 186, 192, 206], "ani": [3, 4, 7, 18, 21, 23, 24, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 68, 78, 82, 84, 94, 105, 108, 116, 117, 118, 119, 139, 163, 166, 193, 198, 199, 205], "compat": [3, 6, 10, 21, 38, 41, 42, 44, 45, 50, 82, 127, 143, 199, 206], "better": [3, 7, 199], "intens": [3, 7], "gym3": 3, "envpool": 3, "interfac": [3, 105, 107, 203], "simultan": [3, 44, 45], "often": [3, 7, 137, 166, 205], "competit": 3, "advantag": [3, 7, 103, 132, 133, 138, 139, 147, 148, 149, 150, 151, 152, 154, 155, 196, 198, 199, 205], "scale": [3, 65, 71, 90, 91, 92, 102, 112, 114, 115, 117, 119, 121, 122, 164, 169, 171, 179, 181, 184, 190, 198, 199, 203, 206], "varieti": 3, "its": [3, 4, 6, 11, 12, 13, 14, 21, 25, 41, 42, 43, 44, 45, 55, 77, 78, 82, 94, 101, 117, 132, 133, 136, 138, 139, 140, 141, 166, 186, 196, 198, 199, 203, 205], "own": [3, 11, 12, 14, 21, 41, 42, 44, 45, 199, 203], "parallelenv": [3, 11, 12, 13, 14, 45, 187, 192, 198, 199, 201, 205, 206], "As": [3, 41, 42, 44, 45, 117, 198, 199, 205, 206], "inherit": [3, 106, 196, 203, 204], "enjoi": 3, "exact": 3, "Of": [3, 6, 193, 205], "cours": [3, 193, 205], "correspond": [3, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 32, 41, 42, 43, 44, 45, 75, 78, 82, 117, 199], "count": [3, 74, 162, 168, 205], "def": [3, 10, 21, 41, 42, 43, 44, 45, 93, 123, 125, 128, 196, 198, 199, 201, 203, 204, 205, 206], "make_env": [3, 82, 88, 172, 173, 198, 199, 205], "gymenv": [3, 4, 11, 12, 13, 14, 50, 58, 65, 75, 78, 82, 171, 174, 176, 179, 181, 184, 186, 192, 198, 199, 205, 206], "pendulum": [3, 11, 12, 13, 14, 48, 49, 58, 65, 75, 78, 82, 186, 199, 205, 206], "v1": [3, 11, 12, 13, 65, 75, 143, 152, 153, 155, 156, 199, 205, 206], "from_pixel": [3, 46, 47, 171, 179, 181, 184, 198, 199, 205, 206], "9": [3, 6, 21, 82, 198, 199, 204], "81": 3, "0": [3, 4, 5, 6, 7, 9, 10, 20, 21, 22, 23, 25, 32, 41, 42, 43, 44, 45, 52, 54, 56, 58, 61, 64, 65, 68, 75, 76, 78, 81, 82, 88, 93, 94, 95, 96, 98, 102, 105, 107, 108, 114, 115, 116, 119, 120, 121, 122, 129, 132, 133, 138, 139, 140, 141, 142, 146, 147, 148, 149, 157, 164, 166, 186, 190, 196, 198, 199, 201, 202, 203, 204, 205, 206], "print": [3, 5, 6, 11, 12, 13, 18, 19, 21, 22, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 56, 59, 65, 75, 76, 82, 88, 89, 90, 91, 92, 94, 101, 105, 113, 116, 119, 123, 125, 126, 128, 171, 174, 176, 179, 181, 184, 186, 196, 198, 199, 201, 203, 204, 205, 206], "b": [3, 6, 15, 18, 107, 108, 147, 148, 149, 203, 204], "c": [3, 5, 6, 18, 171, 174, 176, 179, 181, 184, 204], "d": [3, 23, 32, 117, 204, 206], "get": [3, 5, 6, 7, 38, 44, 45, 56, 59, 65, 76, 82, 89, 117, 150, 151, 154, 198, 199, 203, 205, 206], "forc": [3, 5, 6, 199], "variou": [3, 11, 12, 13, 14, 132, 133, 136, 138, 139, 140, 141, 188, 189, 198, 199, 205], "reset_work": 3, "fals": [3, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 42, 43, 44, 45, 46, 49, 52, 56, 58, 64, 65, 68, 71, 75, 76, 78, 81, 82, 90, 91, 92, 93, 94, 95, 101, 105, 112, 113, 116, 117, 118, 119, 123, 125, 126, 127, 128, 134, 135, 136, 140, 141, 143, 147, 148, 149, 152, 153, 155, 156, 159, 160, 162, 163, 164, 166, 171, 174, 176, 179, 181, 184, 190, 196, 198, 199, 201, 203, 204, 205, 206], "field": [3, 11, 12, 13, 14, 18, 21, 41, 42, 43, 44, 45, 52, 75, 78, 90, 91, 92, 93, 101, 112, 113, 116, 119, 123, 125, 126, 169, 171, 174, 176, 179, 181, 184, 193, 199, 201, 203, 204, 205, 206], "bool": [3, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 41, 42, 43, 44, 45, 46, 47, 52, 56, 64, 65, 68, 71, 75, 76, 78, 81, 82, 88, 93, 94, 95, 96, 105, 107, 108, 116, 117, 118, 119, 121, 122, 127, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 147, 148, 149, 152, 153, 155, 156, 159, 160, 162, 163, 164, 166, 171, 174, 176, 179, 181, 184, 190, 199, 201, 205, 206], "500": [3, 166, 198, 199, 205, 206], "uint8": [3, 76, 199, 205, 206], "none": [3, 7, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 41, 42, 43, 44, 45, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 81, 82, 83, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 111, 112, 113, 116, 117, 119, 123, 125, 126, 127, 146, 147, 148, 149, 152, 153, 155, 156, 161, 162, 163, 166, 169, 171, 172, 173, 174, 176, 179, 181, 184, 186, 188, 189, 190, 196, 198, 199, 203, 204, 205, 206], "is_shar": [3, 11, 12, 13, 18, 43, 52, 75, 82, 90, 91, 92, 93, 101, 112, 113, 116, 119, 123, 125, 126, 171, 174, 176, 179, 181, 184, 199, 201, 203, 204, 205, 206], "note": [3, 11, 12, 13, 14, 21, 41, 42, 44, 45, 82, 117, 198, 199, 201, 203, 204, 205], "launch": 3, "quit": [3, 198, 199, 205], "mani": [3, 133, 138, 139, 140, 199, 204, 205], "import": [3, 5, 6, 9, 11, 12, 13, 23, 25, 32, 42, 43, 44, 45, 65, 75, 82, 89, 90, 91, 92, 93, 101, 105, 112, 113, 116, 119, 123, 125, 126, 133, 147, 148, 149, 159, 162, 171, 174, 176, 179, 181, 184, 186, 198, 199, 201, 203, 204, 205, 206], "start": [3, 4, 11, 88, 161, 198, 199, 205], "bottleneck": [3, 7], "why": [3, 198, 205], "so": [3, 5, 6, 9, 21, 41, 42, 44, 45, 82, 118, 119, 198, 205], "slow": 3, "onc": [3, 6, 11, 12, 13, 14, 21, 41, 42, 44, 45, 78, 196, 198, 199, 205], "great": [3, 6, 7, 204, 206], "speedup": [3, 7, 205], "anoth": [3, 7, 41, 42, 44, 45, 77, 105, 132, 133, 136, 138, 139, 140, 141, 198, 201, 204, 205], "thing": [3, 6, 7, 199, 205], "creat": [3, 4, 5, 6, 9, 11, 12, 14, 21, 30, 41, 42, 44, 45, 68, 72, 77, 78, 82, 88, 94, 95, 96, 97, 98, 103, 105, 106, 117, 135, 136, 140, 169, 172, 173, 186, 188, 189, 198, 199, 203, 204, 205, 206], "misspecifi": 3, "caus": [3, 6, 7], "breakag": 3, "prealloc": 3, "In": [3, 4, 6, 7, 9, 10, 11, 12, 14, 21, 41, 42, 44, 45, 58, 68, 75, 77, 78, 81, 105, 115, 116, 119, 121, 122, 131, 167, 188, 189, 190, 198, 199, 201, 204, 205, 206], "obj": [3, 116, 117, 118], "check_env_spec": [3, 192], "rais": [3, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 60, 78, 84, 128, 198, 206], "assert": [3, 5, 16, 17, 18, 19, 20, 22, 27, 28, 42, 82, 84, 88, 147, 148, 149, 157, 165, 198, 199, 201, 203, 204, 205], "mismatch": [3, 204], "serialenv": [3, 192, 205], "mostli": [3, 14, 205], "purpos": [3, 6, 186, 204, 205], "want": [3, 5, 6, 7, 198, 204, 205, 206], "assess": [3, 198], "subprocess": 3, "case": [3, 4, 6, 7, 10, 11, 12, 13, 14, 18, 23, 25, 32, 41, 42, 44, 45, 78, 105, 116, 117, 119, 131, 157, 167, 188, 189, 190, 196, 198, 203, 204, 205, 206], "raw": [3, 121, 122], "must": [3, 6, 11, 12, 13, 14, 18, 21, 35, 36, 37, 38, 41, 42, 44, 45, 62, 65, 75, 78, 94, 105, 116, 117, 125, 126, 150, 151, 152, 153, 154, 155, 156, 157, 162, 166, 167, 171, 174, 176, 179, 181, 184, 198, 199, 201, 203, 204, 206], "treat": 3, "To": [3, 5, 6, 21, 30, 41, 42, 44, 45, 82, 90, 91, 92, 166, 198, 199, 203, 205, 206], "logic": 3, "torchvis": [3, 205, 206], "transformedenv": [3, 58, 64, 65, 75, 77, 82, 171, 174, 176, 179, 181, 184, 192, 198, 199, 201, 205, 206], "primit": [3, 198, 199], "compos": [3, 21, 30, 33, 34, 39, 41, 42, 44, 45, 77, 78, 82, 171, 174, 176, 179, 181, 184, 192, 199, 201, 205, 206], "built": [3, 4, 6, 182, 186, 187, 190, 205], "base_env": [3, 75, 198, 199, 205, 206], "totensorimag": [3, 176, 192, 199, 205, 206], "in_kei": [3, 11, 12, 13, 43, 54, 55, 56, 57, 59, 61, 63, 65, 66, 68, 69, 70, 71, 72, 76, 77, 81, 82, 89, 90, 91, 92, 93, 112, 116, 117, 119, 123, 127, 128, 134, 135, 147, 148, 149, 181, 184, 186, 198, 199, 201, 203, 205, 206], "resiz": [3, 192, 199, 205], "64": [3, 95, 96, 103, 198, 199, 201, 205, 206], "By": [3, 22, 42, 44, 45, 117, 162, 190, 204, 205], "now": [3, 6, 198, 201, 203, 204, 205], "appar": [3, 159], "bring": [3, 205], "signific": [3, 4, 7, 205], "kind": [3, 27, 88], "consult": 3, "achiev": [3, 21, 41, 42, 44, 45, 196, 203, 204, 205], "interest": [3, 44, 45, 117, 205], "abov": [3, 6, 21, 41, 42, 44, 45, 121, 122, 131, 196, 198, 199, 205], "resize_par": 3, "sinc": [3, 4, 6, 21, 41, 42, 44, 45, 58, 68, 73, 77, 79, 80, 81, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 109, 110, 114, 115, 129, 198, 199, 205, 206], "out_kei": [3, 11, 12, 13, 43, 44, 45, 54, 56, 61, 66, 68, 69, 70, 72, 76, 77, 81, 89, 90, 91, 92, 93, 112, 116, 117, 119, 123, 125, 126, 127, 128, 147, 148, 149, 162, 186, 198, 201, 203, 205, 206], "keyword": [3, 21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116, 117, 187, 198, 203, 205], "easi": [3, 4, 199, 204, 205], "root": [3, 121, 122, 205], "graph": [3, 7, 144, 145], "inv": 3, "appli": [3, 21, 29, 30, 31, 41, 42, 44, 45, 62, 78, 121, 147, 161, 196, 198, 199, 203, 205, 206], "revers": 3, "order": [3, 13, 21, 22, 29, 30, 31, 41, 42, 44, 45, 78, 116, 118, 119, 203], "chain": [3, 30, 58, 94, 119, 205], "taken": [3, 41, 42, 44, 45, 199], "includ": [3, 6, 8, 21, 35, 36, 37, 38, 41, 42, 43, 44, 45, 78, 82, 168, 196, 198, 199, 204, 205], "invers": [3, 130], "through": [3, 4, 7, 13, 44, 45, 105, 117, 118, 119, 129, 198, 199, 201, 203, 205], "in_keys_inv": [3, 59, 77, 198, 201, 205], "append_transform": [3, 29, 30, 31, 68, 75, 198, 205, 206], "doubletofloat": [3, 171, 174, 179, 181, 184, 192, 198, 201], "float32": [3, 11, 12, 13, 18, 23, 27, 32, 43, 52, 59, 65, 75, 76, 90, 91, 92, 93, 101, 112, 113, 116, 119, 123, 125, 126, 171, 174, 176, 179, 181, 184, 199, 201, 203, 204, 205, 206], "float64": [3, 21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116, 201, 205], "tool": [4, 205], "context": [4, 7, 21, 41, 42, 44, 45, 107, 144, 145, 147, 150, 151, 154, 162, 198, 199, 203], "real": [4, 117], "world": [4, 43, 205], "system": 4, "robot": [4, 6, 68, 81], "game": 4, "adopt": [4, 198, 205], "interact": [4, 6, 7, 13, 117, 205], "histor": 4, "wa": [4, 6, 41, 42, 44, 45, 78, 137, 142, 198, 199, 201, 206], "ceas": 4, "maintain": [4, 8], "fork": 4, "gymnasium": 4, "farama": 4, "foundat": 4, "check": [4, 5, 6, 10, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 43, 44, 45, 56, 60, 84, 116, 117, 127, 198, 199, 201, 205], "document": [4, 6, 21, 41, 42, 44, 45, 78, 206], "further": 4, "detail": [4, 5, 6, 21, 41, 42, 44, 45, 78, 125, 132, 136, 139, 174, 193, 201, 203, 204], "usag": [4, 6, 141], "known": [4, 6, 7, 198], "gone": 4, "bc": [4, 206], "break": [4, 11, 12, 13, 21, 41, 42, 44, 45, 82, 198, 199, 203, 206], "chang": [4, 6, 21, 35, 36, 37, 38, 41, 42, 44, 45, 78, 82, 198, 204, 205], "face": [4, 7, 8, 199, 205], "modif": [4, 18, 21, 41, 42, 44, 45, 198, 204], "practic": [4, 7, 121, 122, 131, 193, 199, 205], "torchrl": [4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 200, 201, 202, 203, 204], "against": [4, 6, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 84, 116, 117], "13": [4, 9, 10, 203], "between": [4, 11, 12, 13, 14, 21, 41, 42, 44, 45, 64, 70, 76, 78, 84, 94, 105, 117, 138, 143, 147, 162, 166, 198, 199, 203, 204, 205], "howev": [4, 6, 21, 41, 42, 44, 45, 72, 74, 78, 198, 199, 204, 205], "around": [4, 6, 14, 25, 26, 31, 43, 117, 147, 205], "construct": [4, 21, 41, 42, 44, 45, 115, 117, 166, 171, 179, 203, 205], "automat": [4, 41, 42, 44, 45, 65, 89, 112, 199, 206], "wrap": [4, 11, 12, 13, 14, 21, 41, 42, 44, 45, 84, 90, 91, 92, 198, 199, 203, 205], "best": [4, 8, 199, 206], "gymwrapp": [4, 42, 192, 206], "If": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 41, 42, 43, 44, 45, 56, 57, 64, 68, 72, 74, 77, 78, 81, 82, 94, 104, 105, 116, 117, 118, 119, 128, 129, 131, 146, 147, 148, 149, 155, 156, 161, 163, 166, 167, 169, 171, 179, 181, 184, 186, 190, 193, 198, 199, 201, 203, 204, 205, 206], "you": [4, 5, 6, 7, 9, 21, 41, 42, 44, 45, 82, 193, 198, 199, 201, 204, 205, 206], "feel": [4, 193, 206], "free": [4, 6, 132, 139, 196, 206], "gladli": 4, "instruct": [5, 9], "prepar": 5, "conda": [5, 6, 193], "assum": [5, 18, 22, 31, 42, 44, 45, 68, 72, 75, 81, 104, 152, 153, 155, 156, 198, 199, 201], "let": [5, 6, 21, 41, 42, 44, 45, 162, 198, 199, 201, 203, 204, 205, 206], "n": [5, 6, 16, 19, 21, 22, 41, 42, 44, 45, 55, 117, 132, 146, 196, 198, 199, 204, 205], "7": [5, 9, 19, 22, 93, 94, 104, 105, 198, 199, 206], "cmake": 5, "14": [5, 10, 65, 199, 202], "activ": [5, 6, 8, 94, 102, 105, 139, 206], "sim": 5, "bullet": 5, "physic": [5, 6, 196, 198], "headless": [5, 6], "mode": [5, 13, 21, 41, 42, 44, 45, 78, 82, 85, 87, 99, 111, 117, 120, 121, 122, 162, 198, 199, 205, 206], "cluster": [5, 6, 7, 193], "withbullet": 5, "forg": [5, 6], "aihabitat": 5, "nightli": 5, "y": [5, 6, 104, 128], "git": [5, 6, 9], "facebookresearch": 5, "subdirectori": 5, "reduc": [5, 19], "verbos": 5, "export": 5, "magnum_log": 5, "quiet": 5, "habitat_sim_log": 5, "remov": [5, 21, 41, 42, 44, 45, 73, 198, 205], "command": [5, 6, 9, 205], "more": [5, 7, 11, 12, 13, 14, 21, 23, 24, 25, 26, 29, 30, 31, 41, 42, 44, 45, 83, 105, 107, 116, 125, 132, 136, 139, 147, 150, 151, 154, 161, 163, 174, 193, 196, 198, 199, 201, 203, 204, 205, 206], "readm": [5, 6], "md": [5, 6], "habitatenv": [5, 192], "_has_habitat": 5, "_env": [5, 205], "available_env": [5, 46, 47, 48, 49, 51, 52, 205], "startswith": 5, "importerror": [5, 6, 9], "usr": [5, 6, 9], "x86_64": [5, 6], "linux": [5, 6], "gnu": [5, 6], "libopengl": [5, 6], "undefin": [5, 6, 9, 21, 41, 42, 44, 45, 78], "symbol": [5, 6, 9], "_glapi_tls_curr": [5, 6], "solut": [5, 6, 7, 8, 193, 196, 206], "link": [5, 6], "right": [5, 6, 104, 198, 199, 205], "replac": [5, 6, 21, 199], "path": [5, 6, 21, 35, 41, 42, 44, 45, 68, 81, 166, 196], "mujoco_env": [5, 6], "proper": [5, 6], "name": [5, 6, 10, 21, 41, 42, 44, 45, 46, 72, 78, 132, 133, 136, 138, 139, 140, 141, 160, 161, 171, 174, 176, 179, 181, 184, 196, 198, 199, 203, 205], "libglvnd": [5, 6], "glx": [5, 6], "cos7": [5, 6], "reinstal": [5, 6], "xvfbwrapper": [5, 6], "config": [5, 6, 169, 171, 172, 173, 174, 176, 179, 181, 182, 184, 187], "var": [5, 6, 21, 41, 42, 44, 45, 78], "ld_preload": [5, 6], "sysroot": [5, 6], "lib64": [5, 6], "libgldispatch": [5, 6], "offici": 6, "repositori": 6, "stand": [6, 90, 91, 92, 201, 205], "joint": [6, 199], "dynam": 6, "contact": 6, "engin": 6, "facilit": [6, 25, 67, 68, 81, 90, 91, 92, 198], "develop": [6, 206], "biomechan": 6, "graphic": 6, "anim": 6, "machin": [6, 21], "area": 6, "demand": [6, 205], "fast": [6, 8, 140, 198, 199], "accur": [6, 198], "articul": 6, "recent": [6, 199, 203, 205, 206], "acquir": [6, 198], "access": [6, 7, 21, 41, 42, 44, 45, 68, 190, 193, 204], "whomev": 6, "licenc": 6, "incorpor": [6, 198], "make": [6, 21, 38, 41, 42, 44, 45, 49, 52, 65, 68, 84, 88, 107, 117, 139, 173, 190, 198, 199, 201, 203, 204, 205, 206], "relianc": 6, "obsolet": 6, "seri": [6, 7, 22, 39, 40, 45, 64, 77, 205], "keep": [6, 12, 68, 81, 82, 159, 166, 199, 204, 205, 206], "legaci": 6, "capabl": [6, 196, 198, 201, 205], "glfw": 6, "osmesa": 6, "egl": 6, "hand": [6, 198], "gpu": [6, 7, 21, 41, 42, 44, 45, 205], "our": [6, 7, 198, 199, 201, 203, 204, 206], "advic": [6, 205], "sudo": [6, 193], "enabl": [6, 7, 162], "apt": 6, "libglfw3": 6, "libglew2": 6, "libgl1": 6, "mesa": 6, "libosmesa6": 6, "via": [6, 7, 44, 77, 81, 134, 196, 198, 205], "awar": [6, 35, 36, 37, 38], "fact": [6, 7, 199, 205], "indent": 6, "workflow": [6, 90, 91, 92], "glew": 6, "mesalib": 6, "anaconda": 6, "libgl": 6, "cos6": 6, "menpo": 6, "glfw3": 6, "both": [6, 21, 41, 42, 44, 45, 78, 90, 91, 92, 94, 105, 162, 198, 203, 205], "tell": 6, "variabl": [6, 7, 19, 22, 90, 91, 92, 140, 196, 203], "mujoco_gl": 6, "pyopengl_platform": 6, "deactiv": 6, "pre": [6, 21, 36, 41, 42, 44, 45, 68, 81, 205], "binari": [6, 16, 22, 54, 125, 126], "releas": [6, 9, 21, 41, 42, 44, 45, 78, 206], "need": [6, 7, 9, 21, 38, 41, 42, 44, 45, 58, 68, 73, 77, 78, 79, 80, 81, 82, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 107, 109, 110, 114, 115, 116, 129, 131, 140, 146, 166, 190, 198, 203, 204, 205, 206], "These": [6, 205], "instead": [6, 7, 19, 21, 41, 42, 44, 45, 58, 68, 73, 77, 79, 80, 81, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 109, 110, 114, 115, 129, 190, 198, 199, 203, 205], "refer": [6, 21, 41, 42, 44, 45, 78, 82, 93, 102, 109, 110, 114, 115, 125, 132, 136, 139, 147, 150, 151, 154, 174, 199, 203, 206], "setup": 6, "mkdir": 6, "cd": 6, "here": [6, 7, 8, 9, 198, 199, 201, 203, 204, 205, 206], "tag": [6, 190], "earlier": [6, 11, 12, 13, 14, 198], "roboti": 6, "u": [6, 9, 198, 203, 205, 206], "download": [6, 9, 68, 81, 198, 199, 200, 201, 203, 204, 205, 206], "html": 6, "wget": 6, "mujoco210": 6, "tar": 6, "gz": 6, "xf": 6, "charg": 6, "obtain": [6, 42, 93, 198, 199], "mjkei": 6, "txt": 6, "mjlib_path": 6, "home": 6, "bin": 6, "libmujoco210": 6, "ld_library_path": 6, "mujoco_py_mujoco_path": 6, "too": [6, 121, 122, 132, 133, 136, 138, 139, 140, 141, 147, 148, 149, 198, 199, 205], "mujoco_py_mjkey_path": 6, "reload": 6, "recommend": [6, 204], "hard": [6, 137, 199, 205], "later": [6, 98, 117, 198, 199], "try": [6, 7, 128, 199, 204, 205, 206], "nativ": [6, 8, 41, 42, 44, 45, 55, 203], "local": [6, 9, 13, 21, 29, 41, 42, 44, 45, 78], "modifi": [6, 7, 21, 41, 42, 44, 45, 58, 68, 75, 77, 78, 81, 116, 168, 171, 179, 181, 184, 198, 203], "nvidia": 6, "driver": 6, "older": 6, "hack": 6, "line": [6, 21, 41, 42, 44, 45, 199, 203, 206], "adatp": 6, "script": [6, 171, 174, 176, 179, 181, 184, 186, 190, 196, 198, 199, 201, 203, 204, 205, 206], "go": [6, 203, 205], "unnot": 6, "until": 6, "complet": [6, 8, 42, 193, 199, 201], "mujoco_pi": 6, "trigger": 6, "pipelin": 6, "give": [6, 43, 193, 198, 199, 206], "troubleshoot": 6, "gl": 6, "h": [6, 57, 69, 76], "eglshim": 6, "10": [6, 18, 43, 76, 93, 104, 140, 141, 147, 148, 149, 157, 196, 198, 199, 203, 204, 205, 206], "fatal": 6, "No": [6, 203], "directori": [6, 35, 196], "sure": [6, 38, 88, 190, 198, 203, 204, 205, 206], "glu": 6, "38": 6, "disappear": [6, 201], "filenotfounderror": 6, "errno": 6, "patchelf": 6, "fatalerror": 6, "gladloadgl": 6, "mj_env": 6, "python3": [6, 9], "8": [6, 90, 91, 92, 94, 95, 96, 103, 105, 112, 116, 119, 203, 205, 206], "site": 6, "__init__": [6, 43, 93, 123, 125, 128, 196, 203, 205], "912": 6, "glfwerror": 6, "65537": 6, "sovl": 6, "myscript": 6, "saniti": [6, 84], "cymj": 6, "linuxgpuextensionbuild": 6, "filenam": 6, "runtimeerror": [6, 7, 21, 41, 42, 44, 45, 78, 198, 204, 205], "job": [6, 204], "schedul": [6, 162], "slurm": 6, "mjrendercontext": 6, "pyx": 6, "46": 6, "114": 6, "_setup_opengl_context": 6, "opengl_context": 6, "130": 6, "offscreenopenglcontext": 6, "fail": 6, "opengl": 6, "global": [6, 117, 196, 198, 203], "cuda_visible_devic": 6, "id": [6, 15, 140, 181], "slurm_step_gpu": 6, "enviro": [6, 9], "imag": [6, 46, 57, 68, 76, 81, 105, 199, 204, 205], "black": 6, "read": [6, 11, 12, 13, 14, 35, 36, 37, 38, 42, 44, 45, 77, 90, 91, 92, 111, 116, 117, 119, 132, 133, 136, 138, 139, 140, 141, 147, 148, 149, 166, 171, 179, 181, 184, 198, 199, 201, 203, 205], "miss": [6, 10, 18, 21, 41, 42, 44, 45, 78, 118, 119, 193, 206], "onscreen": 6, "101": 6, "displai": [6, 166, 196, 199], "correctli": [6, 21, 41, 42, 44, 45], "scratch": [7, 198, 199], "loop": [7, 11, 12, 13, 14, 42, 88, 166, 196, 198, 201, 204], "sketch": [7, 196], "ob": [7, 18, 59, 65, 76, 123, 147, 148, 149, 198, 201, 205, 206], "_": [7, 56, 59, 65, 76, 82, 116, 131, 147, 148, 149, 198, 199, 203, 206], "rang": [7, 10, 19, 82, 88, 138, 196, 198, 199, 203, 204, 206], "n_training_step": 7, "datapoint": 7, "onlin": [7, 11, 14, 132, 139, 157, 190], "n_data_per_train": 7, "no_grad": [7, 21, 41, 42, 44, 45, 198, 199], "append": [7, 29, 30, 31, 88, 198, 199, 204, 206], "replay_buff": [7, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 186, 198, 199], "extend": [7, 23, 24, 25, 26, 29, 30, 31, 39, 40, 163, 196, 198, 199, 206], "loss": [7, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 161, 166, 170, 175, 177, 178, 180, 181, 183, 186, 196, 198, 199, 204, 206], "offlin": [7, 11, 12, 13, 14, 196, 206], "loss_fn": [7, 206], "backward": [7, 21, 41, 42, 44, 45, 82, 198, 199, 204], "zero_grad": [7, 21, 41, 42, 44, 45, 196, 198, 199, 204], "backpropag": [7, 132, 133, 136, 138, 139, 140, 141], "decor": [7, 10], "differenti": [7, 147, 148, 149, 198], "pai": [7, 199], "attent": [7, 199, 203], "understand": [7, 198, 199], "what": [7, 27, 41, 42, 44, 45, 75, 193, 199, 203, 205, 206], "denomin": 7, "log": [7, 99, 111, 117, 122, 132, 133, 136, 138, 139, 140, 141, 159, 160, 162, 166, 186, 196, 199, 203, 206], "probabl": [7, 99, 111, 117, 122, 199, 203, 206], "ppo": [7, 117, 133, 138, 139, 171, 178, 179, 192], "artifact": 7, "numer": [7, 82, 116, 117, 121, 122, 204, 205], "misconcept": 7, "directli": [7, 43, 190, 199], "save": [7, 21, 41, 42, 44, 45, 166, 196, 199], "alreadi": [7, 21, 41, 42, 44, 45, 117, 198, 199], "freed": 7, "appear": [7, 22], "compuat": 7, "twice": [7, 141], "fix": [7, 75, 141, 205], "retain_graph": 7, "lead": [7, 9, 10, 18, 121, 122, 206], "discuss": [7, 8], "inplac": [7, 21, 41, 42, 44, 45, 198], "flag": [7, 150, 151, 152, 153, 154, 155, 156], "reason": [7, 21, 41, 42, 44, 45, 68, 198, 199], "updat": [7, 11, 12, 13, 14, 21, 23, 25, 32, 41, 42, 43, 44, 45, 78, 80, 82, 93, 116, 117, 132, 137, 139, 142, 147, 148, 149, 162, 166, 167, 172, 173, 185, 186, 196, 198, 199, 203, 205, 206], "critic": [7, 90, 132, 133, 138, 139, 141, 203], "accumul": 7, "onto": [7, 22, 116, 117], "separ": [7, 11, 12, 14, 15, 134, 140, 141, 198, 205], "exclud": [7, 44, 45, 198], "forward": [7, 21, 41, 42, 44, 45, 58, 68, 73, 77, 79, 80, 81, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 109, 110, 114, 115, 116, 117, 123, 125, 127, 128, 129, 132, 133, 134, 135, 136, 138, 139, 140, 141, 147, 148, 149, 198, 199, 203, 206], "submodul": [7, 21, 41, 42, 44, 45], "match": [7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 54, 55, 56, 57, 58, 59, 61, 63, 65, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 94, 99, 105, 116, 117, 120, 138, 140, 141, 167, 199, 201, 203, 204, 205, 206], "param": [7, 21, 41, 42, 43, 44, 45, 99, 112, 113, 116, 119, 120, 123, 125, 126, 142, 145, 147, 148, 149, 174, 198, 199, 203, 206], "grad": [7, 21, 41, 42, 44, 45, 199], "whose": [7, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116, 198], "norm": [7, 166, 199], "strictli": [7, 21, 41, 42, 44, 45, 78], "neg": [7, 11, 12, 13, 14, 23, 25, 32, 198], "ask": [7, 205], "core": [7, 171, 174, 176, 179, 181, 184, 196, 206], "much": [7, 23, 25, 32, 138, 139, 204, 205], "upon": 7, "factor": [7, 21, 108, 121, 122, 132, 133, 134, 135, 136, 138, 139, 140, 198, 199, 205], "fit": [7, 10, 65, 196], "everi": [7, 11, 12, 14, 18, 21, 22, 38, 41, 42, 44, 45, 58, 68, 73, 77, 79, 80, 81, 82, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 109, 110, 114, 115, 129, 166, 196, 198, 199, 204], "bottlneck": 7, "affect": [7, 21, 41, 42, 44, 45, 77, 78], "vector": [7, 16, 22, 44, 45, 95, 97, 105, 149, 155, 156, 192, 198, 199, 201, 203, 205], "brax": [7, 205], "jax": 7, "improperli": 7, "item": [7, 11, 25, 60, 134, 135, 157, 196, 198, 199, 204], "underli": 7, "manipul": [7, 68, 205], "tedeiou": 7, "priorit": [7, 23, 25, 32, 134, 135, 140, 141, 198, 199], "amount": [7, 44, 45], "isn": [7, 116], "contigu": [7, 204, 206], "costli": 7, "concaten": [7, 20, 55, 56, 65, 77, 105, 119, 198, 199, 204, 205], "constitut": 7, "plain": 7, "profil": 7, "indic": [7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 39, 40, 41, 42, 44, 45, 56, 74, 75, 94, 105, 129, 163, 169, 190, 193, 196, 198, 199, 203, 204, 205], "fulli": [7, 21, 41, 42, 44, 45, 199], "frequent": 7, "techniqu": [7, 199], "target": [7, 21, 41, 42, 44, 45, 77, 116, 117, 134, 135, 136, 137, 138, 140, 141, 142, 146, 147, 148, 149, 168, 185, 186, 196, 198, 199], "program": [7, 205], "functorch": [7, 9, 116, 119, 127, 199, 206], "spin": [8, 205], "hug": 8, "syllabu": 8, "lectur": 8, "awesom": [8, 204], "curat": 8, "reddit": 8, "reagent": 8, "product": [8, 188, 189], "orient": [8, 205], "stabl": [8, 9, 198], "baselines3": 8, "tf": 8, "agent": [8, 29, 108], "bandit": 8, "tensorflow": 8, "kera": 8, "acm": 8, "framework": [8, 43, 205, 206], "dopamin": 8, "prototyp": [8, 192], "salina": 8, "flexibl": [8, 196, 203, 205], "simpl": [8, 21, 22, 41, 42, 44, 45, 95, 117, 147, 198, 199, 204, 205], "sequenti": [8, 21, 41, 42, 44, 45, 118, 119, 203, 204, 205], "tianshou": 8, "eleg": 8, "rlpyt": 8, "rllib": 8, "industri": [8, 206], "grade": 8, "factori": 8, "throughput": 8, "cherri": 8, "jaxrl": 8, "space": [8, 22, 27, 110, 116, 117, 119, 125, 126, 198, 205], "mbrl": [8, 43], "rlmeta": 8, "light": 8, "elegantrl": 8, "cloud": 8, "mtrl": 8, "baselin": [8, 199], "relat": [9, 198], "689": 9, "dist": 9, "_torchrl": 9, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 9, "colab": 9, "notebook": [9, 198, 199, 200, 201, 203, 204, 205, 206], "24": 9, "11": [9, 19, 22, 76, 93], "2022": [9, 206], "12": [9, 198, 204], "pip": [9, 205, 206], "solv": [9, 193, 198, 199], "pip3": 9, "extra": [9, 21, 41, 42, 44, 45, 82], "url": 9, "org": [9, 23, 32, 55, 68, 95, 96, 97, 98, 102, 103, 108, 109, 110, 114, 115, 125, 132, 136, 137, 139, 141, 142, 147, 150, 151, 154, 171, 174, 179, 184], "whl": 9, "latest": [9, 206], "There": [9, 196, 199, 205], "upgrad": 9, "previou": [9, 21, 115, 198, 203, 205], "relas": 9, "lib_version_her": 9, "module_nam": 10, "str": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 31, 35, 41, 42, 44, 45, 46, 53, 54, 55, 56, 57, 58, 59, 61, 63, 65, 66, 68, 69, 70, 71, 72, 76, 77, 78, 81, 82, 85, 87, 89, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 107, 108, 112, 116, 117, 123, 125, 126, 127, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 146, 147, 148, 149, 160, 161, 162, 165, 169, 171, 174, 179, 181, 182, 184, 190, 198], "from_vers": 10, "to_vers": 10, "explicit": [10, 104, 198, 199], "intersect": 10, "longer": [10, 199], "fun": [10, 203, 204], "self": [10, 21, 25, 41, 42, 43, 44, 45, 58, 68, 75, 78, 81, 93, 116, 123, 125, 128, 196, 203, 204, 206], "x": [10, 15, 18, 21, 76, 94, 100, 103, 104, 105, 125, 128, 129, 131, 150, 151, 152, 153, 154, 155, 156, 166, 199, 203, 206], "doesn": 10, "create_env_fn": [11, 12, 13, 14, 44, 45, 198, 206], "sequenc": [11, 12, 13, 14, 18, 20, 23, 24, 26, 30, 39, 40, 54, 55, 56, 57, 59, 61, 63, 65, 66, 69, 70, 71, 72, 76, 77, 82, 89, 94, 99, 105, 111, 112, 117, 118, 119, 123, 161, 163, 165, 166, 171, 179, 181, 184, 199, 201, 203, 205], "callabl": [11, 12, 13, 14, 21, 23, 24, 25, 26, 30, 41, 42, 43, 44, 45, 131, 163, 172, 173, 188, 189, 190], "union": [11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 31, 32, 41, 42, 44, 45, 53, 58, 65, 68, 71, 78, 81, 82, 94, 95, 96, 97, 98, 99, 103, 104, 105, 107, 108, 111, 112, 116, 117, 118, 120, 121, 122, 127, 128, 130, 135, 136, 137, 140, 141, 142, 147, 148, 149, 171, 172, 173, 174, 179, 181, 182, 184, 186, 187, 188, 189, 190], "tensordictbas": [11, 12, 13, 14, 15, 18, 21, 25, 29, 31, 41, 42, 44, 45, 55, 58, 64, 72, 73, 74, 75, 77, 79, 80, 82, 83, 88, 93, 106, 116, 117, 132, 133, 134, 135, 136, 138, 139, 140, 141, 146, 147, 148, 149, 166], "total_fram": [11, 12, 13, 14, 166, 168, 186, 196, 198, 199, 206], "int": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 53, 55, 56, 57, 58, 61, 62, 64, 65, 68, 69, 73, 74, 78, 79, 81, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 120, 121, 125, 126, 132, 133, 134, 138, 139, 140, 141, 157, 158, 159, 162, 163, 166, 167, 171, 174, 179, 181, 182, 184, 188, 189, 190], "create_env_kwarg": [11, 12, 13, 14, 44, 45, 198], "dict": [11, 12, 13, 14, 18, 19, 21, 30, 41, 42, 44, 45, 78, 82, 94, 95, 96, 97, 98, 103, 104, 105, 117, 162, 172, 173, 174, 181, 184, 188, 189, 190, 205], "200": [11, 12, 13, 14, 21, 41, 42, 44, 45, 95, 96, 102, 114, 115, 198], "postproc": [11, 12, 13, 14, 198, 199], "pin_memori": [11, 13, 14, 23, 24, 25, 26, 30, 44, 45, 67, 163, 198, 206], "init_with_lag": [11, 12, 13, 14], "given": [11, 12, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 43, 44, 45, 58, 65, 68, 75, 78, 81, 88, 93, 102, 116, 117, 118, 119, 125, 126, 131, 134, 135, 146, 147, 148, 149, 158, 162, 186, 196, 198, 199, 203, 205], "datacollector": [11, 12, 13, 14, 117], "synchron": [11, 188, 189], "recept": 11, "safe": [11, 12, 16, 17, 18, 19, 20, 22, 27, 28, 116, 117, 127, 198, 206], "env_mak": [11, 12, 13, 186, 205], "linear": [11, 12, 13, 21, 41, 42, 43, 44, 45, 58, 68, 75, 78, 81, 89, 90, 91, 92, 93, 94, 105, 107, 108, 112, 113, 114, 115, 116, 119, 123, 125, 126, 128, 147, 148, 149, 186, 201, 203, 206], "2000": [11, 12, 13, 198], "50": [11, 12, 13], "enumer": [11, 12, 13, 21, 41, 42, 44, 45, 198, 199, 206], "step_count": [11, 12, 13, 74, 198, 199], "traj_id": [11, 12, 13, 15, 198], "shutdown": [11, 12, 13, 14, 198, 206], "del": [11, 12, 13, 198, 206], "bound": [11, 12, 13, 14, 17, 18, 21, 41, 42, 44, 45, 82, 114, 115, 116, 117, 205], "total": [11, 12, 13, 14, 42, 133, 138, 139, 157, 159, 162, 166, 168, 169, 198, 199, 201, 202, 203, 204, 205, 206], "greater": [11, 12, 14, 198, 199, 206], "close": [11, 12, 13, 14, 42, 133, 138, 139, 198, 206], "signal": [11, 12, 14, 198], "sent": [11, 12, 14, 35, 36, 44, 45, 82, 199, 204], "server": [11, 12, 14], "per": [11, 12, 13, 14, 44, 102, 166, 188, 189, 198, 199, 206], "span": [11, 12, 13, 14], "unless": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 203], "traje": [11, 12], "tori": [11, 12], "n_steps_max": [11, 12, 13, 14, 21, 198], "track": [11, 12, 13, 14, 72, 82, 159, 198, 199, 204], "independ": [11, 12, 13, 14, 77, 141, 196, 198, 206], "ignor": [11, 12, 13, 14, 21, 41, 42, 44, 45, 58, 68, 73, 77, 79, 80, 81, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 109, 110, 114, 115, 129, 203, 204, 205], "length": [11, 12, 13, 14, 16, 44, 45, 93, 94, 95, 97, 100, 105, 116, 157, 198, 199, 204, 205], "mainli": [11, 12, 13, 14], "postprocessor": [11, 12, 14], "format": [11, 12, 13, 14, 21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116, 205], "accord": [11, 12, 13, 14, 23, 25, 65, 71, 107, 114, 121, 122, 203, 204], "split_trajectori": [11, 12, 13, 14, 192], "inform": [11, 12, 13, 14, 21, 41, 42, 44, 45, 94, 105, 196, 199], "place": [11, 12, 13, 14, 18, 21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 82, 116, 167, 168, 199, 203], "accommod": [11, 12, 13, 14], "kept": [11, 12, 13, 14, 44, 45, 77, 88, 121, 122], "origin": [11, 12, 13, 14, 68, 78, 81, 116, 117, 137, 139, 181, 184, 201, 204, 205], "long": [11, 12, 13, 14, 19, 22, 199, 204], "truncat": [11, 12, 13, 14, 122, 205], "help": [11, 12, 13, 14, 21, 41, 42, 44, 45, 193, 198], "desynchron": [11, 12, 13, 14], "load_state_dict": [11, 12, 13, 14, 21, 41, 42, 44, 45, 78, 82, 196], "state_dict": [11, 12, 13, 14, 21, 41, 42, 44, 45, 78, 82, 190, 196, 205], "ordereddict": [11, 12, 13, 14, 21, 41, 42, 44, 45, 78, 82], "load": [11, 12, 13, 14, 23, 24, 25, 30, 47, 163, 190, 196, 199], "form": [11, 12, 14, 21, 23, 24, 25, 30, 41, 42, 44, 45, 82, 131, 133, 138, 139, 163, 166], "worker0": [11, 12, 14], "state_dict0": [11, 12, 14], "worker1": [11, 12, 14], "state_dict1": [11, 12, 14], "reset_idx": [11, 12, 14], "static_se": [11, 12, 13, 14, 41, 42, 44, 45, 78], "increment": [11, 12, 13, 14, 41, 42, 44, 45, 74, 138], "last": [11, 12, 13, 14, 21, 61, 94, 104, 105, 109, 199, 203, 205, 206], "env_fn": [11, 12, 13, 14, 188, 189], "v0": [11, 12, 14, 42, 48, 49, 51, 52, 58, 78, 82, 186], "env_fn_parallel": [11, 12, 13, 14], "6": [11, 12, 13, 14, 52, 65, 94, 99, 104, 105, 120, 123, 171, 174, 176, 179, 181, 184, 198, 199, 203, 204, 205, 206], "out_se": [11, 12, 13, 14, 205], "shut": [11, 12, 13, 14], "down": [11, 12, 13, 14], "irrevers": [11, 12, 14], "arg": [12, 18, 21, 29, 35, 36, 41, 42, 43, 44, 45, 50, 68, 73, 78, 79, 80, 81, 89, 90, 94, 101, 105, 113, 159, 166, 190], "kwarg": [12, 13, 14, 18, 21, 29, 35, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 68, 73, 75, 78, 79, 80, 81, 89, 90, 94, 95, 96, 97, 98, 101, 103, 105, 106, 111, 112, 113, 117, 120, 122, 133, 138, 146, 159, 166, 171, 172, 173, 174, 179, 181, 184, 187, 188, 189, 206], "envcreat": [13, 186, 187, 190, 198, 199, 205, 206], "return_same_td": 13, "stop": [13, 41, 42, 44, 45, 205, 206], "equat": [13, 131, 133, 142], "exce": 13, "batcher": 13, "cautious": [13, 139], "ad": [13, 21, 23, 24, 25, 26, 29, 30, 31, 32, 41, 42, 44, 45, 72, 78, 107, 108, 133, 138, 139, 163, 198, 205], "whole": [13, 21, 41, 42, 44, 45, 78, 157, 199], "content": [13, 94, 105, 199, 204, 206], "ident": [13, 44, 45, 188, 189, 198, 203, 204], "yield": [13, 21, 41, 42, 44, 45], "chunk": 13, "policy_state_dict": 13, "env_state_dict": 13, "singl": [14, 21, 23, 24, 25, 26, 29, 30, 31, 41, 42, 44, 45, 55, 56, 76, 94, 104, 105, 119, 136, 140, 152, 153, 155, 156, 163, 181, 190, 198, 199, 201, 203, 206], "paradigm": 14, "prefer": 14, "mere": 14, "rollout_tensordict": 15, "zero": [15, 16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 56, 65, 93, 104, 129, 147, 148, 149, 203, 204, 206], "max": [15, 22, 120, 121, 122, 133, 140, 141, 198], "durat": [15, 199], "int64": [16, 19, 20, 22, 101, 113, 125, 126, 176, 199, 205], "discret": [16, 19, 20, 22, 111, 125, 126, 136], "assert_is_in": [16, 17, 18, 19, 20, 22, 27, 28], "belong": [16, 17, 18, 19, 20, 22, 27, 28], "otherwis": [16, 17, 18, 19, 20, 21, 22, 27, 28, 41, 42, 44, 45, 65, 75, 78, 82, 121, 122, 141, 162, 196, 198, 205], "encod": [16, 17, 18, 19, 20, 22, 27, 28, 101, 110, 111, 113, 114, 125, 126, 131, 203], "val": [16, 17, 18, 19, 20, 22, 27, 28, 206], "ndarrai": [16, 17, 18, 19, 20, 22, 23, 27, 28, 42], "np": [16, 17, 18, 19, 20, 22, 27, 28, 42, 198], "slice": [16, 17, 18, 19, 20, 22, 27, 28, 204], "tensor_to_index": [16, 17, 18, 19, 20, 22, 27, 28], "is_in": [16, 17, 18, 19, 20, 22, 27, 28, 205], "project": [16, 17, 18, 19, 20, 22, 27, 28, 116, 117, 199, 205, 206], "back": [16, 17, 18, 19, 20, 22, 27, 28, 116, 117, 198], "rand": [16, 17, 18, 19, 20, 22, 27, 28, 43, 52, 93, 205, 206], "uniform": [16, 17, 18, 19, 20, 22, 23, 25, 27, 28, 32], "unbound": [16, 17, 18, 19, 20, 22, 27, 28, 204], "to_numpi": [16, 17, 18, 19, 20, 22, 27, 28], "transformed_in": [16, 17, 18, 19, 20, 22, 27, 28, 77, 78, 120, 190], "type_check": [16, 17, 18, 19, 20, 22, 27, 28], "fill": [16, 17, 18, 19, 20, 22, 27, 28, 75, 204], "minimum": [17, 70, 102, 112, 120, 121, 122, 129, 131, 141, 157, 198, 205], "float": [17, 19, 21, 22, 23, 24, 25, 26, 28, 32, 41, 42, 44, 45, 58, 59, 65, 68, 70, 71, 75, 76, 78, 81, 82, 99, 102, 107, 108, 114, 115, 116, 120, 122, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 163, 164, 198, 199, 205], "upper": 17, "composit": 18, "unnam": 18, "tupl": [18, 21, 23, 30, 41, 42, 44, 45, 53, 65, 95, 104, 105, 134, 147, 148, 149, 175, 177, 180, 183, 204], "effect": [18, 21, 41, 42, 44, 45, 72, 78, 166, 199, 205], "cannot": [18, 204], "pixels_spec": 18, "boundedtensorspec": [18, 90, 91, 92, 112, 192, 205, 206], "32": [18, 94, 95, 96, 103, 105, 109, 110, 198, 199, 202, 205, 206], "observation_vector_spec": 18, "33": [18, 21, 41, 42, 44, 45, 94, 105, 202, 205], "composite_spec": 18, "observation_vector": [18, 56, 171, 174, 179, 181, 184, 198], "within": [18, 21, 31, 41, 42, 44, 45, 58, 68, 73, 77, 79, 80, 81, 82, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 109, 110, 114, 115, 129, 206], "randn": [18, 65, 89, 90, 91, 92, 101, 104, 112, 113, 116, 119, 123, 125, 126, 147, 148, 149, 165, 203, 204, 205, 206], "td_project": 18, "yield_nesting_kei": 18, "keysview": 18, "selected_kei": [18, 44, 45, 198], "altern": [19, 131, 199, 204], "onehottensorspec": 19, "categor": [19, 22, 111, 125, 126], "larg": 19, "action_valu": [19, 22, 101, 113, 125, 126, 176, 199], "arang": [19, 22, 101, 125, 157], "view": [19, 21, 22, 41, 42, 44, 45, 105, 125, 198, 204, 205, 206], "argmax": [19, 101, 113, 125, 126], "dim": [19, 56, 104, 190, 198, 204], "chosen_action_valu": [19, 22, 113, 176, 199], "outcom": [19, 22, 99, 120], "nvec": 20, "use_regist": [20, 22], "hot": [20, 22, 101, 111, 113, 125, 126], "cardin": [20, 125, 126], "element": [20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 35, 36, 37, 94, 116, 117, 157, 163, 198, 205], "gamma": [21, 132, 133, 134, 135, 136, 138, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 186, 198, 199, 206], "present": [21, 23, 32, 41, 42, 44, 45, 72, 95, 96, 97, 98, 103, 108, 116, 117, 118, 119, 132, 133, 136, 138, 139, 140, 141, 190, 196, 198, 201, 206], "sutton": 21, "r": [21, 65, 117, 131, 146, 205], "1988": 21, "predict": [21, 102, 106, 136, 141, 146], "tempor": [21, 148], "44": 21, "discount": [21, 132, 133, 134, 135, 136, 138, 139, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 198, 199], "ahead": [21, 205], "add_modul": [21, 41, 42, 44, 45], "add": [21, 23, 24, 25, 26, 29, 30, 31, 39, 40, 41, 42, 44, 45, 107, 132, 161, 163, 198, 199, 204, 206], "child": [21, 41, 42, 44, 45, 204], "current": [21, 41, 42, 44, 45, 50, 78, 85, 102, 104, 115, 125, 126, 171, 179, 196, 198, 205, 206], "fn": [21, 41, 42, 44, 45, 188, 189], "recurs": [21, 41, 42, 44, 45], "children": [21, 41, 42, 44, 45], "init": [21, 41, 42, 44, 45, 198, 199], "init_weight": [21, 41, 42, 44, 45], "m": [21, 41, 42, 44, 45, 117, 198, 199], "fill_": [21, 41, 42, 44, 45, 199, 204, 205], "net": [21, 41, 42, 44, 45, 104, 140, 181, 186, 199, 203, 206], "in_featur": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 90, 94, 95, 96, 97, 98, 104, 105, 107, 108, 116, 203], "out_featur": [21, 41, 42, 43, 44, 45, 58, 68, 75, 78, 81, 90, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 107, 108, 116, 198, 199, 203, 206], "bia": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 94, 102, 105, 107, 108, 116, 129, 130, 131, 199], "requires_grad": [21, 41, 42, 44, 45, 198], "bfloat16": [21, 41, 42, 44, 45], "cast": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 82, 116, 171, 174, 176, 179, 181, 184, 204, 205], "datatyp": [21, 41, 42, 44, 45], "direct": [21, 41, 42, 44, 45, 199], "member": [21, 41, 42, 44, 45], "xdoctest": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "skip": [21, 41, 42, 44, 45, 62, 78, 117, 159, 162], "buf": [21, 41, 42, 44, 45], "20l": [21, 41, 42, 44, 45], "1l": [21, 41, 42, 44, 45], "5l": [21, 41, 42, 44, 45], "immedi": [21, 41, 42, 44, 45, 146], "associ": [21, 41, 42, 44, 45, 114, 190, 203], "copi": [21, 41, 42, 44, 45, 78, 198, 199, 204], "doubl": [21, 28, 41, 42, 44, 45, 58, 59, 68, 75, 76, 78, 81, 116, 135, 136, 137, 140, 142, 198, 205], "eval": [21, 41, 42, 44, 45, 78, 82, 198, 199], "certain": [21, 41, 42, 44, 45, 62, 74, 78, 138, 198, 199, 204, 205], "particular": [21, 41, 42, 44, 45, 78, 196, 199, 201], "behavior": [21, 41, 42, 44, 45, 78], "dropout": [21, 41, 42, 44, 45, 78], "batchnorm": [21, 41, 42, 44, 45, 78], "disabl": [21, 41, 42, 44, 45, 78, 121, 122, 198], "gradient": [21, 41, 42, 44, 45, 78, 108, 121, 122, 132, 146, 147, 148, 149, 166, 198, 199], "comparison": [21, 41, 42, 44, 45, 78], "similar": [21, 41, 42, 44, 45, 58, 68, 75, 78, 80, 81, 82, 88, 116, 117, 198, 203, 205], "mechan": [21, 41, 42, 44, 45, 78], "confus": [21, 41, 42, 44, 45, 78], "extra_repr": [21, 41, 42, 44, 45], "represent": [21, 41, 42, 44, 45, 68, 81, 198, 199, 205], "string": [21, 41, 42, 44, 45, 117, 131, 165, 171, 179, 181, 184], "tennsordict": 21, "dimens": [21, 55, 56, 61, 65, 73, 76, 79, 94, 105, 107, 108, 120, 121, 132, 133, 136, 138, 139, 140, 141, 147, 148, 149, 190, 198, 199, 204], "shift": [21, 129], "nontermin": [21, 198], "termin": [21, 118, 198, 199, 203, 206], "original_reward": [21, 198], "newli": 21, "get_buff": [21, 41, 42, 44, 45], "throw": [21, 41, 42, 44, 45, 205], "docstr": [21, 41, 42, 44, 45], "get_submodul": [21, 41, 42, 44, 45], "explan": [21, 41, 42, 44, 45], "how": [21, 23, 25, 32, 41, 42, 44, 45, 133, 137, 138, 139, 166, 193, 198, 199, 201, 205, 206], "qualifi": [21, 41, 42, 44, 45], "referenc": [21, 41, 42, 44, 45], "attributeerror": [21, 41, 42, 44, 45], "invalid": [21, 41, 42, 44, 45], "resolv": [21, 41, 42, 44, 45], "someth": [21, 41, 42, 44, 45, 193, 205], "get_extra_st": [21, 41, 42, 44, 45, 82], "set_extra_st": [21, 41, 42, 44, 45, 82], "pickleabl": [21, 41, 42, 44, 45, 82], "ensur": [21, 23, 25, 32, 41, 42, 44, 45, 68, 82, 127, 198], "guarante": [21, 35, 36, 37, 38, 41, 42, 44, 45, 82, 206], "pickl": [21, 41, 42, 44, 45, 82], "get_paramet": [21, 41, 42, 44, 45], "sai": [21, 41, 42, 44, 45, 205], "net_b": [21, 41, 42, 44, 45], "net_c": [21, 41, 42, 44, 45], "conv": [21, 41, 42, 44, 45, 94], "conv2d": [21, 41, 42, 44, 45, 94], "16": [21, 41, 42, 44, 45, 198], "kernel_s": [21, 41, 42, 44, 45, 94, 95, 96, 199, 206], "stride": [21, 41, 42, 44, 45, 94, 95, 96, 103, 199, 206], "100": [21, 41, 42, 44, 45, 65, 158, 166, 186, 198, 199, 201, 205, 206], "diagram": [21, 41, 42, 44, 45], "show": [21, 41, 42, 44, 45, 199, 203, 206], "itself": [21, 41, 42, 44, 45, 74], "would": [21, 41, 42, 44, 45, 105, 196, 199, 203, 204, 205], "degre": [21, 41, 42, 44, 45], "named_modul": [21, 41, 42, 44, 45], "o": [21, 41, 42, 44, 45], "transit": [21, 41, 42, 44, 45, 198, 199], "alwai": [21, 41, 42, 44, 45, 64, 199], "half": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116, 198], "ipu": [21, 41, 42, 44, 45], "strict": [21, 41, 42, 44, 45, 78], "descend": [21, 41, 42, 44, 45, 78], "exactli": [21, 41, 42, 44, 45, 50, 78], "persist": [21, 41, 42, 44, 45, 78], "enforc": [21, 41, 42, 44, 45, 78, 118], "missing_kei": [21, 41, 42, 44, 45, 78], "unexpected_kei": [21, 41, 42, 44, 45, 78], "unexpect": [21, 41, 42, 44, 45, 78, 205], "namedtupl": [21, 41, 42, 44, 45, 78], "regist": [21, 22, 41, 42, 44, 45, 58, 68, 73, 77, 78, 79, 80, 81, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 109, 110, 114, 115, 129, 196, 203], "duplic": [21, 41, 42, 44, 45, 135, 136, 204], "l": [21, 41, 42, 44, 45, 146], "idx": [21, 41, 42, 44, 45, 204], "named_buff": [21, 41, 42, 44, 45, 199], "prefix": [21, 41, 42, 44, 45, 78, 205], "prepend": [21, 41, 42, 44, 45], "running_var": [21, 41, 42, 44, 45], "named_children": [21, 41, 42, 44, 45], "conv4": [21, 41, 42, 44, 45], "conv5": [21, 41, 42, 44, 45], "memo": [21, 41, 42, 44, 45], "remove_dupl": [21, 41, 42, 44, 45], "named_paramet": [21, 41, 42, 44, 45, 199], "register_backward_hook": [21, 41, 42, 44, 45], "hook": [21, 41, 42, 44, 45, 58, 68, 73, 77, 79, 80, 81, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 109, 110, 113, 114, 115, 125, 126, 129, 159, 160, 162, 164, 166, 167, 192], "removablehandl": [21, 41, 42, 44, 45], "deprec": [21, 41, 42, 44, 45, 78, 205], "favor": [21, 41, 42, 44, 45], "register_full_backward_hook": [21, 41, 42, 44, 45], "futur": [21, 41, 42, 44, 45, 68, 78, 81, 105, 193, 206], "register_buff": [21, 41, 42, 44, 45], "running_mean": [21, 41, 42, 44, 45], "alongsid": [21, 41, 42, 44, 45], "latter": [21, 41, 42, 44, 45, 58, 68, 73, 77, 79, 80, 81, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 109, 110, 114, 115, 129, 188, 189], "num_featur": [21, 41, 42, 44, 45], "register_forward_hook": [21, 41, 42, 44, 45, 125, 126], "signatur": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116, 128], "posit": [21, 29, 30, 31, 41, 42, 44, 45, 62, 73, 74, 78, 79, 203], "won": [21, 41, 42, 44, 45, 68, 81, 166, 190, 198], "register_forward_pre_hook": [21, 41, 42, 44, 45], "invok": [21, 29, 41, 42, 44, 45], "respect": [21, 41, 42, 44, 45, 54, 58, 68, 75, 78, 81, 115, 116, 123, 161], "grad_input": [21, 41, 42, 44, 45], "grad_output": [21, 41, 42, 44, 45], "subsequ": [21, 41, 42, 44, 45], "entri": [21, 41, 42, 44, 45, 147, 148, 149, 203], "technic": [21, 41, 42, 44, 45], "receiv": [21, 41, 42, 44, 45, 77, 105, 199, 201], "similarli": [21, 41, 42, 44, 45, 118, 119, 198, 203, 205], "caller": [21, 41, 42, 44, 45], "register_load_state_dict_post_hook": [21, 41, 42, 44, 45], "post": [21, 41, 42, 44, 45, 199], "incompatible_kei": [21, 41, 42, 44, 45], "consist": [21, 41, 42, 44, 45, 94, 105, 198, 199, 205], "addit": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116, 131, 147, 199], "thrown": [21, 41, 42, 44, 45], "clearn": [21, 41, 42, 44, 45], "register_modul": [21, 41, 42, 44, 45, 196], "alia": [21, 41, 42, 44, 45], "register_paramet": [21, 41, 42, 44, 45], "requires_grad_": [21, 41, 42, 44, 45, 198], "autograd": [21, 41, 42, 44, 45, 78], "freez": [21, 41, 42, 44, 45], "finetun": [21, 41, 42, 44, 45], "individu": [21, 41, 42, 44, 45], "gan": [21, 41, 42, 44, 45], "share_memori": [21, 41, 42, 44, 45, 198], "share_memory_": [21, 41, 42, 44, 45, 204, 206], "destin": [21, 41, 42, 44, 45, 78, 88], "keep_var": [21, 41, 42, 44, 45, 78], "averag": [21, 41, 42, 44, 45, 78, 82, 164, 198, 203], "shallow": [21, 41, 42, 44, 45, 78], "pleas": [21, 41, 42, 44, 45, 78, 193], "design": [21, 22, 41, 42, 44, 45, 78, 132, 133, 136, 138, 139, 140, 141, 198, 199, 201, 204, 205, 206], "detach": [21, 41, 42, 44, 45, 78, 198, 199], "non_block": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116, 199], "memory_format": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "channels_last": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "Its": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "complex": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116, 203], "integr": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 98, 116], "unchang": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "tri": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "convert": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 82, 116, 131, 204], "host": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "pin": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "4d": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "ignore_w": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "1913": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "3420": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "5113": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "2325": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "torch_doctest_cuda1": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "gpu1": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "1914": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "5112": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "2324": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "float16": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "cdoubl": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "3741": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "j": [21, 23, 32, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116, 196, 199], "2382": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "5593": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "4443": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "complex128": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "6122": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "1150": [21, 41, 42, 44, 45, 58, 68, 75, 78, 81, 116], "to_empti": [21, 41, 42, 44, 45], "dst_type": [21, 41, 42, 44, 45], "xpu": [21, 41, 42, 44, 45], "set_to_non": [21, 41, 42, 44, 45], "unidimension": [22, 204], "keepdim": 22, "sum": [22, 42, 146, 198, 199, 205], "user_regist": 22, "experiment": [22, 117], "priori": 22, "definit": [22, 38], "uniqu": 22, "discretebox": 22, "alpha": [23, 25, 32, 94, 140, 141, 198, 199, 206], "beta": [23, 25, 32, 138, 198, 199, 206], "ep": [23, 25, 32, 82, 133, 142, 164], "1e": [23, 25, 32, 82, 99, 102, 120], "08": [23, 25, 32, 198], "collate_fn": [23, 24, 25, 26, 30, 163, 204, 206], "prefetch": [23, 24, 25, 26, 30, 163, 198, 199], "schaul": [23, 32], "quan": [23, 32], "antonogl": [23, 32], "silver": [23, 32], "2015": [23, 32], "arxiv": [23, 32, 55, 68, 95, 96, 97, 98, 102, 103, 108, 109, 110, 114, 115, 125, 132, 136, 137, 139, 141, 142, 147, 150, 151, 154, 171, 174, 179, 184], "ab": [23, 32, 68, 82, 102, 103, 108, 109, 110, 114, 115, 132, 137, 139, 171, 179], "1511": [23, 32, 103], "05952": [23, 32], "expon": [23, 25, 32], "\u03b1": [23, 25, 32], "determin": [23, 25, 32, 68, 81, 199], "delta": [23, 25, 32, 117, 120, 192], "prioriti": [23, 25, 31, 32, 35, 36, 37, 38, 134, 135, 140, 141, 196, 198, 199], "null": [23, 25, 32, 54, 198], "merg": [23, 24, 25, 30, 163], "mini": [23, 24, 25, 30, 163], "style": [23, 24, 25, 30, 163], "rb": [23, 24, 25, 30, 163, 199, 206], "multithread": [23, 24, 25, 30, 163], "instanti": [23, 24, 25, 44, 45, 77, 163, 198, 199, 204, 205], "multinomi": [23, 25], "update_prior": [23, 25, 32, 196, 198, 206], "circular": [24, 163, 198], "randomli": [24, 26, 64, 65, 75, 117, 163], "select": [24, 25, 26, 29, 30, 31, 44, 45, 64, 93, 163, 165, 198, 199], "priority_kei": [25, 31, 135, 136, 141, 206], "td_error": [25, 31, 134, 135, 136, 140, 141, 198, 206], "prioritizedreplaybuff": [25, 192, 206], "flaot": 25, "return_weight": 25, "_weight": 25, "replaybuff": [26, 29, 31, 40, 182, 186, 192, 206], "meta": [27, 196], "describ": [27, 56, 77, 120, 121, 171, 179, 205], "rb_prototyp": [29, 30, 31], "invoc": 29, "friendli": [29, 198], "public": 29, "rpc": 29, "insert_transform": [29, 30, 31], "insert": [29, 30, 31, 39, 40, 79, 199], "include_info": [29, 31], "sampler": [29, 30, 31, 32, 33, 35, 36, 37, 38, 192], "writer": [30, 39, 192], "max_siz": [30, 35, 37, 38, 199], "1_000": 30, "randomsampl": [30, 192], "roundrobinwrit": [30, 192], "kw": [31, 39], "max_capac": 32, "uniformli": [33, 205], "scratch_dir": [35, 198], "memmap": [35, 44, 45, 82], "attach": [35, 36, 37, 38, 199], "entiti": [35, 36, 37, 38], "made": [35, 36, 37, 38, 198], "eg": [35, 36, 37, 38], "alloc": 36, "__len__": 38, "roundrobin": 39, "piec": [39, 40], "_inplace_upd": [41, 44, 45, 78], "_batch_lock": [41, 44, 45, 78], "run_type_check": [41, 43], "compar": [41, 162, 199, 205], "batch_lock": [41, 42, 44, 45, 78], "environn": [41, 42, 43, 44, 45, 78], "immut": [41, 42, 44, 45, 78, 171, 179], "fake_tensordict": [41, 42, 44, 45], "fake": [41, 42, 44, 45], "overridden": [41, 42, 44, 45, 58, 68, 73, 77, 79, 80, 81, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 109, 110, 114, 115, 129], "recip": [41, 42, 44, 45, 58, 68, 73, 77, 79, 80, 81, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 109, 110, 114, 115, 129], "afterward": [41, 42, 44, 45, 58, 68, 73, 77, 79, 80, 81, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 109, 110, 114, 115, 129, 205], "former": [41, 42, 44, 45, 58, 68, 73, 77, 79, 80, 81, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 109, 110, 114, 115, 129], "silent": [41, 42, 44, 45, 58, 68, 73, 77, 79, 80, 81, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 109, 110, 114, 115, 129], "info": [41, 42, 44, 45, 83, 203], "_step": [41, 42, 44, 45], "privat": [41, 42, 44, 45, 205], "_reset": [41, 42, 43, 44, 45, 93, 206], "overwritten": [41, 42, 44, 45, 88, 198], "callback": [41, 42, 44, 45], "auto_reset": [41, 42, 44, 45, 199], "auto_cast_to_devic": [41, 42, 44, 45], "break_when_any_don": [41, 42, 44, 45], "return_contigu": [41, 42, 44, 45, 201], "soon": [41, 42, 44, 45], "smaller": [41, 42, 44, 45], "lazystackedtensordict": [41, 42, 43, 44, 45, 201, 204, 205, 206], "concomitt": [41, 42, 44, 45], "eras": [41, 42, 44, 45], "workspac": [41, 42, 44, 45], "carri": [41, 42, 44, 45], "discard": [42, 88, 205], "info_dict_read": 42, "set_info_dict_read": 42, "put": [42, 82, 190, 204], "f": [42, 131, 147, 148, 149, 198, 199, 203, 204, 205], "read_act": 42, "read_don": 42, "reader": [42, 198, 199], "frame_skip": [42, 46, 47, 48, 51, 62, 159, 162, 168, 196, 198, 206], "broken": [42, 84], "read_ob": 42, "dictat": [42, 117], "inner": [42, 196, 198, 205], "read_reward": 42, "total_reward": 42, "step_reward": 42, "far": [42, 121, 122, 205], "baseinfodictread": 42, "info_dict": 42, "hoc": 42, "manner": [42, 68, 198, 201], "dict_read": 42, "default_info_dict_read": 42, "my_info_kei": 42, "some_env": 42, "meant": 43, "limit": [43, 44, 45, 204], "safeti": 43, "constraint": 43, "behav": [43, 50, 111], "classic": [43, 203, 204], "unboundedcontinuoustensorspec": [43, 75, 89, 90, 91, 92, 93, 116, 119, 123, 192, 205], "mymbenv": [43, 93], "world_model": [43, 53, 93], "super": [43, 93, 123, 125, 128, 203, 206], "hidden_observ": [43, 93], "mlp": [43, 90, 93, 94, 95, 96, 97, 98, 101, 104, 171, 179, 181, 184, 192, 198, 199, 201, 203, 206], "worldmodelwrapp": [43, 93], "activation_class": [43, 93, 94, 95, 96, 97, 98, 102, 103, 105, 198, 199, 206], "relu": [43, 93, 131], "activate_last_lay": [43, 93, 98, 105], "depth": [43, 93, 94, 95, 96, 97, 98, 101, 102, 103, 105, 109, 110, 199, 201], "equal": [44, 45, 64, 65, 94, 100, 105, 143, 157, 188, 189, 204], "my_env_fun": [44, 45], "custom_attribute_list": [44, 45], "custom_attribut": [44, 45], "custom_method_list": [44, 45], "custom_method": [44, 45], "num_work": [44, 45, 198, 199], "deploi": [44, 45], "creation": [44, 45, 198, 205], "slight": [44, 45, 199], "overhead": [44, 45, 203], "env_input_kei": [44, 45], "permit": [44, 45], "drastic": [44, 45], "decreas": [44, 45], "io": [44, 45], "burden": [44, 45], "_batchedenv": [44, 45], "might": [44, 45, 193, 198, 205], "next_pixel": [44, 45], "next_vector": [44, 45], "occupi": [44, 45], "excluded_kei": [44, 45], "share_individual_td": [44, 45], "lazi": [44, 45, 68, 107, 118, 119, 198, 201, 204, 205], "shared_memori": [44, 45], "policy_proof": [44, 45], "ll": [44, 45, 198, 199, 205], "hidden": [44, 45, 90, 91, 92, 102, 104, 109, 110, 114, 115, 116, 119, 171, 179, 201, 203, 206], "allow_step_when_don": [44, 45], "encount": [44, 45, 193], "update_kwarg": [44, 45], "dm_control": [46, 47, 198, 201, 205], "env_nam": [46, 48, 51, 198, 205], "task_nam": 46, "cheetah": [46, 47, 198, 205], "suit": [47, 205], "disable_env_check": 48, "categorical_action_encod": 49, "serv": [50, 205], "placehold": [50, 78], "secur": 50, "jumanji": [51, 52], "snake": [51, 52], "6x6": [51, 52], "td1": 52, "int32": [52, 204, 206], "5": [52, 93, 94, 101, 102, 104, 105, 113, 121, 122, 125, 126, 138, 198, 199, 204, 205, 206], "12x12": 52, "tsp50": 52, "tsp100": 52, "model_bas": [53, 93], "dreamer": [53, 102], "prior_shap": 53, "belief_shap": 53, "obs_decod": 53, "transform_reward_spec": [54, 58, 59, 68, 70, 71, 77, 79, 81], "cat_dim": [55, 65], "success": [55, 77, 206], "account": 55, "movement": 55, "veloc": [55, 205], "propos": [55, 106, 137, 142, 181, 184], "plai": [55, 205], "atari": [55, 205], "pdf": [55, 95, 96, 97, 98, 125, 136, 140, 141, 142, 147, 150, 151, 154, 174, 181, 184], "1312": 55, "5602": 55, "tranform": [55, 58, 68, 74, 75, 77, 80, 81, 83], "transform_observation_spec": [55, 56, 57, 58, 59, 61, 63, 65, 68, 69, 72, 74, 75, 76, 77, 79, 81], "del_kei": [56, 199, 201], "unsqueeze_if_oor": 56, "observation_posit": 56, "observation_veloc": 56, "delet": [56, 204], "unsqueez": [56, 76, 79, 104, 204], "key1": [56, 157, 165], "key2": [56, 157, 165], "w": [57, 69, 76], "crop": 57, "center": 57, "width": [57, 69, 199], "height": [57, 69, 199], "squar": [57, 121, 122], "rewardsc": [58, 78, 192, 198], "rewardclip": [58, 192], "transformed_env": [58, 77, 78], "dest": [58, 68, 81, 116], "transform_input_spec": [58, 59, 68, 77, 79, 81], "finit": [60, 198], "first_dim": 61, "last_dim": 61, "flatten": [61, 198, 199], "adjac": 61, "repeatedli": 62, "stabil": 62, "turn": [63, 162, 199], "noop": [64, 206], "30": [64, 114, 115, 199], "op": [64, 167], "noop_max": 64, "loc": [65, 71, 90, 91, 92, 112, 117, 119, 121, 122, 169, 171, 179, 181, 184, 190, 198, 199, 203, 206], "standard_norm": [65, 71, 198, 199], "affin": [65, 71], "layer": [65, 82, 94, 95, 96, 102, 105, 107, 108, 109, 110, 124, 198, 199, 203], "set_default_tensor_typ": 65, "doubletensor": 65, "std": [65, 82, 198, 199, 205], "isclos": 65, "next_ob": [65, 147, 148, 149, 198, 206], "normalis": 65, "stat": [65, 169, 190, 198], "rubric": [65, 119], "manual_se": [65, 198, 205, 206], "init_stat": 65, "3752e": 65, "01": [65, 129, 132, 133, 138, 139, 198, 202], "5087e": 65, "03": [65, 198], "9294e": 65, "9636": 65, "5608": 65, "6408": 65, "num_it": 65, "reduce_dim": 65, "constant": [65, 196, 198, 199, 205], "ideal": [65, 198], "statist": [65, 82, 190, 198, 205], "approach": [65, 205], "gaussian": [65, 93, 107, 108], "empir": [65, 93, 117], "deviat": [65, 82, 93, 102, 107, 108, 139, 198, 199], "summari": [65, 82], "r3m": 68, "resnet": [68, 81], "visual": [68, 81], "embed": [68, 80, 81, 90, 91, 92, 116, 203], "ego4d": [68, 81], "paper": [68, 81, 137, 181, 184, 198], "univers": [68, 81], "suraj": 68, "nair": 68, "aravind": 68, "rajeswaran": 68, "vikash": [68, 81], "kumar": [68, 81], "chelsea": 68, "finn": 68, "abhinav": 68, "gupta": 68, "2203": 68, "12601": 68, "_init": 68, "snippet": [68, 198], "resenet50": 68, "model_nam": [68, 81], "resnet50": [68, 81], "resnet34": 68, "resnet18": 68, "left": [68, 81, 199], "empti": [68, 78, 81, 198], "r3m_vec": 68, "feed": [68, 81], "244": [68, 81], "hub": [68, 81], "cach": [68, 78, 81, 158], "download_path": [68, 81], "tensor_pixels_kei": [68, 81], "interpol": [69, 199], "bilinear": 69, "clamp_min": 70, "clamp_max": 70, "clip": [70, 133, 166], "clip_min": 70, "scalar": [70, 96, 98, 107, 108, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "clip_max": 70, "episod": [72, 93, 150, 151, 152, 153, 154, 155, 156, 199], "cumul": [72, 93], "episode_": 72, "reward1": 72, "reward2": 72, "ho": 72, "squeeze_dim": 73, "squeez": [73, 94, 199, 204], "manual": 74, "default_valu": 75, "primer": 75, "popul": 75, "drawn": [75, 117], "rel": [75, 99, 120], "chosen": [75, 171, 179, 181, 184], "mykei": 75, "dtype_or_devic": 75, "255": [76, 205], "precis": [76, 198], "ri": 76, "randint": [76, 198], "out_keys_inv": 77, "principl": 77, "combin": [77, 204], "cattransform": 77, "notabl": 77, "cache_spec": 78, "anymor": [78, 116, 198], "unsqueeze_dim": 79, "vip": [80, 81], "toward": 81, "implicit": 81, "jason": 81, "ma": 81, "shagun": 81, "sodhani": 81, "dinesh": 81, "jayaraman": 81, "osbert": 81, "bastani": 81, "ami": 81, "zhang": 81, "vip_vec": 81, "shared_td": 82, "lock": 82, "decai": [82, 140, 164, 198, 199, 205], "9999": [82, 205], "0001": [82, 102, 164], "fly": [82, 138, 205], "substitut": 82, "to_observation_norm": 82, "rate": [82, 146, 198, 199], "99": [82, 132, 133, 138, 139, 140, 141, 146, 186, 198, 199, 206], "underflow": 82, "1000": [82, 117, 137, 186, 198, 199], "build_td_for_shared_vecnorm": 82, "memmori": 82, "memmap_": [82, 204], "multiprocess": [82, 205], "mp": 82, "queue": 82, "td_share": 82, "v": [82, 104, 141, 199, 203, 206], "observationnorm": [82, 190, 192, 198, 199, 206], "state_dim": [83, 114, 115], "action_dim": [83, 95, 97, 201], "gsde": [83, 140, 190], "nois": [83, 108, 124, 140, 162, 190, 198], "func": [83, 203], "gsdemodul": 83, "short": 84, "discrep": [84, 132, 133, 134, 135, 138, 139], "imposs": 84, "probabilistictdmodul": [87, 105, 117, 141, 146, 162], "next_tensordict": [88, 198], "keep_oth": 88, "exclude_reward": 88, "exclude_don": 88, "exclude_act": 88, "_run_check": 88, "reflect": [88, 168], "renam": [88, 198], "next_": 88, "funtion": 88, "td_out": [88, 157, 165], "make_polici": 88, "next_td": 88, "next_observ": [88, 104, 201], "translat": [89, 112], "td_modul": [89, 90, 91, 92, 112, 116, 117, 119, 123, 203, 206], "actor": [90, 91, 92, 93, 95, 97, 101, 102, 112, 113, 125, 126, 132, 133, 134, 138, 139, 140, 141, 171, 174, 176, 179, 181, 184, 192, 198, 199, 206], "get_policy_oper": [90, 91, 92, 171, 179, 203], "alon": [90, 91, 92], "tdmodul": [90, 91, 92, 186], "get_critic_oper": [90, 203], "common_oper": [90, 92], "produc": [90, 92, 94, 105, 111, 205], "policy_oper": [90, 91, 92], "value_oper": [90, 91, 92], "probabilisticactor": [90, 91, 92, 141, 192, 198], "valueoper": [90, 91, 92, 132, 133, 138, 139, 186, 192, 198, 203], "tanhnorm": [90, 91, 92, 112, 119, 192, 203, 206], "normalparamwrapp": [90, 91, 92, 112, 119, 203, 206], "spec_hidden": [90, 92], "module_hidden": [90, 92, 203], "td_module_hidden": [90, 92, 203], "spec_act": [90, 92], "module_act": [90, 92, 203], "td_module_act": [90, 91, 92, 203], "dist_in_kei": [90, 91, 92, 112, 119], "sample_out_kei": [90, 92, 119], "distribution_class": [90, 91, 92, 112, 117, 119, 198, 203, 206], "return_log_prob": [90, 91, 92, 117, 119, 203, 206], "module_valu": [90, 91, 92, 203], "num_cel": [90, 94, 95, 96, 97, 98, 102, 103, 105, 198, 199, 203, 206], "td_module_valu": [90, 91, 92, 203], "state_action_valu": [90, 123, 146, 174, 181, 184, 186, 198, 203, 206], "td_clone": [90, 91, 92, 203], "clone": [90, 91, 92, 116, 171, 179, 181, 184, 198, 199, 203, 204, 206], "sample_log_prob": [90, 91, 92, 117, 119, 171, 179, 181, 203], "tensordictmodulewrapp": [90, 172, 173, 186], "estim": [90, 91, 92, 132, 133, 138, 139, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 198, 199], "get_value_oper": [90, 91, 92, 171, 179], "action_modul": 91, "state_valu": [91, 92, 123, 147, 148, 149, 150, 151, 152, 154, 155, 171, 179, 184, 198], "safesequenti": [91, 92, 192], "planning_horizon": 93, "optim_step": [93, 204], "num_candid": 93, "num_top_k_candid": 93, "reward_kei": 93, "action_kei": [93, 106], "cross": 93, "entropi": [93, 132, 133, 138, 139, 140, 141], "botev": 93, "et": [93, 203], "al": [93, 176, 203, 205], "2013": 93, "cem": 93, "plan": [93, 106], "unit": [93, 102, 109, 110, 114, 115], "varianc": [93, 121, 122], "rank": 93, "top": 93, "k": [93, 199, 203, 204], "repeat": 93, "maximis": [93, 95, 97, 198], "horizon": 93, "modelbasedenv": 93, "mpc": [93, 106], "planner": [93, 192], "candid": 93, "modelbasedenvbas": [93, 106, 192], "next_hidden_observ": 93, "elu": [94, 95, 96, 97, 98, 102, 103, 199, 206], "activation_kwarg": [94, 105], "norm_class": [94, 95, 96, 105], "norm_kwarg": [94, 105], "bias_last_lay": [94, 95, 96, 97, 98, 103, 105], "aggregator_class": [94, 95, 96, 199, 206], "squashdim": [94, 95, 206], "aggregator_kwarg": [94, 95, 96, 199], "squeeze_output": [94, 95, 96, 199], "convolut": [94, 95, 96], "neural": [94, 116, 199, 203, 205], "len": [94, 105, 198, 199, 204, 206], "cell": [94, 105, 198], "kernel": [94, 103, 104], "tanh": [94, 105, 120, 121, 122, 198], "singleton": [94, 105], "device_typ": [94, 95, 96, 97, 98, 103, 105, 107, 108], "cnet": 94, "34": [94, 105], "35": [94, 105], "possibli": [94, 116, 166, 198, 205], "rectangular": 94, "conv_net_kwarg": [95, 96], "mlp_net_kwarg": [95, 96, 97], "use_avg_pool": [95, 96], "WITH": [95, 96, 97, 98, 142, 174], "1509": [95, 96, 97, 98, 137, 142, 174], "02971": [95, 96, 97, 98, 142, 174], "convnet": [95, 192, 206], "ndims_in": 95, "avgpool": [95, 96], "128": [96, 198], "adaptiveavgpool2d": [96, 199], "400": [97, 98, 199], "300": [97, 98, 171, 179], "mlp_net_kwargs_net1": 98, "mlp_net_kwargs_net2": 98, "atol": [99, 120], "06": [99, 120], "rtol": [99, 120], "batch_shap": [99, 120], "event_shap": [99, 120], "absolut": [99, 120], "toler": [99, 120], "log_prob": [99, 111, 122], "densiti": [99, 111, 122], "mass": [99, 111, 122], "rsampl": [99, 111, 117], "sample_shap": [99, 111], "reparameter": [99, 111], "dqnet": 100, "atom": 100, "action_spac": [101, 113, 125, 126], "one_hot": [101, 113, 125, 126], "onehotdiscretetensorspec": [101, 113, 125, 126, 192], "nbin": [101, 125], "qvalue_actor": [101, 113, 125, 126], "std_bia": 102, "std_min_val": 102, "stochast": [102, 108, 109, 115, 140, 141], "belief": [102, 109, 114, 115], "1912": 102, "016034": 102, "softplu": [102, 129, 130, 131], "out_features_valu": 103, "cnn_kwarg": [103, 199], "mlp_kwarg": [103, 104, 199], "duel": [103, 199], "cnn": [103, 199, 206], "06581": 103, "512": 103, "lstm_kwarg": 104, "embedd": 104, "lstm": 104, "time_step": 104, "2d": 104, "hidden_s": 104, "input_s": 104, "hidden0_in": 104, "hidden1_in": 104, "hidden0_out": 104, "hidden1_out": 104, "single_bias_last_lay": 105, "layer_class": 105, "layer_kwarg": 105, "perceptron": 105, "seamless": 105, "though": 105, "reshap": [105, 204], "lazylinear": 105, "42": [105, 166], "noisylinear": [105, 107, 192, 199], "noisylazylinear": [105, 192], "At": [106, 201], "mpcplanner": 106, "tensordict_out": [106, 203, 205], "std_init": [107, 108], "noisi": [107, 108, 124], "term": [107, 108, 131, 132, 167, 199], "matrix": [107, 108], "ax": [107, 108], "initialize_paramet": 107, "isol": 107, "1706": 108, "10295v3": 108, "induc": 108, "aid": 108, "descent": 108, "remain": 108, "emploi": 108, "decod": [109, 203], "1803": [109, 110], "10122": [109, 110], "rnn_hidden": 109, "latent": 110, "logit": 111, "prob": 111, "One": [111, 116, 143, 198, 203, 204, 205], "excacli": 111, "probabilist": [112, 203, 206], "functional_modul": [112, 113, 116, 119, 123, 125, 126], "make_funct": [112, 113, 116, 119, 123, 125, 126, 127, 199, 203, 206], "tensordict_modul": [112, 113, 119, 125, 126, 127, 128, 202, 203], "hidden_dim": [114, 115], "scale_lb": [114, 115], "posterior": 114, "rssm": [114, 115], "1811": [114, 115], "04551": [114, 115], "obs_embed": 114, "rnn_hidden_dim": 115, "prior": 115, "dream": 115, "recurr": 115, "functionalmodul": [116, 127], "functionalmodulewithbuff": [116, 127], "character": 116, "overflow": [116, 117], "grucel": [116, 203], "td_fmodul": 116, "td_function": 116, "td_state": 116, "vmap": [116, 119, 199, 203, 206], "expand": [116, 119, 203, 206], "ensembl": [116, 140], "params_repeat": 116, "td_vmap": [116, 119], "irrespect": [116, 117], "random_sampl": [116, 117], "tensor_spec": 117, "default_interaction_mod": [117, 203], "distribution_kwarg": [117, 198], "cache_dist": 117, "n_empirical_estim": 117, "probabilistictensordictmodul": [117, 118, 206], "rule": [117, 203], "interaction_mod": 117, "get_dist": [117, 118, 203], "__call__": [117, 196, 203], "median": 117, "suppli": 117, "fist": 117, "set_interaction_mod": 117, "diverg": [117, 138], "partial_toler": [118, 119, 201], "probabilistictensordictsequenti": [118, 203, 206], "tensordictsequenti": [118, 201, 206], "expos": [118, 203], "recov": [118, 201], "who": [118, 119], "AND": [118, 119], "scan": [118, 119], "sub": [118, 119, 157, 166, 201, 205, 206], "tensordictsequenci": 119, "tensordictsequ": 119, "safeprobabilisticmodul": [119, 192], "spec1": 119, "net1": 119, "module1": 119, "td_module1": 119, "spec2": 119, "module2": 119, "td_module2": 119, "ndunboundedcontinuoustensorspec": 119, "min": [120, 121, 122, 133, 140, 141, 198, 199], "event_dim": [120, 121], "upscal": [121, 122], "tanh_loc": [121, 122], "prevent": [121, 122, 138, 139, 198], "tanhtransform": 121, "ultim": [121, 122], "unstabl": [121, 122], "poor": [121, 122], "explos": [121, 122], "switch": [121, 122], "sigma": [121, 122], "formula": [121, 122, 133, 138, 139], "custommodul": [123, 128], "cat": [123, 198, 204, 206], "var_num": [125, 126], "regard": [125, 132, 136, 139, 204], "perspect": [125, 136], "1707": [125, 136, 139, 171, 179], "06887": [125, 136], "mult_one_hot": [125, 126], "customdistributionalqv": 125, "log_softmax": 125, "greedi": [126, 199], "_src": 127, "wrapper_typ": 127, "mislead": 128, "other_kei": 128, "typeerror": 128, "min_val": [129, 131], "bias": [129, 198], "_bia": 129, "invert": 130, "surject": 131, "exp": 131, "expln": 131, "biased_softplu": [131, 192], "beggin": 131, "biased_softplus_": 131, "syntax": [131, 198], "condit": 131, "met": 131, "safeprobabilisticsequenti": [132, 133, 138, 139, 172, 173, 192], "advantage_kei": [132, 133, 138, 139, 147, 148, 149], "value_target_kei": [132, 139, 147, 148, 149], "value_target": [132, 139, 147, 148, 149], "entropy_bonu": [132, 133, 138, 139], "samples_mc_entropi": [132, 133, 138, 139], "entropy_coef": [132, 133, 138, 139], "critic_coef": [132, 133, 138, 139], "loss_critic_typ": [132, 133, 138, 139], "smooth_l1": [132, 133, 134, 135, 138, 139, 140, 141, 143], "a2c": [132, 170, 192], "reli": [132, 198, 205], "1602": 132, "01783v2": 132, "advantage_diff_kei": 132, "advantage_diff": 132, "value_error": [132, 147, 148, 149], "loss_function_typ": 132, "l1": [132, 133, 134, 135, 138, 139, 140, 143, 199], "l2": [132, 133, 134, 135, 138, 139, 140, 143], "advantage_modul": 132, "tha": 132, "throughout": [132, 133, 136, 138, 139, 140, 141, 205], "essenti": [132, 133, 136, 138, 139, 140, 141, 198, 204], "clip_epsilon": 133, "threshold": 133, "bonu": [133, 138, 139], "favour": [133, 138, 139], "exploratori": [133, 138, 139], "mont": [133, 138, 139], "carlo": [133, 138, 139], "multipli": [133, 138, 139, 140, 141, 198], "loss_funct": [133, 134, 135, 139, 140, 141, 143], "actor_network": [134, 140, 141], "value_network": [134, 135, 136, 141, 147, 148, 149], "delay_actor": [134, 141], "delay_valu": [134, 135, 136, 141], "input_tensordict": [134, 135, 136], "assign": [134, 135, 198, 203], "qvalueactor": [135, 192, 199], "distributionalqvalueactor": [136, 192], "unlik": [136, 139, 203, 204, 206], "disctount": 136, "loss_modul": [137, 142, 166, 185, 186, 196, 204], "dqnloss": [137, 142, 177, 192], "ddpgloss": [137, 142, 175, 186, 192, 206], "sacloss": [137, 142, 183, 192], "value_network_update_interv": 137, "contrast": 137, "soft": [137, 141, 142], "06461": 137, "dtarg": 138, "decrement": 138, "samples_mc_kl": 138, "kl": 138, "penalti": 138, "old_polici": 138, "new_polici": 138, "adapt": 138, "old": [138, 205], "thu": 138, "distanc": [138, 143, 146, 147], "apart": 138, "proxim": [139, 171, 179], "optimis": [139, 162], "flavour": [139, 198, 206], "constrain": 139, "clipppoloss": [139, 192], "klpenppoloss": [139, 192], "regularis": 139, "06347": [139, 171, 179], "qvalue_network": [140, 141], "num_qvalue_net": [140, 141], "sub_sample_len": 140, "priotity_kei": [140, 141], "alpha_init": [140, 141], "min_alpha": [140, 141], "max_alpha": [140, 141], "fixed_alpha": [140, 141], "target_entropi": [140, 141], "auto": [140, 141], "delay_qvalu": [140, 141], "redq": [140, 180, 181, 192], "openreview": [140, 181], "ay8zfzm0tdd": [140, 181], "idea": [140, 196, 199, 204], "sac": [140, 141, 183, 184, 192], "subsampl": [140, 157, 196], "know": [140, 162, 198, 199, 206], "1801": [141, 184], "01290": [141, 184], "qvalue_network_bi": 141, "prod": 141, "n_action": 141, "redqloss": [142, 192], "999": [142, 164, 199], "epsilon": [142, 199], "prev_param": 142, "new_param": 142, "v2": [143, 152, 153, 155, 156, 171, 174, 179, 181, 184], "strict_shap": 143, "view_a": 143, "hold": [144, 145], "next_val_kei": 146, "pred_next_v": 146, "usus": 146, "mse": [146, 199], "q_valu": 146, "target_valu": 146, "n_steps_to_next": 146, "value_next_st": 146, "lmbda": [147, 149, 150, 152, 153, 154, 155, 156, 198, 199], "average_ga": 147, "value_kei": [147, 148, 149], "dimension": [147, 150, 151, 154], "1506": [147, 150, 151, 154], "02438": [147, 150, 151, 154], "exponenti": [147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 164], "propag": [147, 148, 149], "throught": [147, 148, 149], "advang": 147, "gradient_mod": 147, "sign": 147, "unused_arg": 147, "target_param": [147, 148, 149], "relev": [147, 148, 149], "value_net": [147, 148, 149], "98": [147, 148, 149], "94": [147, 149], "unpack": [147, 148, 149], "average_reward": [148, 149], "next_state_valu": [150, 151, 152, 153, 154, 155, 156, 192], "old_stat": [150, 151, 152, 154, 155], "timestep": [150, 151, 152, 153, 154, 155, 156, 199], "new_stat": [150, 151, 152, 153, 154, 155, 156], "rolling_gamma": [152, 153, 155, 156], "ti": [152, 153, 155, 156], "event": [152, 153, 155, 156], "g1": [152, 153, 155, 156], "g2": [152, 153, 155, 156], "g3": [152, 153, 155, 156], "g4": [152, 153, 155, 156], "v3": [152, 153, 155, 156], "v4": [152, 153, 155, 156, 198], "upcom": [152, 153, 155, 156, 198], "sub_traj_len": 157, "min_sub_traj_len": 157, "full": [157, 198, 199, 201, 203, 204, 205, 206], "20": [157, 198, 199, 205], "register_op": [157, 158, 159, 160, 161, 164, 165, 167, 196], "process_optim_batch": [157, 164, 196], "_process_optim_batch_hook": [157, 196], "interv": [158, 167, 199], "clear": 158, "clear_cuda": 158, "pre_optim_step": [158, 196], "counter": [159, 196], "log_pbar": [159, 160, 162, 164, 196], "progress": [159, 160, 162, 166, 196, 205], "bar": [159, 160, 162, 166, 196], "count_fram": 159, "pre_steps_log": [159, 160, 196], "lognam": 160, "r_train": 160, "logger": [160, 162, 166, 186, 190, 196], "log_reward": 160, "loss_compon": 161, "appl": 161, "omit": [161, 199], "loss_": 161, "optimizer_hook": 161, "loss_actor": 161, "record_interv": [162, 198], "record_fram": [162, 168, 198], "policy_explor": [162, 186, 198], "log_kei": 162, "suffix": 162, "underestim": 162, "suppos": [162, 196, 203, 204, 205], "set_exploration_mod": [162, 192, 198, 199, 206], "reward_evalu": 162, "video": [162, 190, 199], "reward_norm": 164, "batch_process": [164, 165, 196], "update_reward_stat": 164, "normalize_reward": 164, "make_train": [165, 192], "_process_batch_hook": [165, 196], "versatil": 166, "lossmodul": [166, 185, 186], "optim_steps_per_batch": [166, 196, 198], "epoch": 166, "clip_grad_norm": 166, "partial": [166, 206], "deriv": 166, "clamp": 166, "clip_norm": 166, "progress_bar": 166, "tqdm": [166, 198, 199], "save_trainer_interv": 166, "disk": [166, 196, 199], "10000": [166, 199], "save_trainer_fil": [166, 196], "_datacollector": [167, 172, 173, 186], "update_weights_interv": 167, "sit": [167, 199], "sync": [167, 186, 196, 198, 206], "update_weight": 167, "post_step": [167, 196], "helper": [168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 198, 206], "cfg": [168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190], "dictconfig": [168, 169, 171, 172, 173, 174, 176, 179, 181, 182, 184, 185, 186, 187, 190], "correct": [168, 199], "divid": 168, "unknowingli": 168, "1m": 168, "annealing_fram": [168, 198], "init_env_step": [168, 169, 198], "proof_environ": [169, 171, 174, 176, 179, 181, 184, 198], "sta": 169, "ot": 169, "a2closs": [170, 192], "in_keys_actor": [171, 179], "observation_kei": [171, 179, 181, 184], "actorvalueoper": [171, 179, 192, 203], "dummi": [171, 174, 176, 179, 181, 184, 205], "join": [171, 179], "actorcriticoper": [171, 179, 192], "parser_env_arg": [171, 179, 181], "make_ppo_model": [171, 192], "parser_model_args_continu": [171, 179, 181, 184], "cattensor": [171, 174, 179, 181, 184, 192, 198, 199, 201, 205], "hydra": [171, 174, 176, 179, 181, 184], "config_stor": [171, 174, 176, 179, 181, 184], "configstor": [171, 174, 176, 179, 181, 184], "dataclass": [171, 174, 176, 179, 181, 184], "halfcheetah": [171, 174, 179, 181, 184, 198], "config_field": [171, 174, 176, 179, 181, 184], "config_cl": [171, 174, 176, 179, 181, 184], "ppomodelconfig": [171, 179], "envconfig": [171, 174, 176, 179, 181, 184], "make_dataclass": [171, 174, 176, 179, 181, 184], "cls_name": [171, 174, 176, 179, 181, 184], "config_path": [171, 174, 176, 179, 181, 184], "config_nam": [171, 174, 176, 179, 181, 184], "actor_valu": [171, 179], "17": [171, 174, 179, 181, 184, 198], "actor_model_explor": [172, 173, 198], "make_env_kwarg": [172, 173], "creator": [172, 173, 188, 189, 190], "actor_net_kwarg": [174, 181, 184], "value_net_kwarg": [174, 184], "modulelist": [174, 181, 184], "ddpgcnnactor": [174, 192], "ddpgmlpactor": [174, 192], "ddpgcnnqnet": [174, 192], "ddpgmlpqnet": [174, 192], "ddpgmodelconfig": 174, "targetnetupdat": [175, 177, 180, 183, 185, 186], "discretemodelconfig": 176, "pong": [176, 205], "v5": [176, 205], "pixels_onli": [176, 198, 199, 205, 206], "210": [176, 205], "160": [176, 205], "ppoloss": [178, 192], "redqloss_deprec": 180, "qvalue_net_kwarg": [181, 184], "qvalu": [181, 184, 198, 199], "redqmodelconfig": 181, "replayargsconfig": 182, "sacmodelconfig": 184, "target_net_updat": 186, "constitu": 186, "learnt": [186, 199], "tempfil": 186, "tensorboardlogg": 186, "tensordictreplaybuff": [186, 192, 198, 199], "egreedywrapp": [186, 199], "env_proof": 186, "obs_spec": 186, "net_valu": 186, "dir": [186, 196], "gettempdir": 186, "exp_nam": [186, 198], "argpars": [187, 190], "namespac": [187, 190], "parser": [187, 190], "transformed_env_constructor": [187, 192], "env_kwarg": [188, 189, 198], "num_env_per_collector": [188, 189], "num_collector": [188, 189], "less": [188, 189, 198, 199, 206], "video_tag": 190, "norm_obs_onli": 190, "use_env_cr": 190, "custom_env_mak": 190, "custom_env": 190, "return_transformed_env": 190, "action_dim_gsd": 190, "state_dim_gsd": 190, "batch_dim": [190, 204], "obs_norm_state_dict": 190, "wheter": 190, "maker": [190, 198], "overrid": 190, "exclus": 190, "my": [191, 200], "asyncdatacollector": 192, "tensordictprioritizedreplaybuff": [192, 198, 206], "remotetensordictreplaybuff": 192, "prioritizedsampl": 192, "binarydiscretetensorspec": 192, "multonehotdiscretetensorspec": 192, "discretetensorspec": 192, "multistep": [192, 198, 199], "gymlikeenv": 192, "binarizereward": 192, "catfram": [192, 199], "centercrop": 192, "finitetensordictcheck": 192, "flattenobserv": 192, "frameskiptransform": 192, "grayscal": [192, 199, 205], "gsdenois": 192, "noopresetenv": [192, 205, 206], "observationtransform": 192, "pinmemorytransform": 192, "rewardsum": 192, "squeezetransform": 192, "stepcount": 192, "tensordictprim": 192, "unsqueezetransform": 192, "r3mtransform": 192, "viptransform": 192, "viprewardtransform": 192, "step_mdp": [192, 198, 199, 205, 206], "get_available_librari": 192, "dreamerenv": 192, "dmcontrolenv": [192, 198, 201, 205], "dmcontrolwrapp": 192, "jumanjienv": 192, "jumanjiwrapp": 192, "actorcriticwrapp": [192, 203], "is_tensordict_compat": 192, "ensure_tensordict_compat": 192, "qvaluehook": 192, "distributionalqvaluehook": 192, "duelingcnndqnet": [192, 199], "distributionaldqnnet": 192, "lstmnet": 192, "dreameractor": 192, "obsencod": 192, "obsdecod": 192, "rssmprior": 192, "rssmposterior": 192, "reset_nois": 192, "cemplann": 192, "mpcplannerbas": 192, "truncatednorm": 192, "tanhdelta": [192, 198], "onehotcategor": 192, "inv_softplu": 192, "distributionaldqnloss": [192, 199], "gae": 192, "tdlambdaestim": 192, "tdestim": 192, "generalized_advantage_estim": 192, "vec_generalized_advantage_estim": 192, "vec_td_lambda_return_estim": 192, "vec_td_lambda_advantage_estim": [192, 198, 199], "td_lambda_return_estim": 192, "td_lambda_advantage_estim": 192, "td_advantage_estim": 192, "distance_loss": 192, "hold_out_net": [192, 198], "hold_out_param": 192, "softupd": [192, 198], "hardupd": [192, 198], "checkpoint": 192, "batchsubsampl": [192, 196], "countframeslog": 192, "logreward": [192, 196], "optimizerhook": 192, "rewardnorm": 192, "selectkei": [192, 196], "updateweight": [192, 196], "clearcudacach": 192, "builder": [192, 199, 205], "sync_sync_collector": 192, "sync_async_collector": 192, "make_collector_offpolici": 192, "make_collector_onpolici": 192, "parallel_env_constructor": [192, 198], "make_sac_loss": 192, "make_a2c_loss": 192, "make_dqn_loss": 192, "make_ddpg_loss": 192, "make_target_updat": 192, "make_ppo_loss": 192, "make_redq_loss": 192, "make_dqn_actor": 192, "make_ddpg_actor": [192, 198], "make_a2c_model": 192, "make_sac_model": 192, "make_redq_model": 192, "make_replay_buff": [192, 198], "correct_for_frame_skip": 192, "get_stats_random_rollout": [192, 198], "implement_for": 192, "journei": 193, "guid": [193, 198, 199], "textbook": 193, "highlight": 193, "readi": [193, 201], "ever": 193, "cover": [193, 206], "bump": 193, "think": [193, 205], "commun": [193, 205], "benefit": 193, "submit": [193, 206], "pr": 193, "outer": [196, 198, 205], "believ": 196, "scheme": [196, 205], "substenti": 196, "_pre_steps_log_hook": 196, "_pre_optim_hook": 196, "sub_batch": 196, "_post_loss_hook": 196, "post_loss": 196, "_post_optim_hook": 196, "post_optim": 196, "_post_optim_log": 196, "post_optim_log": 196, "_post_steps_hook": 196, "_post_steps_log_hook": 196, "post_steps_log": 196, "comment": [196, 206], "categori": 196, "extens": 196, "replaybuffertrain": 196, "reserv": 196, "trainerhookbas": 196, "three": [196, 199], "logginghook": 196, "logging_hook": 196, "save_dict": 196, "some_valu": 196, "els": [196, 198, 199], "torchsnapshot": 196, "ckpt_backend": 196, "py": [196, 198, 199, 201, 202, 203, 204, 205, 206], "wherea": [196, 198, 203], "pt": [196, 199], "filepath": 196, "select_kei": 196, "save_train": 196, "load_from_fil": 196, "perfectli": 196, "intern": 197, "click": [198, 199, 201, 203, 204, 205, 206], "tutori": [198, 199, 201, 202, 203, 205, 206], "familiar": [198, 199, 205], "suffici": [198, 199], "transpar": [198, 199], "understood": [198, 199], "sota": [198, 199, 206], "rather": [198, 199], "illustr": [198, 199], "deepcopi": 198, "matplotlib": [198, 199, 205], "pyplot": [198, 199, 205], "plt": [198, 199, 205], "ornsteinuhlenbeckprocesswrapp": 198, "wish": 198, "env_librari": 198, "env_task": 198, "env_arg": 198, "elif": [198, 199], "notimplementederror": 198, "rescal": 198, "leav": 198, "make_transformed_env": 198, "reward_sc": 198, "double_to_float_list": 198, "double_to_float_inv_list": 198, "dmcontrol": 198, "downstream": 198, "_stat": 198, "leverag": [198, 205], "env_per_collector": 198, "env_creat": 198, "parallel_env": [198, 205, 206], "td_stat": 198, "_td_stat": 198, "numel": 198, "_td_stats_select": 198, "to_tensordict": [198, 199, 204], "got": [198, 204], "isfinit": 198, "sd": 198, "get_env_stat": 198, "proof_env": 198, "env_spec": 198, "actor_net": 198, "num_lay": 198, "actor_modul": [198, 206], "q_net": 198, "qnet": 198, "frequenc": 198, "make_record": 198, "recorder_obj": 198, "higher": [198, 199, 205], "likelihood": 198, "special": [198, 203, 205], "arrai": 198, "prb": 198, "buffer_s": [198, 199], "buffer_scratch_dir": 198, "adjust": 198, "device_count": [198, 199, 205], "1000000": 198, "ou": 198, "becom": [198, 205], "lr": [198, 199], "5e": 198, "weight_decai": 198, "5000": 198, "warm": 198, "tau": [198, 199], "005": [198, 199], "tmp": 198, "n_steps_forward": 198, "semin": 198, "ornstein": 198, "uhlenbeck": 198, "qnet_target": 198, "annealing_num_step": [198, 199], "9152e": 198, "3728e": 198, "00": [198, 202], "6790e": 198, "02": [198, 202], "8100e": 198, "0432e": 198, "4661e": 198, "7335e": 198, "6330e": 198, "3439e": 198, "04": [198, 202], "3564e": 198, "1885e": 198, "4405e": 198, "1127e": 198, "9993e": 198, "7058e": 198, "7317e": 198, "3022e": 198, "2335": 198, "3836": 198, "3375": 198, "3587": 198, "3461": 198, "4445": 198, "3917": 198, "3489": 198, "5510": 198, "5761": 198, "1731": 198, "4106": 198, "3918": 198, "0521": 198, "4038": 198, "4419": 198, "9479": 198, "coupl": 198, "async": [198, 206], "transmiss": 198, "3018685293": 198, "adam": [198, 199], "optimizer_actor": 198, "optimizer_qnet": 198, "total_collection_step": 198, "scheduler1": 198, "lr_schedul": 198, "cosineannealinglr": 198, "t_max": 198, "scheduler2": 198, "temporarili": 198, "henc": 198, "word": [198, 205], "Then": [198, 201], "fed": 198, "hood": 198, "metadata": [198, 205], "ommit": 198, "earli": [198, 206], "rewards_ev": 198, "norm_factor_train": 198, "collected_fram": 198, "pbar": [198, 199], "r0": 198, "filter": 198, "current_fram": [198, 199], "sampled_tensordict": 198, "backprop": 198, "next_valu": [198, 199], "value_est": 198, "value_loss": 198, "pow": [198, 199], "sampled_tensordict_actor": 198, "actor_loss": 198, "p_in": 198, "p_dest": 198, "zip": [198, 200], "copy_": 198, "b_in": 198, "b_dest": 198, "td_record": 198, "r_evalu": 198, "set_descript": [198, 199], "4f": [198, 199], "2500": 198, "186": 198, "22it": 198, "memmapstorag": 198, "ci6cei75": 198, "057220458984375": 198, "mb": [198, 202], "b5ud49y6": 198, "002384185791015625": 198, "2wehs1ui": 198, "0095367431640625": 198, "yokjx19q": 198, "uzvrxg5b": 198, "9efkvk78": 198, "ffyqjoi_": 198, "1621246337890625": 198, "g2fe1ch3": 198, "m4zmo0wi": 198, "jjhynnk5": 198, "p3el4035": 198, "019073486328125": 198, "steps_to_next_ob": [198, 199], "380ab9wf": 198, "fiw5pr_v": 198, "tmp29esy5cl": 198, "2201": 198, "3075": 198, "7570": 198, "40": 198, "88": 198, "33it": 198, "1951": 198, "60": [198, 206], "1500": 198, "119": 198, "11it": 198, "3814": 198, "15": [198, 199], "80": 198, "136": 198, "44it": 198, "5889": 198, "176": 198, "31it": 198, "8642": 198, "19": 198, "plot": [198, 199], "mention": [198, 199, 205], "figur": [198, 199, 203, 205], "label": [198, 199, 204], "legend": [198, 199], "xlabel": [198, 199], "ylabel": [198, 199], "tight_layout": [198, 199], "250": 198, "devid": 198, "100000": [198, 199], "batch_size_traj": 198, "simplic": [198, 203], "28": 198, "td_lambda": 198, "95": [198, 199], "roughli": [198, 206], "four": 198, "big": [198, 199, 205], "inde": [198, 204], "revert": 198, "compli": [198, 204], "incompat": [198, 204], "bit": 198, "rand_idx": 198, "fu6ymepo": 198, "1444091796875": 198, "rqzsknyo": 198, "0476837158203125": 198, "ga30efrf": 198, "000762939453125": 198, "lo6narek": 198, "rzgtlyth": 198, "24249267578125": 198, "5kfi896a": 198, "962porfm": 198, "19073486328125": 198, "aqo053tu": 198, "3814697265625": 198, "v1hbdooa": 198, "tmphowgulfx": 198, "titl": [198, 199], "labmda": 198, "text": 198, "minut": [198, 199, 201, 203, 204, 205, 206], "483": [198, 202], "coding_ddpg": [198, 202], "jupyt": [198, 199, 200, 201, 203, 204, 205, 206], "ipynb": [198, 199, 201, 203, 204, 205, 206], "galleri": [198, 199, 200, 201, 203, 204, 205, 206], "sphinx": [198, 199, 200, 201, 203, 204, 205, 206], "cartpol": [199, 205], "tabl": 199, "pick": 199, "highest": 199, "discretiz": 199, "amort": 199, "seen": 199, "past": 199, "esitm": 199, "ipython": 199, "get_funct": [199, 203], "is_notebook": 199, "shell": 199, "get_ipython": 199, "__class__": 199, "__name__": 199, "zmqinteractiveshel": 199, "qtconsol": 199, "terminalinteractiveshel": 199, "nameerror": 199, "interpret": 199, "hyperparam": 199, "hopefulli": 199, "sentit": 199, "variat": 199, "2e": 199, "harder": [199, 206], "restrict": [199, 205], "n_optim": 199, "n_worker": 199, "smooth": 199, "loos": 199, "notic": 199, "eps_greedy_v": 199, "eps_greedy_val_env": 199, "05": [199, 202], "predefin": 199, "init_bia": 199, "500000": 199, "techin": 199, "dummy_env": 199, "9927811026573181": 199, "07609366625547409": 199, "pole": 199, "un": 199, "actuat": 199, "cart": 199, "frictionless": 199, "upright": [199, 205], "balanc": [199, 205], "pixels_sav": 199, "eval_rollout": 199, "imageio": 199, "mimwrit": 199, "cartpole_random": 199, "mp4": 199, "fp": 199, "480": 199, "360": 199, "trick": 199, "num_ob": 199, "num_act": 199, "make_model": 199, "output_s": 199, "could": [199, 204, 205], "unflatten_kei": 199, "fairli": 199, "params_target": 199, "actor_explor": 199, "eps_init": 199, "eps_end": 199, "params_flat": 199, "flatten_kei": 199, "params_target_flat": 199, "600": 199, "bootstrap": 199, "value_next_step": 199, "not_termin": 199, "significantli": 199, "data_collector": 199, "traj_lengths_ev": 199, "grad_val": 199, "traj_length": 199, "mavg": 199, "traj_count": 199, "prev_traj_count": 199, "enough": 199, "send": [199, 204, 206], "sampled_data": 199, "sampled_data_out": 199, "tdstep": 199, "exp_valu": 199, "mse_loss": 199, "gv": 199, "p": [199, 203], "sqrt": 199, "clip_grad_value_": 199, "p1": 199, "p2": 199, "set_": 199, "clear_output": 199, "gcf": 199, "clf": 199, "figsiz": 199, "subplot": [199, 205], "traj": 199, "savefig": 199, "dqn_td0": 199, "png": 199, "traceback": [199, 203, 206], "__w": [199, 203, 206], "doc": [199, 203, 206], "coding_dqn": [199, 202], "382": 199, "indexerror": 199, "imshow": [199, 205], "imread": 199, "axi": 199, "traj_lengths_train": 199, "saved_results_td0": 199, "entir": 199, "capac": 199, "smooth_l1_loss": 199, "clip_grad_norm_": 199, "dqn_tdlambda": 199, "saved_results_tdlambda": 199, "fewer": 199, "load_td0": 199, "load_tdlambda": 199, "frames_td0": 199, "frames_tdlambda": 199, "evals_td0": 199, "evals_tdlambda": 199, "mavgs_td0": 199, "mavgs_tdlambda": 199, "losses_td0": 199, "losses_tdlambda": 199, "values_td0": 199, "values_tdlambda": 199, "grad_vals_td0": 199, "grad_vals_tdlambda": 199, "traj_lengths_td0": 199, "traj_lengths_tdlambda": 199, "traj_count_td0": 199, "traj_count_tdlambda": 199, "td0": 199, "goe": [199, 205], "greatli": 199, "nth": 199, "noticebli": 199, "myopic": 199, "collectorclass": 199, "till": 199, "worst": 199, "accuraci": 199, "fanci": 199, "474": [199, 202], "tutorials_python": 200, "tutorials_jupyt": 200, "distinct": 201, "humanoid": [201, 205], "walk": [201, 205], "env1": 201, "env1_obs_kei": 201, "observation_stand": 201, "env2": 201, "env2_obs_kei": 201, "observation_walk": 201, "tdreset1": 201, "tdreset2": 201, "tdreset": 201, "67": 201, "backbon": [201, 206], "policy_common": 201, "policy_stand": 201, "policy_walk": 201, "seq": 201, "21": 201, "But": 201, "env1_mak": 201, "env2_mak": 201, "_single_task": 201, "td_rollout": 201, "shown": 201, "396": [201, 202], "multi_task": [201, 202], "31": 202, "275": 202, "torch_env": [202, 205], "985": [202, 205], "torchrl_demo": [202, 206], "876": [202, 206], "031": [202, 203], "tensordict_tutori": [202, 204], "030": [202, 204], "recommand": 203, "conveni": [203, 204], "a_out": 203, "mergelinear": 203, "in_1": 203, "in_2": 203, "linear_1": 203, "linear_2": 203, "x_1": 203, "x_2": 203, "multiheadlinear": 203, "out_1": 203, "out_2": 203, "splitlinear": 203, "output_1": 203, "output_2": 203, "split_and_merge_linear": 203, "make_functional_with_buff": 203, "replica": 203, "params_expand": [203, 206], "buffers_expand": 203, "num_model": 203, "group": 203, "zeros_lik": 203, "result_td": 203, "ok": 203, "conflict": 203, "wire": 203, "tensordictsequentialand": 203, "block": 203, "demonstr": [203, 205], "architectur": 203, "vaswani": 203, "2017": 203, "asid": 203, "src": 203, "ffn": 203, "skiplayernorm": 203, "splithead": 203, "tokenstoqkv": 203, "339": 203, "modulenotfounderror": 203, "attentionblocktensordict": 203, "connect": 203, "moreov": 203, "complic": [203, 204, 205], "to_nam": 203, "from_nam": 203, "to_dim": 203, "to_len": 203, "from_dim": 203, "latent_dim": 203, "num_head": 203, "x_out": 203, "attn": 203, "thank": 203, "transformerblockencodertensordict": 203, "transformerblockdecodertensordict": 203, "token": 203, "extract": 203, "x_from": 203, "x_to": 203, "transformerencodertensordict": 203, "num_block": 203, "transformerdecodertensordict": 203, "transformertensordict": 203, "from_len": 203, "x_encod": 203, "x_decod": 203, "ve": 203, "operar": 203, "td_token": 203, "tdtransform": 203, "t1": 203, "t2": 203, "t3": 203, "t4": 203, "minim": 203, "introduc": [203, 204], "margin": 203, "deal": 204, "furthermor": 204, "awai": 204, "organ": 204, "power": 204, "segment": 204, "get_data_a": 204, "get_data_b": 204, "reusabl": 204, "lot": 204, "rewriten": 204, "modal": 204, "get_data": 204, "reus": 204, "argu": 204, "dictdataset": 204, "__getitem__": 204, "collat": 204, "collate_dict_fn": 204, "dict_list": 204, "final_dict": 204, "single_dict": 204, "simpler": 204, "collate_tensordict_fn": 204, "furtherdown": 204, "_permutedtensordict": 204, "_unsqueezedtensordict": 204, "_viewedtensordict": 204, "datastructur": 204, "explicitli": 204, "caramba": 204, "algebra": 204, "foo": [204, 205], "multidimension": 204, "insid": [204, 205], "violat": 204, "err": 204, "resp": 204, "among": 204, "tensordict_clon": 204, "tensodict": 204, "tuple_index": 204, "new_tensordict": 204, "get_sub_tensordict": 204, "subtensordict": 204, "pointer": 204, "subtd": 204, "td2": 204, "booltensor": 204, "fashion": 204, "clonned_tensordict": 204, "staked_tensordict": 204, "isinst": 204, "unbind": 204, "list_tensordict": 204, "comeback": 204, "permut": [204, 205, 206], "unsqueezed_tensordict": 204, "role": 205, "supervis": 205, "unsupervis": 205, "rom": 205, "licens": 205, "pygam": 205, "unifi": 205, "_build_env": 205, "sphinx_gallery_start_ignor": 205, "warn": 205, "filterwarn": 205, "sphinx_gallery_end_ignor": 205, "adventur": 205, "ram": 205, "airraid": 205, "alien": 205, "amidar": 205, "assault": 205, "happen": 205, "continuousbox": 205, "7063": 205, "pack": 205, "brief": 205, "exectut": 205, "reproduct": 205, "did": 205, "shortcut": 205, "tensordict_tprim": 205, "tensordict_rollout": [205, 206], "quickli": 205, "axesimag": 205, "0x7fa8056358a0": 205, "inconsist": 205, "supplementari": 205, "again": 205, "acrobot": 205, "swingup": 205, "swingup_spars": 205, "ball_in_cup": 205, "catch": 205, "balance_spars": 205, "three_pol": 205, "two_pol": 205, "finger": 205, "turn_easi": 205, "turn_hard": 205, "fish": 205, "swim": 205, "hopper": 205, "hop": 205, "run_pure_st": 205, "bring_bal": 205, "bring_peg": 205, "insert_bal": 205, "insert_peg": 205, "point_mass": 205, "reacher": 205, "swimmer": 205, "swimmer6": 205, "swimmer15": 205, "walker": 205, "dog": 205, "fetch": 205, "trot": 205, "humanoid_cmu": 205, "lqr": 205, "lqr_2_1": 205, "lqr_6_2": 205, "quadrup": 205, "escap": 205, "stacker": 205, "stack_2": 205, "stack_4": 205, "240": [205, 206], "320": 205, "env_transform": 205, "wrapper1": 205, "wrapper2": 205, "obviou": 205, "truth": 205, "extern": 205, "env0": 205, "env_transformed_bi": 205, "stanc": 205, "transformeddistribut": 205, "base_dist": 205, "unboundeddiscretetensorspec": 205, "concat": 205, "mofidi": 205, "_inv_apply_transform": 205, "_apply_transform": 205, "transformedenviron": 205, "moderet": 205, "computation": 205, "legitim": 205, "side": 205, "incom": 205, "amongst": 205, "has_cuda": 205, "simplest": 205, "wor": 205, "convention": 205, "scope": 205, "difficulti": 205, "markovian": 205, "reconstruct": 205, "3288080526": 205, "sometim": 205, "constain": 205, "sleep": 205, "uuid": 205, "uuid1": 205, "bar_": 205, "get_someth": 205, "bar_8056fef2": 205, "8c25": 205, "11ed": 205, "9668": 205, "0242ac120002": 205, "aargh": 205, "ourselv": 205, "foo_list": 205, "vec_env": 205, "_dispatch_caller_parallel": 205, "0x7fa7fcd79180": 205, "bar_846e6746": 205, "8c3d": 205, "bar_844e71a2": 205, "af66": 205, "bar_8461b42": 205, "a6a6": 205, "121": 205, "122": 205, "parallen": 205, "carefulli": 205, "commonli": 205, "approxim": 205, "particularili": 205, "evolv": 205, "caution": 205, "previous": 205, "steadi": 205, "approx": 205, "7809": 205, "2469": 205, "1101": 205, "3817": 205, "4560": 205, "4618": 205, "_extra_st": 205, "observation_count": 205, "observation_ssq": 205, "observation_sum": 205, "2700": 205, "0773": 205, "2364": 205, "9548": 205, "9348": 205, "9259": 205, "dispach": 205, "small": 205, "absor": 205, "18": 205, "demo": 206, "icml": 206, "dai": 206, "overview": 206, "vmoen": 206, "fb": 206, "question": 206, "team": 206, "decid": 206, "invest": 206, "platform": 206, "media": 206, "truli": 206, "rest": 206, "predominantli": 206, "wandb": 206, "tensorboard": 206, "tensordict1": 206, "tensordict2": 206, "tensordict_sampl": 206, "_sum_tre": 206, "06984968483448029": 206, "28791671991348267": 206, "gym_env": 206, "0000": 206, "366": 206, "431": 206, "tensordict_reset": 206, "469": 206, "out_tensordict": 206, "681": 206, "2004": 206, "valueerror": 206, "myenv": 206, "othertransform": 206, "squash": 206, "backbone_modul": 206, "value_modul": 206, "tensordict_exp": 206, "base_modul": 206, "is_don": 206, "tensordicts_prealloc": 206, "tensordicts_stack": 206, "disclaim": 206, "concatmodul": 206, "loss_td": 206, "bug": 206, "year": 206, "roadmap": 206, "compris": 206, "hierarch": 206, "contributor": 206, "curiou": 206, "feedback": 206, "nascent": 206, "pypi": 206}, "objects": {"torchrl._utils": [[10, 0, 1, "", "implement_for"]], "torchrl.collectors": [[11, 0, 1, "", "MultiSyncDataCollector"], [12, 0, 1, "", "MultiaSyncDataCollector"], [13, 0, 1, "", "SyncDataCollector"], [14, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.MultiSyncDataCollector": [[11, 1, 1, "", "load_state_dict"], [11, 1, 1, "", "reset"], [11, 1, 1, "", "set_seed"], [11, 1, 1, "", "shutdown"], [11, 1, 1, "", "state_dict"], [11, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.MultiaSyncDataCollector": [[12, 1, 1, "", "load_state_dict"], [12, 1, 1, "", "reset"], [12, 1, 1, "", "set_seed"], [12, 1, 1, "", "shutdown"], [12, 1, 1, "", "state_dict"], [12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.SyncDataCollector": [[13, 1, 1, "", "iterator"], [13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "rollout"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.aSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[15, 2, 1, "", "split_trajectories"]], "torchrl.data": [[16, 0, 1, "", "BinaryDiscreteTensorSpec"], [17, 0, 1, "", "BoundedTensorSpec"], [18, 0, 1, "", "CompositeSpec"], [19, 0, 1, "", "DiscreteTensorSpec"], [20, 0, 1, "", "MultOneHotDiscreteTensorSpec"], [21, 0, 1, "", "MultiStep"], [22, 0, 1, "", "OneHotDiscreteTensorSpec"], [23, 0, 1, "", "PrioritizedReplayBuffer"], [24, 0, 1, "", "ReplayBuffer"], [25, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [26, 0, 1, "", "TensorDictReplayBuffer"], [27, 0, 1, "", "TensorSpec"], [28, 0, 1, "", "UnboundedContinuousTensorSpec"]], "torchrl.data.BinaryDiscreteTensorSpec": [[16, 1, 1, "", "assert_is_in"], [16, 1, 1, "", "encode"], [16, 1, 1, "", "index"], [16, 1, 1, "", "is_in"], [16, 1, 1, "", "project"], [16, 1, 1, "", "rand"], [16, 1, 1, "", "to_numpy"], [16, 1, 1, "", "type_check"], [16, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[17, 1, 1, "", "assert_is_in"], [17, 1, 1, "", "encode"], [17, 1, 1, "", "index"], [17, 1, 1, "", "is_in"], [17, 1, 1, "", "project"], [17, 1, 1, "", "rand"], [17, 1, 1, "", "to_numpy"], [17, 1, 1, "", "type_check"], [17, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[18, 1, 1, "", "assert_is_in"], [18, 1, 1, "", "encode"], [18, 1, 1, "", "index"], [18, 1, 1, "", "is_in"], [18, 1, 1, "", "keys"], [18, 1, 1, "", "project"], [18, 1, 1, "", "rand"], [18, 1, 1, "", "to_numpy"], [18, 1, 1, "", "type_check"], [18, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[19, 1, 1, "", "assert_is_in"], [19, 1, 1, "", "encode"], [19, 1, 1, "", "index"], [19, 1, 1, "", "is_in"], [19, 1, 1, "", "project"], [19, 1, 1, "", "rand"], [19, 1, 1, "", "to_numpy"], [19, 1, 1, "", "type_check"], [19, 1, 1, "", "zero"]], "torchrl.data.MultOneHotDiscreteTensorSpec": [[20, 1, 1, "", "assert_is_in"], [20, 1, 1, "", "encode"], [20, 1, 1, "", "index"], [20, 1, 1, "", "is_in"], [20, 1, 1, "", "project"], [20, 1, 1, "", "rand"], [20, 1, 1, "", "to_numpy"], [20, 1, 1, "", "type_check"], [20, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[21, 1, 1, "", "add_module"], [21, 1, 1, "", "apply"], [21, 1, 1, "", "bfloat16"], [21, 1, 1, "", "buffers"], [21, 1, 1, "", "children"], [21, 1, 1, "", "cpu"], [21, 1, 1, "", "cuda"], [21, 1, 1, "", "double"], [21, 1, 1, "", "eval"], [21, 1, 1, "", "extra_repr"], [21, 1, 1, "", "float"], [21, 1, 1, "", "forward"], [21, 1, 1, "", "get_buffer"], [21, 1, 1, "", "get_extra_state"], [21, 1, 1, "", "get_parameter"], [21, 1, 1, "", "get_submodule"], [21, 1, 1, "", "half"], [21, 1, 1, "", "ipu"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "modules"], [21, 1, 1, "", "named_buffers"], [21, 1, 1, "", "named_children"], [21, 1, 1, "", "named_modules"], [21, 1, 1, "", "named_parameters"], [21, 1, 1, "", "parameters"], [21, 1, 1, "", "register_backward_hook"], [21, 1, 1, "", "register_buffer"], [21, 1, 1, "", "register_forward_hook"], [21, 1, 1, "", "register_forward_pre_hook"], [21, 1, 1, "", "register_full_backward_hook"], [21, 1, 1, "", "register_load_state_dict_post_hook"], [21, 1, 1, "", "register_module"], [21, 1, 1, "", "register_parameter"], [21, 1, 1, "", "requires_grad_"], [21, 1, 1, "", "set_extra_state"], [21, 1, 1, "", "share_memory"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "to"], [21, 1, 1, "", "to_empty"], [21, 1, 1, "", "train"], [21, 1, 1, "", "type"], [21, 1, 1, "", "xpu"], [21, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[22, 1, 1, "", "assert_is_in"], [22, 1, 1, "", "encode"], [22, 1, 1, "", "index"], [22, 1, 1, "", "is_in"], [22, 1, 1, "", "project"], [22, 1, 1, "", "rand"], [22, 1, 1, "", "to_numpy"], [22, 1, 1, "", "type_check"], [22, 1, 1, "", "zero"]], "torchrl.data.PrioritizedReplayBuffer": [[23, 1, 1, "", "add"], [23, 1, 1, "", "extend"], [23, 1, 1, "", "sample"], [23, 1, 1, "", "update_priority"]], "torchrl.data.ReplayBuffer": [[24, 1, 1, "", "add"], [24, 1, 1, "", "extend"], [24, 1, 1, "", "sample"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[25, 1, 1, "", "add"], [25, 1, 1, "", "extend"], [25, 1, 1, "", "sample"], [25, 1, 1, "", "update_priority"]], "torchrl.data.TensorDictReplayBuffer": [[26, 1, 1, "", "add"], [26, 1, 1, "", "extend"], [26, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.UnboundedContinuousTensorSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "zero"]], "torchrl.data.replay_buffers.rb_prototype": [[29, 0, 1, "", "RemoteTensorDictReplayBuffer"], [30, 0, 1, "", "ReplayBuffer"], [31, 0, 1, "", "TensorDictReplayBuffer"]], "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer": [[29, 1, 1, "", "add"], [29, 1, 1, "", "append_transform"], [29, 1, 1, "", "extend"], [29, 1, 1, "", "insert_transform"], [29, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer": [[30, 1, 1, "", "add"], [30, 1, 1, "", "append_transform"], [30, 1, 1, "", "extend"], [30, 1, 1, "", "insert_transform"], [30, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer": [[31, 1, 1, "", "add"], [31, 1, 1, "", "append_transform"], [31, 1, 1, "", "extend"], [31, 1, 1, "", "insert_transform"], [31, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.samplers": [[32, 0, 1, "", "PrioritizedSampler"], [33, 0, 1, "", "RandomSampler"], [34, 0, 1, "", "Sampler"]], "torchrl.data.replay_buffers.samplers.PrioritizedSampler": [[32, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.storages": [[35, 0, 1, "", "LazyMemmapStorage"], [36, 0, 1, "", "LazyTensorStorage"], [37, 0, 1, "", "ListStorage"], [38, 0, 1, "", "Storage"]], "torchrl.data.replay_buffers.storages.LazyMemmapStorage": [[35, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.LazyTensorStorage": [[36, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.ListStorage": [[37, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.storages.Storage": [[38, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.writers": [[39, 0, 1, "", "RoundRobinWriter"], [40, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.writers.RoundRobinWriter": [[39, 1, 1, "", "add"], [39, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.writers.Writer": [[40, 1, 1, "", "add"], [40, 1, 1, "", "extend"]], "torchrl.envs": [[41, 0, 1, "", "EnvBase"], [42, 0, 1, "", "GymLikeEnv"], [43, 2, 1, "", "ModelBasedEnvBase"], [44, 0, 1, "", "ParallelEnv"], [45, 0, 1, "", "SerialEnv"], [43, 1, 1, "", "rand_step"], [43, 1, 1, "", "reset"], [43, 1, 1, "", "rollout"], [43, 1, 1, "", "set_seed"], [43, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[41, 1, 1, "", "add_module"], [41, 1, 1, "", "apply"], [41, 3, 1, "", "batch_locked"], [41, 1, 1, "", "bfloat16"], [41, 1, 1, "", "buffers"], [41, 1, 1, "", "children"], [41, 1, 1, "", "cpu"], [41, 1, 1, "", "cuda"], [41, 1, 1, "", "double"], [41, 1, 1, "", "eval"], [41, 1, 1, "", "extra_repr"], [41, 1, 1, "", "fake_tensordict"], [41, 1, 1, "", "float"], [41, 1, 1, "", "forward"], [41, 1, 1, "", "get_buffer"], [41, 1, 1, "", "get_extra_state"], [41, 1, 1, "", "get_parameter"], [41, 1, 1, "", "get_submodule"], [41, 1, 1, "", "half"], [41, 1, 1, "", "ipu"], [41, 1, 1, "", "load_state_dict"], [41, 1, 1, "", "modules"], [41, 1, 1, "", "named_buffers"], [41, 1, 1, "", "named_children"], [41, 1, 1, "", "named_modules"], [41, 1, 1, "", "named_parameters"], [41, 1, 1, "", "parameters"], [41, 1, 1, "id0", "rand_step"], [41, 1, 1, "", "register_backward_hook"], [41, 1, 1, "", "register_buffer"], [41, 1, 1, "", "register_forward_hook"], [41, 1, 1, "", "register_forward_pre_hook"], [41, 1, 1, "", "register_full_backward_hook"], [41, 1, 1, "", "register_load_state_dict_post_hook"], [41, 1, 1, "", "register_module"], [41, 1, 1, "", "register_parameter"], [41, 1, 1, "", "requires_grad_"], [41, 1, 1, "id1", "reset"], [41, 1, 1, "id2", "rollout"], [41, 1, 1, "", "set_extra_state"], [41, 1, 1, "id3", "set_seed"], [41, 1, 1, "", "share_memory"], [41, 3, 1, "", "specs"], [41, 1, 1, "", "state_dict"], [41, 1, 1, "id4", "step"], [41, 1, 1, "", "to"], [41, 1, 1, "", "to_empty"], [41, 1, 1, "", "train"], [41, 1, 1, "", "type"], [41, 1, 1, "", "xpu"], [41, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[42, 1, 1, "", "add_module"], [42, 1, 1, "", "apply"], [42, 3, 1, "", "batch_locked"], [42, 1, 1, "", "bfloat16"], [42, 1, 1, "", "buffers"], [42, 1, 1, "", "children"], [42, 1, 1, "", "close"], [42, 1, 1, "", "cpu"], [42, 1, 1, "", "cuda"], [42, 1, 1, "", "double"], [42, 1, 1, "", "eval"], [42, 1, 1, "", "extra_repr"], [42, 1, 1, "", "fake_tensordict"], [42, 1, 1, "", "float"], [42, 1, 1, "", "forward"], [42, 1, 1, "", "get_buffer"], [42, 1, 1, "", "get_extra_state"], [42, 1, 1, "", "get_parameter"], [42, 1, 1, "", "get_submodule"], [42, 1, 1, "", "half"], [42, 1, 1, "", "ipu"], [42, 1, 1, "", "load_state_dict"], [42, 1, 1, "", "modules"], [42, 1, 1, "", "named_buffers"], [42, 1, 1, "", "named_children"], [42, 1, 1, "", "named_modules"], [42, 1, 1, "", "named_parameters"], [42, 1, 1, "", "parameters"], [42, 1, 1, "", "rand_step"], [42, 1, 1, "", "read_action"], [42, 1, 1, "", "read_done"], [42, 1, 1, "", "read_obs"], [42, 1, 1, "", "read_reward"], [42, 1, 1, "", "register_backward_hook"], [42, 1, 1, "", "register_buffer"], [42, 1, 1, "", "register_forward_hook"], [42, 1, 1, "", "register_forward_pre_hook"], [42, 1, 1, "", "register_full_backward_hook"], [42, 1, 1, "", "register_load_state_dict_post_hook"], [42, 1, 1, "", "register_module"], [42, 1, 1, "", "register_parameter"], [42, 1, 1, "", "requires_grad_"], [42, 1, 1, "", "reset"], [42, 1, 1, "", "rollout"], [42, 1, 1, "", "set_extra_state"], [42, 1, 1, "", "set_info_dict_reader"], [42, 1, 1, "", "set_seed"], [42, 1, 1, "", "share_memory"], [42, 3, 1, "", "specs"], [42, 1, 1, "", "state_dict"], [42, 1, 1, "", "step"], [42, 1, 1, "", "to"], [42, 1, 1, "", "to_empty"], [42, 1, 1, "", "train"], [42, 1, 1, "", "type"], [42, 1, 1, "", "xpu"], [42, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[44, 1, 1, "", "add_module"], [44, 1, 1, "", "apply"], [44, 3, 1, "", "batch_locked"], [44, 1, 1, "", "bfloat16"], [44, 1, 1, "", "buffers"], [44, 1, 1, "", "children"], [44, 1, 1, "", "cpu"], [44, 1, 1, "", "cuda"], [44, 1, 1, "", "double"], [44, 1, 1, "", "eval"], [44, 1, 1, "", "extra_repr"], [44, 1, 1, "", "fake_tensordict"], [44, 1, 1, "", "float"], [44, 1, 1, "", "forward"], [44, 1, 1, "", "get_buffer"], [44, 1, 1, "", "get_extra_state"], [44, 1, 1, "", "get_parameter"], [44, 1, 1, "", "get_submodule"], [44, 1, 1, "", "half"], [44, 1, 1, "", "ipu"], [44, 1, 1, "", "load_state_dict"], [44, 1, 1, "", "modules"], [44, 1, 1, "", "named_buffers"], [44, 1, 1, "", "named_children"], [44, 1, 1, "", "named_modules"], [44, 1, 1, "", "named_parameters"], [44, 1, 1, "", "parameters"], [44, 1, 1, "", "rand_step"], [44, 1, 1, "", "register_backward_hook"], [44, 1, 1, "", "register_buffer"], [44, 1, 1, "", "register_forward_hook"], [44, 1, 1, "", "register_forward_pre_hook"], [44, 1, 1, "", "register_full_backward_hook"], [44, 1, 1, "", "register_load_state_dict_post_hook"], [44, 1, 1, "", "register_module"], [44, 1, 1, "", "register_parameter"], [44, 1, 1, "", "requires_grad_"], [44, 1, 1, "", "reset"], [44, 1, 1, "", "rollout"], [44, 1, 1, "", "set_extra_state"], [44, 1, 1, "", "set_seed"], [44, 1, 1, "", "share_memory"], [44, 3, 1, "", "specs"], [44, 1, 1, "", "state_dict"], [44, 1, 1, "", "step"], [44, 1, 1, "", "to"], [44, 1, 1, "", "to_empty"], [44, 1, 1, "", "train"], [44, 1, 1, "", "type"], [44, 1, 1, "", "update_kwargs"], [44, 1, 1, "", "xpu"], [44, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[45, 1, 1, "", "add_module"], [45, 1, 1, "", "apply"], [45, 3, 1, "", "batch_locked"], [45, 1, 1, "", "bfloat16"], [45, 1, 1, "", "buffers"], [45, 1, 1, "", "children"], [45, 1, 1, "", "cpu"], [45, 1, 1, "", "cuda"], [45, 1, 1, "", "double"], [45, 1, 1, "", "eval"], [45, 1, 1, "", "extra_repr"], [45, 1, 1, "", "fake_tensordict"], [45, 1, 1, "", "float"], [45, 1, 1, "", "forward"], [45, 1, 1, "", "get_buffer"], [45, 1, 1, "", "get_extra_state"], [45, 1, 1, "", "get_parameter"], [45, 1, 1, "", "get_submodule"], [45, 1, 1, "", "half"], [45, 1, 1, "", "ipu"], [45, 1, 1, "", "load_state_dict"], [45, 1, 1, "", "modules"], [45, 1, 1, "", "named_buffers"], [45, 1, 1, "", "named_children"], [45, 1, 1, "", "named_modules"], [45, 1, 1, "", "named_parameters"], [45, 1, 1, "", "parameters"], [45, 1, 1, "", "rand_step"], [45, 1, 1, "", "register_backward_hook"], [45, 1, 1, "", "register_buffer"], [45, 1, 1, "", "register_forward_hook"], [45, 1, 1, "", "register_forward_pre_hook"], [45, 1, 1, "", "register_full_backward_hook"], [45, 1, 1, "", "register_load_state_dict_post_hook"], [45, 1, 1, "", "register_module"], [45, 1, 1, "", "register_parameter"], [45, 1, 1, "", "requires_grad_"], [45, 1, 1, "", "reset"], [45, 1, 1, "", "rollout"], [45, 1, 1, "", "set_extra_state"], [45, 1, 1, "", "set_seed"], [45, 1, 1, "", "share_memory"], [45, 3, 1, "", "specs"], [45, 1, 1, "", "state_dict"], [45, 1, 1, "", "step"], [45, 1, 1, "", "to"], [45, 1, 1, "", "to_empty"], [45, 1, 1, "", "train"], [45, 1, 1, "", "type"], [45, 1, 1, "", "update_kwargs"], [45, 1, 1, "", "xpu"], [45, 1, 1, "", "zero_grad"]], "torchrl.envs.libs.dm_control": [[46, 2, 1, "", "DMControlEnv"], [47, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[48, 2, 1, "", "GymEnv"], [49, 2, 1, "", "GymWrapper"]], "torchrl.envs.libs.habitat": [[50, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[51, 2, 1, "", "JumanjiEnv"], [52, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.model_based.dreamer": [[53, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[54, 0, 1, "", "BinarizeReward"], [55, 0, 1, "", "CatFrames"], [56, 0, 1, "", "CatTensors"], [57, 0, 1, "", "CenterCrop"], [58, 0, 1, "", "Compose"], [59, 0, 1, "", "DoubleToFloat"], [60, 0, 1, "", "FiniteTensorDictCheck"], [61, 0, 1, "", "FlattenObservation"], [62, 0, 1, "", "FrameSkipTransform"], [63, 0, 1, "", "GrayScale"], [64, 0, 1, "", "NoopResetEnv"], [65, 0, 1, "", "ObservationNorm"], [66, 0, 1, "", "ObservationTransform"], [67, 0, 1, "", "PinMemoryTransform"], [68, 0, 1, "", "R3MTransform"], [69, 0, 1, "", "Resize"], [70, 0, 1, "", "RewardClipping"], [71, 0, 1, "", "RewardScaling"], [72, 0, 1, "", "RewardSum"], [73, 0, 1, "", "SqueezeTransform"], [74, 0, 1, "", "StepCounter"], [75, 0, 1, "", "TensorDictPrimer"], [76, 0, 1, "", "ToTensorImage"], [77, 0, 1, "", "Transform"], [78, 0, 1, "", "TransformedEnv"], [79, 0, 1, "", "UnsqueezeTransform"], [80, 0, 1, "", "VIPRewardTransform"], [81, 0, 1, "", "VIPTransform"], [82, 0, 1, "", "VecNorm"], [83, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[54, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[55, 1, 1, "", "reset"], [55, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[56, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[57, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[58, 1, 1, "", "forward"], [58, 1, 1, "", "reset"], [58, 1, 1, "", "to"], [58, 1, 1, "", "transform_input_spec"], [58, 1, 1, "", "transform_observation_spec"], [58, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DoubleToFloat": [[59, 1, 1, "", "transform_input_spec"], [59, 1, 1, "", "transform_observation_spec"], [59, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.FlattenObservation": [[61, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.GrayScale": [[63, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[64, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[65, 1, 1, "", "init_stats"], [65, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.R3MTransform": [[68, 1, 1, "", "forward"], [68, 1, 1, "", "reset"], [68, 1, 1, "", "to"], [68, 1, 1, "", "transform_input_spec"], [68, 1, 1, "", "transform_observation_spec"], [68, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Resize": [[69, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.RewardClipping": [[70, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[71, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[72, 1, 1, "", "reset"], [72, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SqueezeTransform": [[73, 1, 1, "", "forward"]], "torchrl.envs.transforms.StepCounter": [[74, 1, 1, "", "reset"], [74, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[75, 1, 1, "", "reset"], [75, 1, 1, "", "to"], [75, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[76, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[77, 1, 1, "", "forward"], [77, 1, 1, "", "reset"], [77, 1, 1, "", "transform_input_spec"], [77, 1, 1, "", "transform_observation_spec"], [77, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[78, 3, 1, "", "action_spec"], [78, 3, 1, "", "batch_locked"], [78, 1, 1, "", "eval"], [78, 3, 1, "", "input_spec"], [78, 1, 1, "", "load_state_dict"], [78, 3, 1, "", "observation_spec"], [78, 3, 1, "", "reward_spec"], [78, 1, 1, "", "set_seed"], [78, 1, 1, "", "state_dict"], [78, 1, 1, "", "to"], [78, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[79, 1, 1, "", "forward"], [79, 1, 1, "", "transform_input_spec"], [79, 1, 1, "", "transform_observation_spec"], [79, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[80, 1, 1, "", "forward"], [80, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[81, 1, 1, "", "forward"], [81, 1, 1, "", "reset"], [81, 1, 1, "", "to"], [81, 1, 1, "", "transform_input_spec"], [81, 1, 1, "", "transform_observation_spec"], [81, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VecNorm": [[82, 1, 1, "", "build_td_for_shared_vecnorm"], [82, 1, 1, "", "get_extra_state"], [82, 1, 1, "", "set_extra_state"], [82, 1, 1, "", "to_observation_norm"]], "torchrl.envs.transforms.gSDENoise": [[83, 1, 1, "", "reset"]], "torchrl.envs.utils": [[84, 2, 1, "", "check_env_specs"], [85, 2, 1, "", "exploration_mode"], [86, 2, 1, "", "get_available_libraries"], [87, 2, 1, "", "set_exploration_mode"], [88, 2, 1, "", "step_mdp"]], "torchrl.modules": [[89, 0, 1, "", "Actor"], [90, 0, 1, "", "ActorCriticOperator"], [91, 0, 1, "", "ActorCriticWrapper"], [92, 0, 1, "", "ActorValueOperator"], [93, 0, 1, "", "CEMPlanner"], [94, 0, 1, "", "ConvNet"], [95, 0, 1, "", "DdpgCnnActor"], [96, 0, 1, "", "DdpgCnnQNet"], [97, 0, 1, "", "DdpgMlpActor"], [98, 0, 1, "", "DdpgMlpQNet"], [99, 0, 1, "", "Delta"], [100, 0, 1, "", "DistributionalDQNnet"], [101, 0, 1, "", "DistributionalQValueActor"], [102, 0, 1, "", "DreamerActor"], [103, 0, 1, "", "DuelingCnnDQNet"], [104, 0, 1, "", "LSTMNet"], [105, 0, 1, "", "MLP"], [106, 0, 1, "", "MPCPlannerBase"], [107, 0, 1, "", "NoisyLazyLinear"], [108, 0, 1, "", "NoisyLinear"], [109, 0, 1, "", "ObsDecoder"], [110, 0, 1, "", "ObsEncoder"], [111, 0, 1, "", "OneHotCategorical"], [112, 0, 1, "", "ProbabilisticActor"], [113, 0, 1, "", "QValueActor"], [114, 0, 1, "", "RSSMPosterior"], [115, 0, 1, "", "RSSMPrior"], [116, 0, 1, "", "SafeModule"], [117, 0, 1, "", "SafeProbabilisticModule"], [118, 0, 1, "", "SafeProbabilisticSequential"], [119, 0, 1, "", "SafeSequential"], [120, 0, 1, "", "TanhDelta"], [121, 0, 1, "", "TanhNormal"], [122, 0, 1, "", "TruncatedNormal"], [123, 0, 1, "", "ValueOperator"], [124, 0, 1, "", "reset_noise"]], "torchrl.modules.ActorCriticOperator": [[90, 1, 1, "", "get_critic_operator"], [90, 1, 1, "", "get_value_operator"]], "torchrl.modules.ActorCriticWrapper": [[91, 1, 1, "", "get_policy_operator"], [91, 1, 1, "", "get_value_operator"]], "torchrl.modules.ActorValueOperator": [[92, 1, 1, "", "get_policy_operator"], [92, 1, 1, "", "get_value_operator"]], "torchrl.modules.CEMPlanner": [[93, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[94, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[95, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[96, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[97, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[98, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[99, 1, 1, "", "log_prob"], [99, 3, 1, "", "mean"], [99, 3, 1, "", "mode"], [99, 1, 1, "", "rsample"], [99, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[100, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[102, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[103, 1, 1, "", "forward"]], "torchrl.modules.LSTMNet": [[104, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[105, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[106, 1, 1, "", "forward"], [106, 1, 1, "", "planning"]], "torchrl.modules.NoisyLazyLinear": [[107, 1, 1, "", "initialize_parameters"]], "torchrl.modules.ObsDecoder": [[109, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[110, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[111, 1, 1, "", "log_prob"], [111, 3, 1, "", "mode"], [111, 1, 1, "", "rsample"], [111, 1, 1, "", "sample"]], "torchrl.modules.RSSMPosterior": [[114, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[115, 1, 1, "", "forward"]], "torchrl.modules.SafeModule": [[116, 1, 1, "", "random"], [116, 1, 1, "", "random_sample"], [116, 1, 1, "", "to"]], "torchrl.modules.SafeProbabilisticModule": [[117, 1, 1, "", "random"], [117, 1, 1, "", "random_sample"]], "torchrl.modules.TanhDelta": [[120, 3, 1, "", "mean"], [120, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[121, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[122, 1, 1, "", "log_prob"], [122, 3, 1, "", "mode"]], "torchrl.modules.tensordict_module.actors": [[125, 0, 1, "", "DistributionalQValueHook"], [126, 0, 1, "", "QValueHook"]], "torchrl.modules.tensordict_module.common": [[127, 0, 1, "", "ensure_tensordict_compatible"], [128, 0, 1, "", "is_tensordict_compatible"]], "torchrl.modules.utils": [[129, 0, 1, "", "biased_softplus"], [130, 0, 1, "", "inv_softplus"], [131, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[129, 1, 1, "", "forward"]], "torchrl.objectives": [[132, 0, 1, "", "A2CLoss"], [133, 0, 1, "", "ClipPPOLoss"], [134, 0, 1, "", "DDPGLoss"], [135, 0, 1, "", "DQNLoss"], [136, 0, 1, "", "DistributionalDQNLoss"], [137, 0, 1, "", "HardUpdate"], [138, 0, 1, "", "KLPENPPOLoss"], [139, 0, 1, "", "PPOLoss"], [140, 0, 1, "", "REDQLoss"], [141, 0, 1, "", "SACLoss"], [142, 0, 1, "", "SoftUpdate"], [143, 0, 1, "", "distance_loss"], [144, 0, 1, "", "hold_out_net"], [145, 0, 1, "", "hold_out_params"], [146, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[132, 1, 1, "", "forward"]], "torchrl.objectives.ClipPPOLoss": [[133, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[134, 1, 1, "", "forward"]], "torchrl.objectives.DQNLoss": [[135, 1, 1, "", "forward"]], "torchrl.objectives.DistributionalDQNLoss": [[136, 1, 1, "", "forward"]], "torchrl.objectives.KLPENPPOLoss": [[138, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[139, 1, 1, "", "forward"]], "torchrl.objectives.REDQLoss": [[140, 1, 1, "", "forward"]], "torchrl.objectives.SACLoss": [[141, 1, 1, "", "forward"]], "torchrl.objectives.value": [[147, 0, 1, "", "GAE"], [148, 0, 1, "", "TDEstimate"], [149, 0, 1, "", "TDLambdaEstimate"]], "torchrl.objectives.value.GAE": [[147, 1, 1, "", "forward"]], "torchrl.objectives.value.TDEstimate": [[148, 1, 1, "", "forward"]], "torchrl.objectives.value.TDLambdaEstimate": [[149, 1, 1, "", "forward"]], "torchrl.objectives.value.functional": [[150, 0, 1, "", "generalized_advantage_estimate"], [151, 0, 1, "", "td_advantage_estimate"], [152, 0, 1, "", "td_lambda_advantage_estimate"], [153, 0, 1, "", "td_lambda_return_estimate"], [154, 0, 1, "", "vec_generalized_advantage_estimate"], [155, 0, 1, "", "vec_td_lambda_advantage_estimate"], [156, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.trainers": [[157, 0, 1, "", "BatchSubSampler"], [158, 0, 1, "", "ClearCudaCache"], [159, 0, 1, "", "CountFramesLog"], [160, 0, 1, "", "LogReward"], [161, 0, 1, "", "OptimizerHook"], [162, 0, 1, "", "Recorder"], [163, 0, 1, "", "ReplayBuffer"], [164, 0, 1, "", "RewardNormalizer"], [165, 0, 1, "", "SelectKeys"], [166, 0, 1, "", "Trainer"], [167, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.ReplayBuffer": [[163, 1, 1, "", "add"], [163, 1, 1, "", "extend"], [163, 1, 1, "", "sample"]], "torchrl.trainers.helpers": [[168, 2, 1, "", "correct_for_frame_skip"], [169, 2, 1, "", "get_stats_random_rollout"], [170, 2, 1, "", "make_a2c_loss"], [171, 2, 1, "", "make_a2c_model"], [172, 2, 1, "", "make_collector_offpolicy"], [173, 2, 1, "", "make_collector_onpolicy"], [174, 2, 1, "", "make_ddpg_actor"], [175, 2, 1, "", "make_ddpg_loss"], [176, 2, 1, "", "make_dqn_actor"], [177, 2, 1, "", "make_dqn_loss"], [178, 2, 1, "", "make_ppo_loss"], [179, 2, 1, "", "make_ppo_model"], [180, 2, 1, "", "make_redq_loss"], [181, 2, 1, "", "make_redq_model"], [182, 2, 1, "", "make_replay_buffer"], [183, 2, 1, "", "make_sac_loss"], [184, 2, 1, "", "make_sac_model"], [185, 2, 1, "", "make_target_updater"], [186, 2, 1, "", "make_trainer"], [187, 2, 1, "", "parallel_env_constructor"], [188, 2, 1, "", "sync_async_collector"], [189, 2, 1, "", "sync_sync_collector"], [190, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "torchrl": [0, 1, 2, 3, 5, 194, 195, 196, 197, 198, 199, 205, 206], "document": [0, 8], "tutori": 0, "refer": [0, 192], "indic": 0, "tabl": 0, "collector": [1, 198], "packag": [1, 2, 3, 194, 195, 196, 197], "data": [1, 2, 198, 206], "helper": [1, 3], "function": [1, 206], "replai": [2, 198, 206], "buffer": [2, 198, 206], "compos": [2, 58], "prototyp": 2, "tensorspec": [2, 27], "util": [2, 194, 195, 196], "env": [3, 205, 206], "vector": [3, 206], "transform": [3, 77, 198, 203, 205, 206], "domain": 3, "specif": [3, 201], "librari": [3, 206], "work": [4, 5], "gym": [4, 205], "what": 4, "i": [4, 7, 204], "openai": 4, "version": [4, 6, 9], "habitat": 5, "lab": 5, "set": [5, 204], "up": 5, "your": [5, 198], "environ": [5, 6, 198, 199, 201, 205, 206], "instal": [5, 6, 206], "from": [5, 6], "pip": [5, 6], "us": [5, 8, 198, 199, 203, 206], "common": [5, 6], "issu": [5, 6, 9], "about": 6, "mujoco": 6, "prerequisit": 6, "render": [6, 205], "all": 6, "new": 6, "bindindg": 6, "2": [6, 203], "1": [6, 203], "old": 6, "bind": 6, "py": 6, "option": 6, "clone": 6, "repo": [6, 8], "when": 6, "pro": 7, "tip": 7, "debug": 7, "gradient": 7, "relat": 7, "error": 7, "newcom": 7, "my": 7, "train": [7, 198, 199], "too": 7, "slow": 7, "intermedi": 7, "resourc": 8, "pytorch": [8, 9], "functorch": [8, 203], "rl": [8, 206], "blog": 8, "websit": 8, "educ": 8, "forum": 8, "how": 9, "reproduc": 9, "workaround": 9, "implement_for": 10, "multisyncdatacollector": 11, "multiasyncdatacollector": 12, "syncdatacollector": 13, "asyncdatacollector": 14, "split_trajectori": 15, "binarydiscretetensorspec": 16, "boundedtensorspec": 17, "compositespec": 18, "discretetensorspec": 19, "multonehotdiscretetensorspec": 20, "multistep": 21, "onehotdiscretetensorspec": 22, "prioritizedreplaybuff": 23, "replaybuff": [24, 30, 163], "tensordictprioritizedreplaybuff": 25, "tensordictreplaybuff": [26, 31], "unboundedcontinuoustensorspec": 28, "remotetensordictreplaybuff": 29, "prioritizedsampl": 32, "randomsampl": 33, "sampler": 34, "lazymemmapstorag": 35, "lazytensorstorag": 36, "liststorag": 37, "storag": 38, "roundrobinwrit": 39, "writer": 40, "envbas": 41, "gymlikeenv": 42, "modelbasedenvbas": 43, "parallelenv": 44, "serialenv": 45, "dmcontrolenv": 46, "dmcontrolwrapp": 47, "gymenv": 48, "gymwrapp": 49, "habitatenv": 50, "jumanjienv": 51, "jumanjiwrapp": 52, "dreamerenv": 53, "binarizereward": 54, "catfram": 55, "cattensor": 56, "centercrop": 57, "doubletofloat": 59, "finitetensordictcheck": 60, "flattenobserv": 61, "frameskiptransform": 62, "grayscal": 63, "noopresetenv": 64, "observationnorm": 65, "observationtransform": 66, "pinmemorytransform": 67, "r3mtransform": 68, "resiz": 69, "rewardclip": 70, "rewardsc": 71, "rewardsum": 72, "squeezetransform": 73, "stepcount": 74, "tensordictprim": 75, "totensorimag": 76, "transformedenv": 78, "unsqueezetransform": 79, "viprewardtransform": 80, "viptransform": 81, "vecnorm": [82, 205], "gsdenois": 83, "check_env_spec": 84, "exploration_mod": 85, "get_available_librari": 86, "set_exploration_mod": 87, "step_mdp": 88, "actor": [89, 203], "actorcriticoper": [90, 203], "actorcriticwrapp": 91, "actorvalueoper": 92, "cemplann": 93, "convnet": 94, "ddpgcnnactor": 95, "ddpgcnnqnet": 96, "ddpgmlpactor": 97, "ddpgmlpqnet": 98, "delta": 99, "distributionaldqnnet": 100, "distributionalqvalueactor": 101, "dreameractor": 102, "duelingcnndqnet": 103, "lstmnet": 104, "mlp": 105, "mpcplannerbas": 106, "noisylazylinear": 107, "noisylinear": 108, "obsdecod": 109, "obsencod": 110, "onehotcategor": 111, "probabilisticactor": [112, 203], "qvalueactor": 113, "rssmposterior": 114, "rssmprior": 115, "safemodul": 116, "safeprobabilisticmodul": 117, "safeprobabilisticsequenti": 118, "safesequenti": 119, "tanhdelta": 120, "tanhnorm": 121, "truncatednorm": 122, "valueoper": 123, "reset_nois": 124, "distributionalqvaluehook": 125, "qvaluehook": 126, "ensure_tensordict_compat": 127, "is_tensordict_compat": 128, "biased_softplu": 129, "inv_softplu": 130, "map": 131, "a2closs": 132, "clipppoloss": 133, "ddpgloss": 134, "dqnloss": 135, "distributionaldqnloss": 136, "hardupd": 137, "klpenppoloss": 138, "ppoloss": 139, "redqloss": 140, "sacloss": 141, "softupd": 142, "distance_loss": 143, "hold_out_net": 144, "hold_out_param": 145, "next_state_valu": 146, "gae": 147, "tdestim": 148, "tdlambdaestim": 149, "generalized_advantage_estim": 150, "td_advantage_estim": 151, "td_lambda_advantage_estim": 152, "td_lambda_return_estim": 153, "vec_generalized_advantage_estim": 154, "vec_td_lambda_advantage_estim": 155, "vec_td_lambda_return_estim": 156, "batchsubsampl": 157, "clearcudacach": 158, "countframeslog": 159, "logreward": 160, "optimizerhook": 161, "record": [162, 198], "rewardnorm": 164, "selectkei": 165, "trainer": [166, 196], "updateweight": 167, "correct_for_frame_skip": 168, "get_stats_random_rollout": 169, "make_a2c_loss": 170, "make_a2c_model": 171, "make_collector_offpolici": 172, "make_collector_onpolici": 173, "make_ddpg_actor": 174, "make_ddpg_loss": 175, "make_dqn_actor": 176, "make_dqn_loss": 177, "make_ppo_loss": 178, "make_ppo_model": 179, "make_redq_loss": 180, "make_redq_model": 181, "make_replay_buff": 182, "make_sac_loss": 183, "make_sac_model": 184, "make_target_updat": 185, "make_train": 186, "parallel_env_constructor": 187, "sync_async_collector": 188, "sync_sync_collector": 189, "transformed_env_constructor": 190, "readm": [191, 200], "demo": [191, 200], "api": 192, "knowledg": 193, "base": [193, 199], "contribut": [193, 206], "content": 193, "modul": [194, 206], "tensordict": [194, 204, 206], "hook": [194, 196], "model": [194, 198, 199, 206], "explor": 194, "planner": 194, "distribut": 194, "object": [195, 198, 206], "dqn": [195, 199], "ddpg": [195, 198], "sac": 195, "redq": 195, "ppo": 195, "a2c": 195, "return": 195, "checkpoint": 196, "builder": 196, "_util": 197, "code": [198, 199, 204], "parallel": [198, 201, 205], "execut": [198, 201], "normal": 198, "observ": 198, "build": [198, 199], "evalu": 198, "hyperparamet": [198, 199], "initi": 198, "time": [198, 202], "polici": [198, 201], "experi": 198, "result": 198, "sampl": 198, "trajectori": 198, "td": [198, 199], "lambda": [198, 199], "pixel": 199, "The": 199, "problem": 199, "deep": 199, "q": 199, "network": 199, "regular": 199, "loop": 199, "conclus": 199, "possibl": 199, "improv": [199, 204], "task": 201, "multi": 201, "divers": 201, "rollout": [201, 205], "comput": 202, "tensordictmodul": [203, 206], "exampl": 203, "simpl": 203, "usag": [203, 204], "multipl": 203, "input": 203, "3": 203, "output": 203, "4": 203, "combin": 203, "tensordictsequenti": 203, "5": 203, "compat": 203, "do": [203, 204], "": 203, "don": 203, "t": [203, 204], "probabilistictensordictmodul": 203, "showcas": 203, "implement": 203, "benchmark": 203, "modular": 204, "can": 204, "thi": 204, "python": 204, "dict": 204, "structur": 204, "dictionari": 204, "featur": 204, "get": 204, "kei": 204, "valu": 204, "updat": 204, "tensordict_or_dict": 204, "del": 204, "tensor": 204, "batch": 204, "size": 204, "devic": [204, 205], "memori": 204, "share": 204, "via": 204, "physic": 204, "oper": 204, "spec": 205, "seed": 205, "reset": 205, "step": 205, "frame_skip": 205, "deepmind": 205, "control": 205, "run": 205, "close": 205, "access": 205, "attribut": 205, "kwarg": 205, "introduct": 206, "chang": 206, "config": 206, "sequenc": 206, "program": 206, "ensembl": 206, "meta": 206, "special": 206, "class": 206, "state": 206}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Welcome to the TorchRL Documentation!": [[0, "welcome-to-the-torchrl-documentation"]], "Tutorials:": [[0, null]], "References:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "torchrl.collectors package": [[1, "torchrl-collectors-package"]], "Data collectors": [[1, "data-collectors"]], "Helper functions": [[1, "helper-functions"]], "torchrl.data package": [[2, "torchrl-data-package"]], "Replay Buffers": [[2, "replay-buffers"]], "Composable Replay Buffers (Prototype)": [[2, "composable-replay-buffers-prototype"]], "TensorSpec": [[2, "tensorspec"], [27, "tensorspec"]], "Utils": [[2, "utils"], [194, "utils"], [195, "utils"], [196, "utils"]], "torchrl.envs package": [[3, "torchrl-envs-package"]], "Vectorized envs": [[3, "vectorized-envs"]], "Transforms": [[3, "transforms"], [198, "transforms"], [206, "transforms"]], "Helpers": [[3, "helpers"]], "Domain-specific": [[3, "domain-specific"]], "Libraries": [[3, "libraries"]], "Working with gym": [[4, "working-with-gym"]], "What is OpenAI Gym?": [[4, "what-is-openai-gym"]], "Versioning": [[4, "versioning"]], "Working with habitat-lab": [[5, "working-with-habitat-lab"]], "Setting up your environment for habitat and torchrl": [[5, "setting-up-your-environment-for-habitat-and-torchrl"]], "Installing habitat-lab from pip": [[5, "installing-habitat-lab-from-pip"]], "Installing TorchRL": [[5, "installing-torchrl"]], "Using Habitat": [[5, "using-habitat"]], "Common issues": [[5, "common-issues"]], "About MuJoCo": [[6, "about-mujoco"]], "Installing MuJoCo": [[6, "installing-mujoco"]], "Prerequisite for rendering (all mujoco versions)": [[6, "prerequisite-for-rendering-all-mujoco-versions"]], "New bindindgs (\u2265 2.1.2)": [[6, "new-bindindgs-2-1-2"]], "Old bindings (\u2264 2.1.1): mujoco-py": [[6, "old-bindings-2-1-1-mujoco-py"]], "Option 1: installing mujoco-py with pip": [[6, "option-1-installing-mujoco-py-with-pip"]], "Option 2: installing mujoco-py from a cloned repo": [[6, "option-2-installing-mujoco-py-from-a-cloned-repo"]], "Common Issues when rendering Mujoco Environments": [[6, "common-issues-when-rendering-mujoco-environments"]], "Pro-tips and Debugging": [[7, "pro-tips-and-debugging"]], "Gradient-related errors [Newcomers]": [[7, "gradient-related-errors-newcomers"]], "My Training is too slow [Newcomers / intermediate]": [[7, "my-training-is-too-slow-newcomers-intermediate"]], "Useful resources": [[8, "useful-resources"]], "Pytorch documentation": [[8, "pytorch-documentation"]], "functorch documentation": [[8, "functorch-documentation"]], "Useful RL repos, blogs and websites": [[8, "useful-rl-repos-blogs-and-websites"]], "Educational resource": [[8, "educational-resource"]], "Forums": [[8, "forums"]], "Repos": [[8, "repos"]], "Versioning Issues": [[9, "versioning-issues"]], "Pytorch version": [[9, "pytorch-version"]], "How to reproduce": [[9, "how-to-reproduce"]], "Workarounds": [[9, "workarounds"]], "implement_for": [[10, "implement-for"]], "MultiSyncDataCollector": [[11, "multisyncdatacollector"]], "MultiaSyncDataCollector": [[12, "multiasyncdatacollector"]], "SyncDataCollector": [[13, "syncdatacollector"]], "aSyncDataCollector": [[14, "asyncdatacollector"]], "split_trajectories": [[15, "split-trajectories"]], "BinaryDiscreteTensorSpec": [[16, "binarydiscretetensorspec"]], "BoundedTensorSpec": [[17, "boundedtensorspec"]], "CompositeSpec": [[18, "compositespec"]], "DiscreteTensorSpec": [[19, "discretetensorspec"]], "MultOneHotDiscreteTensorSpec": [[20, "multonehotdiscretetensorspec"]], "MultiStep": [[21, "multistep"]], "OneHotDiscreteTensorSpec": [[22, "onehotdiscretetensorspec"]], "PrioritizedReplayBuffer": [[23, "prioritizedreplaybuffer"]], "ReplayBuffer": [[24, "replaybuffer"], [30, "replaybuffer"], [163, "replaybuffer"]], "TensorDictPrioritizedReplayBuffer": [[25, "tensordictprioritizedreplaybuffer"]], "TensorDictReplayBuffer": [[26, "tensordictreplaybuffer"], [31, "tensordictreplaybuffer"]], "UnboundedContinuousTensorSpec": [[28, "unboundedcontinuoustensorspec"]], "RemoteTensorDictReplayBuffer": [[29, "remotetensordictreplaybuffer"]], "PrioritizedSampler": [[32, "prioritizedsampler"]], "RandomSampler": [[33, "randomsampler"]], "Sampler": [[34, "sampler"]], "LazyMemmapStorage": [[35, "lazymemmapstorage"]], "LazyTensorStorage": [[36, "lazytensorstorage"]], "ListStorage": [[37, "liststorage"]], "Storage": [[38, "storage"]], "RoundRobinWriter": [[39, "roundrobinwriter"]], "Writer": [[40, "writer"]], "EnvBase": [[41, "envbase"]], "GymLikeEnv": [[42, "gymlikeenv"]], "ModelBasedEnvBase": [[43, "modelbasedenvbase"]], "ParallelEnv": [[44, "parallelenv"]], "SerialEnv": [[45, "serialenv"]], "DMControlEnv": [[46, "dmcontrolenv"]], "DMControlWrapper": [[47, "dmcontrolwrapper"]], "GymEnv": [[48, "gymenv"]], "GymWrapper": [[49, "gymwrapper"]], "HabitatEnv": [[50, "habitatenv"]], "JumanjiEnv": [[51, "jumanjienv"]], "JumanjiWrapper": [[52, "jumanjiwrapper"]], "DreamerEnv": [[53, "dreamerenv"]], "BinarizeReward": [[54, "binarizereward"]], "CatFrames": [[55, "catframes"]], "CatTensors": [[56, "cattensors"]], "CenterCrop": [[57, "centercrop"]], "Compose": [[58, "compose"]], "DoubleToFloat": [[59, "doubletofloat"]], "FiniteTensorDictCheck": [[60, "finitetensordictcheck"]], "FlattenObservation": [[61, "flattenobservation"]], "FrameSkipTransform": [[62, "frameskiptransform"]], "GrayScale": [[63, "grayscale"]], "NoopResetEnv": [[64, "noopresetenv"]], "ObservationNorm": [[65, "observationnorm"]], "ObservationTransform": [[66, "observationtransform"]], "PinMemoryTransform": [[67, "pinmemorytransform"]], "R3MTransform": [[68, "r3mtransform"]], "Resize": [[69, "resize"]], "RewardClipping": [[70, "rewardclipping"]], "RewardScaling": [[71, "rewardscaling"]], "RewardSum": [[72, "rewardsum"]], "SqueezeTransform": [[73, "squeezetransform"]], "StepCounter": [[74, "stepcounter"]], "TensorDictPrimer": [[75, "tensordictprimer"]], "ToTensorImage": [[76, "totensorimage"]], "Transform": [[77, "transform"]], "TransformedEnv": [[78, "transformedenv"]], "UnsqueezeTransform": [[79, "unsqueezetransform"]], "VIPRewardTransform": [[80, "viprewardtransform"]], "VIPTransform": [[81, "viptransform"]], "VecNorm": [[82, "vecnorm"], [205, "vecnorm"]], "gSDENoise": [[83, "gsdenoise"]], "check_env_specs": [[84, "check-env-specs"]], "exploration_mode": [[85, "exploration-mode"]], "get_available_libraries": [[86, "get-available-libraries"]], "set_exploration_mode": [[87, "set-exploration-mode"]], "step_mdp": [[88, "step-mdp"]], "Actor": [[89, "actor"], [203, "actor"]], "ActorCriticOperator": [[90, "actorcriticoperator"], [203, "actorcriticoperator"]], "ActorCriticWrapper": [[91, "actorcriticwrapper"]], "ActorValueOperator": [[92, "actorvalueoperator"]], "CEMPlanner": [[93, "cemplanner"]], "ConvNet": [[94, "convnet"]], "DdpgCnnActor": [[95, "ddpgcnnactor"]], "DdpgCnnQNet": [[96, "ddpgcnnqnet"]], "DdpgMlpActor": [[97, "ddpgmlpactor"]], "DdpgMlpQNet": [[98, "ddpgmlpqnet"]], "Delta": [[99, "delta"]], "DistributionalDQNnet": [[100, "distributionaldqnnet"]], "DistributionalQValueActor": [[101, "distributionalqvalueactor"]], "DreamerActor": [[102, "dreameractor"]], "DuelingCnnDQNet": [[103, "duelingcnndqnet"]], "LSTMNet": [[104, "lstmnet"]], "MLP": [[105, "mlp"]], "MPCPlannerBase": [[106, "mpcplannerbase"]], "NoisyLazyLinear": [[107, "noisylazylinear"]], "NoisyLinear": [[108, "noisylinear"]], "ObsDecoder": [[109, "obsdecoder"]], "ObsEncoder": [[110, "obsencoder"]], "OneHotCategorical": [[111, "onehotcategorical"]], "ProbabilisticActor": [[112, "probabilisticactor"], [203, "probabilisticactor"]], "QValueActor": [[113, "qvalueactor"]], "RSSMPosterior": [[114, "rssmposterior"]], "RSSMPrior": [[115, "rssmprior"]], "SafeModule": [[116, "safemodule"]], "SafeProbabilisticModule": [[117, "safeprobabilisticmodule"]], "SafeProbabilisticSequential": [[118, "safeprobabilisticsequential"]], "SafeSequential": [[119, "safesequential"]], "TanhDelta": [[120, "tanhdelta"]], "TanhNormal": [[121, "tanhnormal"]], "TruncatedNormal": [[122, "truncatednormal"]], "ValueOperator": [[123, "valueoperator"]], "reset_noise": [[124, "reset-noise"]], "DistributionalQValueHook": [[125, "distributionalqvaluehook"]], "QValueHook": [[126, "qvaluehook"]], "ensure_tensordict_compatible": [[127, "ensure-tensordict-compatible"]], "is_tensordict_compatible": [[128, "is-tensordict-compatible"]], "biased_softplus": [[129, "biased-softplus"]], "inv_softplus": [[130, "inv-softplus"]], "mappings": [[131, "mappings"]], "A2CLoss": [[132, "a2closs"]], "ClipPPOLoss": [[133, "clipppoloss"]], "DDPGLoss": [[134, "ddpgloss"]], "DQNLoss": [[135, "dqnloss"]], "DistributionalDQNLoss": [[136, "distributionaldqnloss"]], "HardUpdate": [[137, "hardupdate"]], "KLPENPPOLoss": [[138, "klpenppoloss"]], "PPOLoss": [[139, "ppoloss"]], "REDQLoss": [[140, "redqloss"]], "SACLoss": [[141, "sacloss"]], "SoftUpdate": [[142, "softupdate"]], "distance_loss": [[143, "distance-loss"]], "hold_out_net": [[144, "hold-out-net"]], "hold_out_params": [[145, "hold-out-params"]], "next_state_value": [[146, "next-state-value"]], "GAE": [[147, "gae"]], "TDEstimate": [[148, "tdestimate"]], "TDLambdaEstimate": [[149, "tdlambdaestimate"]], "generalized_advantage_estimate": [[150, "generalized-advantage-estimate"]], "td_advantage_estimate": [[151, "td-advantage-estimate"]], "td_lambda_advantage_estimate": [[152, "td-lambda-advantage-estimate"]], "td_lambda_return_estimate": [[153, "td-lambda-return-estimate"]], "vec_generalized_advantage_estimate": [[154, "vec-generalized-advantage-estimate"]], "vec_td_lambda_advantage_estimate": [[155, "vec-td-lambda-advantage-estimate"]], "vec_td_lambda_return_estimate": [[156, "vec-td-lambda-return-estimate"]], "BatchSubSampler": [[157, "batchsubsampler"]], "ClearCudaCache": [[158, "clearcudacache"]], "CountFramesLog": [[159, "countframeslog"]], "LogReward": [[160, "logreward"]], "OptimizerHook": [[161, "optimizerhook"]], "Recorder": [[162, "recorder"]], "RewardNormalizer": [[164, "rewardnormalizer"]], "SelectKeys": [[165, "selectkeys"]], "Trainer": [[166, "trainer"]], "UpdateWeights": [[167, "updateweights"]], "correct_for_frame_skip": [[168, "correct-for-frame-skip"]], "get_stats_random_rollout": [[169, "get-stats-random-rollout"]], "make_a2c_loss": [[170, "make-a2c-loss"]], "make_a2c_model": [[171, "make-a2c-model"]], "make_collector_offpolicy": [[172, "make-collector-offpolicy"]], "make_collector_onpolicy": [[173, "make-collector-onpolicy"]], "make_ddpg_actor": [[174, "make-ddpg-actor"]], "make_ddpg_loss": [[175, "make-ddpg-loss"]], "make_dqn_actor": [[176, "make-dqn-actor"]], "make_dqn_loss": [[177, "make-dqn-loss"]], "make_ppo_loss": [[178, "make-ppo-loss"]], "make_ppo_model": [[179, "make-ppo-model"]], "make_redq_loss": [[180, "make-redq-loss"]], "make_redq_model": [[181, "make-redq-model"]], "make_replay_buffer": [[182, "make-replay-buffer"]], "make_sac_loss": [[183, "make-sac-loss"]], "make_sac_model": [[184, "make-sac-model"]], "make_target_updater": [[185, "make-target-updater"]], "make_trainer": [[186, "make-trainer"]], "parallel_env_constructor": [[187, "parallel-env-constructor"]], "sync_async_collector": [[188, "sync-async-collector"]], "sync_sync_collector": [[189, "sync-sync-collector"]], "transformed_env_constructor": [[190, "transformed-env-constructor"]], "README Demos": [[191, "readme-demos"], [200, "readme-demos"]], "API Reference": [[192, "api-reference"]], "Knowledge Base": [[193, "knowledge-base"]], "Contributing": [[193, "contributing"], [206, "contributing"]], "Contents:": [[193, null]], "torchrl.modules package": [[194, "torchrl-modules-package"]], "TensorDict modules": [[194, "tensordict-modules"]], "Hooks": [[194, "hooks"]], "Models": [[194, "models"], [206, "models"]], "Exploration": [[194, "exploration"]], "Planners": [[194, "planners"]], "Distributions": [[194, "distributions"]], "torchrl.objectives package": [[195, "torchrl-objectives-package"]], "DQN": [[195, "dqn"]], "DDPG": [[195, "ddpg"]], "SAC": [[195, "sac"]], "REDQ": [[195, "redq"]], "PPO": [[195, "ppo"]], "A2C": [[195, "a2c"]], "Returns": [[195, "returns"]], "torchrl.trainers package": [[196, "torchrl-trainers-package"]], "Checkpointing": [[196, "checkpointing"]], "Trainer and hooks": [[196, "trainer-and-hooks"]], "Builders": [[196, "builders"]], "torchrl._utils package": [[197, "torchrl-utils-package"]], "Coding DDPG using TorchRL": [[198, "coding-ddpg-using-torchrl"]], "Environment": [[198, "environment"]], "Parallel execution": [[198, "parallel-execution"]], "Normalization of the observations": [[198, "normalization-of-the-observations"]], "Building the model": [[198, "building-the-model"]], "Evaluator: building your recorder object": [[198, "evaluator-building-your-recorder-object"]], "Replay buffer": [[198, "replay-buffer"]], "Hyperparameters": [[198, "hyperparameters"], [199, "hyperparameters"]], "Initialization": [[198, "initialization"]], "Data collector": [[198, "data-collector"]], "Time to train the policy!": [[198, "time-to-train-the-policy"]], "Experiment results": [[198, "experiment-results"]], "Sampling trajectories and using TD(lambda)": [[198, "sampling-trajectories-and-using-td-lambda"]], "Coding a pixel-based DQN using TorchRL": [[199, "coding-a-pixel-based-dqn-using-torchrl"]], "Building the environment": [[199, "building-the-environment"]], "The problem": [[199, "the-problem"]], "Building the model (Deep Q-network)": [[199, "building-the-model-deep-q-network"]], "Regular DQN": [[199, "regular-dqn"]], "Training loop": [[199, "training-loop"], [199, "id1"]], "TD-lambda": [[199, "td-lambda"]], "Conclusion and possible improvements": [[199, "conclusion-and-possible-improvements"]], "Task-specific policy in multi-task environments": [[201, "task-specific-policy-in-multi-task-environments"]], "Policy": [[201, "policy"]], "Executing diverse tasks in parallel": [[201, "executing-diverse-tasks-in-parallel"]], "Rollout": [[201, "rollout"]], "Computation times": [[202, "computation-times"]], "TensorDictModule": [[203, "tensordictmodule"]], "TensorDictModule by examples": [[203, "tensordictmodule-by-examples"]], "Example 1: Simple usage": [[203, "example-1-simple-usage"]], "Example 2: Multiple inputs": [[203, "example-2-multiple-inputs"]], "Example 3: Multiple outputs": [[203, "example-3-multiple-outputs"]], "Example 4: Combining multiple TensorDictModule with TensorDictSequential": [[203, "example-4-combining-multiple-tensordictmodule-with-tensordictsequential"]], "Example 5: Compatibility with functorch": [[203, "example-5-compatibility-with-functorch"]], "Do\u2019s and don\u2019t with TensorDictModule": [[203, "do-s-and-don-t-with-tensordictmodule"]], "ProbabilisticTensorDictModule": [[203, "probabilistictensordictmodule"]], "Showcase: Implementing a transformer using TensorDictModule": [[203, "showcase-implementing-a-transformer-using-tensordictmodule"]], "Benchmarking": [[203, "benchmarking"]], "TensorDict": [[204, "tensordict"], [206, "tensordict"]], "Improving the modularity of codes": [[204, "improving-the-modularity-of-codes"]], "Can\u2019t I do this with a python dict?": [[204, "can-t-i-do-this-with-a-python-dict"]], "TensorDict structure": [[204, "tensordict-structure"]], "TensorDict Dictionary Features": [[204, "tensordict-dictionary-features"]], "get(key)": [[204, "get-key"]], "set(key, value)": [[204, "set-key-value"]], "keys()": [[204, "keys"]], "values()": [[204, "values"]], "update(tensordict_or_dict)": [[204, "update-tensordict-or-dict"]], "del": [[204, "del"]], "TensorDict tensor features": [[204, "tensordict-tensor-features"]], "Batch size": [[204, "batch-size"]], "Devices": [[204, "devices"]], "Memory sharing via physical memory usage": [[204, "memory-sharing-via-physical-memory-usage"]], "Tensor operations": [[204, "tensor-operations"]], "TorchRL envs": [[205, "torchrl-envs"]], "Gym environments": [[205, "gym-environments"]], "Env Specs": [[205, "env-specs"]], "Seeding, resetting and steps": [[205, "seeding-resetting-and-steps"]], "Rollouts": [[205, "rollouts"]], "frame_skip": [[205, "frame-skip"]], "Rendering": [[205, "rendering"]], "DeepMind Control environments": [[205, "deepmind-control-environments"]], "Transforming envs": [[205, "transforming-envs"]], "Environment device": [[205, "environment-device"]], "Running environments in parallel": [[205, "running-environments-in-parallel"]], "Closing parallel environments": [[205, "closing-parallel-environments"]], "Seeding": [[205, "seeding"]], "Accessing environment attributes": [[205, "accessing-environment-attributes"]], "kwargs for parallel environments": [[205, "kwargs-for-parallel-environments"]], "Transforming parallel environments": [[205, "transforming-parallel-environments"]], "Introduction to TorchRL": [[206, "introduction-to-torchrl"]], "Data": [[206, "data"]], "Replay buffers": [[206, "replay-buffers"]], "Envs": [[206, "envs"]], "Changing environments config": [[206, "changing-environments-config"]], "Vectorized Environments": [[206, "vectorized-environments"]], "Modules": [[206, "modules"]], "TensorDictModules": [[206, "tensordictmodules"]], "Sequences of Modules": [[206, "sequences-of-modules"]], "Functional Programming (Ensembling / Meta-RL)": [[206, "functional-programming-ensembling-meta-rl"]], "Specialized Classes": [[206, "specialized-classes"]], "Using Environments and Modules": [[206, "using-environments-and-modules"]], "Objectives": [[206, "objectives"]], "State of the Library": [[206, "state-of-the-library"]], "Installing the Library": [[206, "installing-the-library"]]}, "indexentries": {"implement_for (class in torchrl._utils)": [[10, "torchrl._utils.implement_for"]], "multisyncdatacollector (class in torchrl.collectors)": [[11, "torchrl.collectors.MultiSyncDataCollector"]], "load_state_dict() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.multisyncdatacollector method)": [[11, "torchrl.collectors.MultiSyncDataCollector.update_policy_weights_"]], "multiasyncdatacollector (class in torchrl.collectors)": [[12, "torchrl.collectors.MultiaSyncDataCollector"]], "load_state_dict() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.multiasyncdatacollector method)": [[12, "torchrl.collectors.MultiaSyncDataCollector.update_policy_weights_"]], "syncdatacollector (class in torchrl.collectors)": [[13, "torchrl.collectors.SyncDataCollector"]], "iterator() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.iterator"]], "load_state_dict() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.reset"]], "rollout() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.rollout"]], "set_seed() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.syncdatacollector method)": [[13, "torchrl.collectors.SyncDataCollector.update_policy_weights_"]], "asyncdatacollector (class in torchrl.collectors)": [[14, "torchrl.collectors.aSyncDataCollector"]], "load_state_dict() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.load_state_dict"]], "reset() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.reset"]], "set_seed() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.set_seed"]], "shutdown() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.shutdown"]], "state_dict() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.state_dict"]], "update_policy_weights_() (torchrl.collectors.asyncdatacollector method)": [[14, "torchrl.collectors.aSyncDataCollector.update_policy_weights_"]], "split_trajectories() (in module torchrl.collectors.utils)": [[15, "torchrl.collectors.utils.split_trajectories"]], "binarydiscretetensorspec (class in torchrl.data)": [[16, "torchrl.data.BinaryDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.encode"]], "index() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.index"]], "is_in() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.is_in"]], "project() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.project"]], "rand() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.binarydiscretetensorspec method)": [[16, "torchrl.data.BinaryDiscreteTensorSpec.zero"]], "boundedtensorspec (class in torchrl.data)": [[17, "torchrl.data.BoundedTensorSpec"]], "assert_is_in() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.assert_is_in"]], "encode() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.encode"]], "index() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.index"]], "is_in() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.is_in"]], "project() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.project"]], "rand() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.rand"]], "to_numpy() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.to_numpy"]], "type_check() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.type_check"]], "zero() (torchrl.data.boundedtensorspec method)": [[17, "torchrl.data.BoundedTensorSpec.zero"]], "compositespec (class in torchrl.data)": [[18, "torchrl.data.CompositeSpec"]], "assert_is_in() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.assert_is_in"]], "encode() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.encode"]], "index() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.index"]], "is_in() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.is_in"]], "keys() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.keys"]], "project() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.project"]], "rand() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.rand"]], "to_numpy() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.to_numpy"]], "type_check() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.type_check"]], "zero() (torchrl.data.compositespec method)": [[18, "torchrl.data.CompositeSpec.zero"]], "discretetensorspec (class in torchrl.data)": [[19, "torchrl.data.DiscreteTensorSpec"]], "assert_is_in() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.encode"]], "index() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.index"]], "is_in() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.is_in"]], "project() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.project"]], "rand() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.type_check"]], "zero() (torchrl.data.discretetensorspec method)": [[19, "torchrl.data.DiscreteTensorSpec.zero"]], "multonehotdiscretetensorspec (class in torchrl.data)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.multonehotdiscretetensorspec method)": [[20, "torchrl.data.MultOneHotDiscreteTensorSpec.zero"]], "multistep (class in torchrl.data)": [[21, "torchrl.data.MultiStep"]], "add_module() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.add_module"]], "apply() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.apply"]], "bfloat16() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.bfloat16"]], "buffers() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.buffers"]], "children() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.children"]], "cpu() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.cpu"]], "cuda() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.cuda"]], "double() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.double"]], "eval() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.eval"]], "extra_repr() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.extra_repr"]], "float() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.float"]], "forward() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.forward"]], "get_buffer() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_buffer"]], "get_extra_state() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_extra_state"]], "get_parameter() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_parameter"]], "get_submodule() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.get_submodule"]], "half() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.half"]], "ipu() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.ipu"]], "load_state_dict() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.load_state_dict"]], "modules() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.modules"]], "named_buffers() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_buffers"]], "named_children() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_children"]], "named_modules() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_modules"]], "named_parameters() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.named_parameters"]], "parameters() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.parameters"]], "register_backward_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_backward_hook"]], "register_buffer() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_buffer"]], "register_forward_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_forward_hook"]], "register_forward_pre_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_load_state_dict_post_hook"]], "register_module() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_module"]], "register_parameter() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.register_parameter"]], "requires_grad_() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.requires_grad_"]], "set_extra_state() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.set_extra_state"]], "share_memory() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.share_memory"]], "state_dict() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.state_dict"]], "to() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.to"]], "to_empty() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.to_empty"]], "train() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.train"]], "type() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.type"]], "xpu() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.xpu"]], "zero_grad() (torchrl.data.multistep method)": [[21, "torchrl.data.MultiStep.zero_grad"]], "onehotdiscretetensorspec (class in torchrl.data)": [[22, "torchrl.data.OneHotDiscreteTensorSpec"]], "assert_is_in() (torchrl.data.onehotdiscretetensorspec method)": [[22, "torchrl.data.OneHotDiscreteTensorSpec.assert_is_in"]], "encode() (torchrl.data.onehotdiscretetensorspec method)": [[22, "torchrl.data.OneHotDiscreteTensorSpec.encode"]], "index() (torchrl.data.onehotdiscretetensorspec method)": [[22, "torchrl.data.OneHotDiscreteTensorSpec.index"]], "is_in() (torchrl.data.onehotdiscretetensorspec method)": [[22, "torchrl.data.OneHotDiscreteTensorSpec.is_in"]], "project() (torchrl.data.onehotdiscretetensorspec method)": [[22, "torchrl.data.OneHotDiscreteTensorSpec.project"]], "rand() (torchrl.data.onehotdiscretetensorspec method)": [[22, "torchrl.data.OneHotDiscreteTensorSpec.rand"]], "to_numpy() (torchrl.data.onehotdiscretetensorspec method)": [[22, "torchrl.data.OneHotDiscreteTensorSpec.to_numpy"]], "type_check() (torchrl.data.onehotdiscretetensorspec method)": [[22, "torchrl.data.OneHotDiscreteTensorSpec.type_check"]], "zero() (torchrl.data.onehotdiscretetensorspec method)": [[22, "torchrl.data.OneHotDiscreteTensorSpec.zero"]], "prioritizedreplaybuffer (class in torchrl.data)": [[23, "torchrl.data.PrioritizedReplayBuffer"]], "add() (torchrl.data.prioritizedreplaybuffer method)": [[23, "torchrl.data.PrioritizedReplayBuffer.add"]], "extend() (torchrl.data.prioritizedreplaybuffer method)": [[23, "torchrl.data.PrioritizedReplayBuffer.extend"]], "sample() (torchrl.data.prioritizedreplaybuffer method)": [[23, "torchrl.data.PrioritizedReplayBuffer.sample"]], "update_priority() (torchrl.data.prioritizedreplaybuffer method)": [[23, "torchrl.data.PrioritizedReplayBuffer.update_priority"]], "replaybuffer (class in torchrl.data)": [[24, "torchrl.data.ReplayBuffer"]], "add() (torchrl.data.replaybuffer method)": [[24, "torchrl.data.ReplayBuffer.add"]], "extend() (torchrl.data.replaybuffer method)": [[24, "torchrl.data.ReplayBuffer.extend"]], "sample() (torchrl.data.replaybuffer method)": [[24, "torchrl.data.ReplayBuffer.sample"]], "tensordictprioritizedreplaybuffer (class in torchrl.data)": [[25, "torchrl.data.TensorDictPrioritizedReplayBuffer"]], "add() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[25, "torchrl.data.TensorDictPrioritizedReplayBuffer.add"]], "extend() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[25, "torchrl.data.TensorDictPrioritizedReplayBuffer.extend"]], "sample() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[25, "torchrl.data.TensorDictPrioritizedReplayBuffer.sample"]], "update_priority() (torchrl.data.tensordictprioritizedreplaybuffer method)": [[25, "torchrl.data.TensorDictPrioritizedReplayBuffer.update_priority"]], "tensordictreplaybuffer (class in torchrl.data)": [[26, "torchrl.data.TensorDictReplayBuffer"]], "add() (torchrl.data.tensordictreplaybuffer method)": [[26, "torchrl.data.TensorDictReplayBuffer.add"]], "extend() (torchrl.data.tensordictreplaybuffer method)": [[26, "torchrl.data.TensorDictReplayBuffer.extend"]], "sample() (torchrl.data.tensordictreplaybuffer method)": [[26, "torchrl.data.TensorDictReplayBuffer.sample"]], "tensorspec (class in torchrl.data)": [[27, "torchrl.data.TensorSpec"]], "assert_is_in() (torchrl.data.tensorspec method)": [[27, "torchrl.data.TensorSpec.assert_is_in"]], "encode() (torchrl.data.tensorspec method)": [[27, "torchrl.data.TensorSpec.encode"]], "index() (torchrl.data.tensorspec method)": [[27, "torchrl.data.TensorSpec.index"]], "is_in() (torchrl.data.tensorspec method)": [[27, "torchrl.data.TensorSpec.is_in"]], "project() (torchrl.data.tensorspec method)": [[27, "torchrl.data.TensorSpec.project"]], "rand() (torchrl.data.tensorspec method)": [[27, "torchrl.data.TensorSpec.rand"]], "to_numpy() (torchrl.data.tensorspec method)": [[27, "torchrl.data.TensorSpec.to_numpy"]], "type_check() (torchrl.data.tensorspec method)": [[27, "torchrl.data.TensorSpec.type_check"]], "zero() (torchrl.data.tensorspec method)": [[27, "torchrl.data.TensorSpec.zero"]], "unboundedcontinuoustensorspec (class in torchrl.data)": [[28, "torchrl.data.UnboundedContinuousTensorSpec"]], "assert_is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[28, "torchrl.data.UnboundedContinuousTensorSpec.assert_is_in"]], "encode() (torchrl.data.unboundedcontinuoustensorspec method)": [[28, "torchrl.data.UnboundedContinuousTensorSpec.encode"]], "index() (torchrl.data.unboundedcontinuoustensorspec method)": [[28, "torchrl.data.UnboundedContinuousTensorSpec.index"]], "is_in() (torchrl.data.unboundedcontinuoustensorspec method)": [[28, "torchrl.data.UnboundedContinuousTensorSpec.is_in"]], "project() (torchrl.data.unboundedcontinuoustensorspec method)": [[28, "torchrl.data.UnboundedContinuousTensorSpec.project"]], "rand() (torchrl.data.unboundedcontinuoustensorspec method)": [[28, "torchrl.data.UnboundedContinuousTensorSpec.rand"]], "to_numpy() (torchrl.data.unboundedcontinuoustensorspec method)": [[28, "torchrl.data.UnboundedContinuousTensorSpec.to_numpy"]], "type_check() (torchrl.data.unboundedcontinuoustensorspec method)": [[28, "torchrl.data.UnboundedContinuousTensorSpec.type_check"]], "zero() (torchrl.data.unboundedcontinuoustensorspec method)": [[28, "torchrl.data.UnboundedContinuousTensorSpec.zero"]], "remotetensordictreplaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[29, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[29, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[29, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[29, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[29, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.replay_buffers.rb_prototype.remotetensordictreplaybuffer method)": [[29, "torchrl.data.replay_buffers.rb_prototype.RemoteTensorDictReplayBuffer.sample"]], "replaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[30, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.add"]], "append_transform() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.append_transform"]], "extend() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.extend"]], "insert_transform() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.insert_transform"]], "sample() (torchrl.data.replay_buffers.rb_prototype.replaybuffer method)": [[30, "torchrl.data.replay_buffers.rb_prototype.ReplayBuffer.sample"]], "tensordictreplaybuffer (class in torchrl.data.replay_buffers.rb_prototype)": [[31, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer"]], "add() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.add"]], "append_transform() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.append_transform"]], "extend() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.extend"]], "insert_transform() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.insert_transform"]], "sample() (torchrl.data.replay_buffers.rb_prototype.tensordictreplaybuffer method)": [[31, "torchrl.data.replay_buffers.rb_prototype.TensorDictReplayBuffer.sample"]], "prioritizedsampler (class in torchrl.data.replay_buffers.samplers)": [[32, "torchrl.data.replay_buffers.samplers.PrioritizedSampler"]], "update_priority() (torchrl.data.replay_buffers.samplers.prioritizedsampler method)": [[32, "torchrl.data.replay_buffers.samplers.PrioritizedSampler.update_priority"]], "randomsampler (class in torchrl.data.replay_buffers.samplers)": [[33, "torchrl.data.replay_buffers.samplers.RandomSampler"]], "sampler (class in torchrl.data.replay_buffers.samplers)": [[34, "torchrl.data.replay_buffers.samplers.Sampler"]], "lazymemmapstorage (class in torchrl.data.replay_buffers.storages)": [[35, "torchrl.data.replay_buffers.storages.LazyMemmapStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazymemmapstorage method)": [[35, "torchrl.data.replay_buffers.storages.LazyMemmapStorage.attach"]], "lazytensorstorage (class in torchrl.data.replay_buffers.storages)": [[36, "torchrl.data.replay_buffers.storages.LazyTensorStorage"]], "attach() (torchrl.data.replay_buffers.storages.lazytensorstorage method)": [[36, "torchrl.data.replay_buffers.storages.LazyTensorStorage.attach"]], "liststorage (class in torchrl.data.replay_buffers.storages)": [[37, "torchrl.data.replay_buffers.storages.ListStorage"]], "attach() (torchrl.data.replay_buffers.storages.liststorage method)": [[37, "torchrl.data.replay_buffers.storages.ListStorage.attach"]], "storage (class in torchrl.data.replay_buffers.storages)": [[38, "torchrl.data.replay_buffers.storages.Storage"]], "attach() (torchrl.data.replay_buffers.storages.storage method)": [[38, "torchrl.data.replay_buffers.storages.Storage.attach"]], "roundrobinwriter (class in torchrl.data.replay_buffers.writers)": [[39, "torchrl.data.replay_buffers.writers.RoundRobinWriter"]], "add() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[39, "torchrl.data.replay_buffers.writers.RoundRobinWriter.add"]], "extend() (torchrl.data.replay_buffers.writers.roundrobinwriter method)": [[39, "torchrl.data.replay_buffers.writers.RoundRobinWriter.extend"]], "writer (class in torchrl.data.replay_buffers.writers)": [[40, "torchrl.data.replay_buffers.writers.Writer"]], "add() (torchrl.data.replay_buffers.writers.writer method)": [[40, "torchrl.data.replay_buffers.writers.Writer.add"]], "extend() (torchrl.data.replay_buffers.writers.writer method)": [[40, "torchrl.data.replay_buffers.writers.Writer.extend"]], "envbase (class in torchrl.envs)": [[41, "torchrl.envs.EnvBase"]], "add_module() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.add_module"]], "apply() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.apply"]], "batch_locked (torchrl.envs.envbase property)": [[41, "torchrl.envs.EnvBase.batch_locked"]], "bfloat16() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.bfloat16"]], "buffers() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.buffers"]], "children() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.children"]], "cpu() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.cpu"]], "cuda() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.cuda"]], "double() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.double"]], "eval() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.eval"]], "extra_repr() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.extra_repr"]], "fake_tensordict() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.fake_tensordict"]], "float() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.float"]], "forward() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.forward"]], "get_buffer() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_buffer"]], "get_extra_state() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_extra_state"]], "get_parameter() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_parameter"]], "get_submodule() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.get_submodule"]], "half() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.half"]], "ipu() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.ipu"]], "load_state_dict() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.load_state_dict"]], "modules() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.modules"]], "named_buffers() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_buffers"]], "named_children() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_children"]], "named_modules() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_modules"]], "named_parameters() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.named_parameters"]], "parameters() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.parameters"]], "rand_step() (torchrl.envs.envbase method)": [[41, "id0"], [41, "torchrl.envs.EnvBase.rand_step"]], "register_backward_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_backward_hook"]], "register_buffer() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_buffer"]], "register_forward_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_module"]], "register_parameter() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.register_parameter"]], "requires_grad_() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.requires_grad_"]], "reset() (torchrl.envs.envbase method)": [[41, "id1"], [41, "torchrl.envs.EnvBase.reset"]], "rollout() (torchrl.envs.envbase method)": [[41, "id2"], [41, "torchrl.envs.EnvBase.rollout"]], "set_extra_state() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.set_extra_state"]], "set_seed() (torchrl.envs.envbase method)": [[41, "id3"], [41, "torchrl.envs.EnvBase.set_seed"]], "share_memory() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.share_memory"]], "specs (torchrl.envs.envbase property)": [[41, "torchrl.envs.EnvBase.specs"]], "state_dict() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.state_dict"]], "step() (torchrl.envs.envbase method)": [[41, "id4"], [41, "torchrl.envs.EnvBase.step"]], "to() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.to"]], "to_empty() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.to_empty"]], "train() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.train"]], "type() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.type"]], "xpu() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.xpu"]], "zero_grad() (torchrl.envs.envbase method)": [[41, "torchrl.envs.EnvBase.zero_grad"]], "gymlikeenv (class in torchrl.envs)": [[42, "torchrl.envs.GymLikeEnv"]], "add_module() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.add_module"]], "apply() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.apply"]], "batch_locked (torchrl.envs.gymlikeenv property)": [[42, "torchrl.envs.GymLikeEnv.batch_locked"]], "bfloat16() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.bfloat16"]], "buffers() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.buffers"]], "children() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.children"]], "close() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.close"]], "cpu() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.cpu"]], "cuda() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.cuda"]], "double() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.double"]], "eval() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.eval"]], "extra_repr() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.fake_tensordict"]], "float() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.float"]], "forward() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.forward"]], "get_buffer() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.get_buffer"]], "get_extra_state() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.get_extra_state"]], "get_parameter() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.get_parameter"]], "get_submodule() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.get_submodule"]], "half() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.half"]], "ipu() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.ipu"]], "load_state_dict() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.load_state_dict"]], "modules() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.modules"]], "named_buffers() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.named_buffers"]], "named_children() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.named_children"]], "named_modules() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.named_modules"]], "named_parameters() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.named_parameters"]], "parameters() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.parameters"]], "rand_step() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.rand_step"]], "read_action() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.read_action"]], "read_done() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.read_done"]], "read_obs() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.read_obs"]], "read_reward() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.read_reward"]], "register_backward_hook() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_module"]], "register_parameter() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.register_parameter"]], "requires_grad_() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.requires_grad_"]], "reset() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.reset"]], "rollout() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.rollout"]], "set_extra_state() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.set_extra_state"]], "set_info_dict_reader() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.set_info_dict_reader"]], "set_seed() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.set_seed"]], "share_memory() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.share_memory"]], "specs (torchrl.envs.gymlikeenv property)": [[42, "torchrl.envs.GymLikeEnv.specs"]], "state_dict() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.state_dict"]], "step() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.step"]], "to() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.to"]], "to_empty() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.to_empty"]], "train() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.train"]], "type() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.type"]], "xpu() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.xpu"]], "zero_grad() (torchrl.envs.gymlikeenv method)": [[42, "torchrl.envs.GymLikeEnv.zero_grad"]], "modelbasedenvbase() (in module torchrl.envs)": [[43, "torchrl.envs.ModelBasedEnvBase"]], "rand_step() (in module torchrl.envs)": [[43, "torchrl.envs.rand_step"]], "reset() (in module torchrl.envs)": [[43, "torchrl.envs.reset"]], "rollout() (in module torchrl.envs)": [[43, "torchrl.envs.rollout"]], "set_seed() (in module torchrl.envs)": [[43, "torchrl.envs.set_seed"]], "step() (in module torchrl.envs)": [[43, "torchrl.envs.step"]], "parallelenv (class in torchrl.envs)": [[44, "torchrl.envs.ParallelEnv"]], "add_module() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.add_module"]], "apply() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.apply"]], "batch_locked (torchrl.envs.parallelenv property)": [[44, "torchrl.envs.ParallelEnv.batch_locked"]], "bfloat16() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.bfloat16"]], "buffers() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.buffers"]], "children() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.children"]], "cpu() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.cpu"]], "cuda() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.cuda"]], "double() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.double"]], "eval() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.eval"]], "extra_repr() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.fake_tensordict"]], "float() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.float"]], "forward() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.forward"]], "get_buffer() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.get_buffer"]], "get_extra_state() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.get_extra_state"]], "get_parameter() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.get_parameter"]], "get_submodule() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.get_submodule"]], "half() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.half"]], "ipu() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.ipu"]], "load_state_dict() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.load_state_dict"]], "modules() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.modules"]], "named_buffers() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.named_buffers"]], "named_children() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.named_children"]], "named_modules() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.named_modules"]], "named_parameters() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.named_parameters"]], "parameters() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.parameters"]], "rand_step() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.rand_step"]], "register_backward_hook() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_module"]], "register_parameter() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.register_parameter"]], "requires_grad_() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.requires_grad_"]], "reset() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.reset"]], "rollout() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.rollout"]], "set_extra_state() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.set_extra_state"]], "set_seed() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.set_seed"]], "share_memory() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.share_memory"]], "specs (torchrl.envs.parallelenv property)": [[44, "torchrl.envs.ParallelEnv.specs"]], "state_dict() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.state_dict"]], "step() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.step"]], "to() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.to"]], "to_empty() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.to_empty"]], "train() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.train"]], "type() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.type"]], "update_kwargs() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.update_kwargs"]], "xpu() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.xpu"]], "zero_grad() (torchrl.envs.parallelenv method)": [[44, "torchrl.envs.ParallelEnv.zero_grad"]], "serialenv (class in torchrl.envs)": [[45, "torchrl.envs.SerialEnv"]], "add_module() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.add_module"]], "apply() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.apply"]], "batch_locked (torchrl.envs.serialenv property)": [[45, "torchrl.envs.SerialEnv.batch_locked"]], "bfloat16() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.bfloat16"]], "buffers() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.buffers"]], "children() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.children"]], "cpu() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.cpu"]], "cuda() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.cuda"]], "double() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.double"]], "eval() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.eval"]], "extra_repr() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.extra_repr"]], "fake_tensordict() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.fake_tensordict"]], "float() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.float"]], "forward() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.forward"]], "get_buffer() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.get_buffer"]], "get_extra_state() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.get_extra_state"]], "get_parameter() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.get_parameter"]], "get_submodule() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.get_submodule"]], "half() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.half"]], "ipu() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.ipu"]], "load_state_dict() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.load_state_dict"]], "modules() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.modules"]], "named_buffers() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.named_buffers"]], "named_children() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.named_children"]], "named_modules() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.named_modules"]], "named_parameters() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.named_parameters"]], "parameters() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.parameters"]], "rand_step() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.rand_step"]], "register_backward_hook() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_backward_hook"]], "register_buffer() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_buffer"]], "register_forward_hook() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_forward_hook"]], "register_forward_pre_hook() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_forward_pre_hook"]], "register_full_backward_hook() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_full_backward_hook"]], "register_load_state_dict_post_hook() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_load_state_dict_post_hook"]], "register_module() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_module"]], "register_parameter() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.register_parameter"]], "requires_grad_() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.requires_grad_"]], "reset() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.reset"]], "rollout() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.rollout"]], "set_extra_state() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.set_extra_state"]], "set_seed() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.set_seed"]], "share_memory() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.share_memory"]], "specs (torchrl.envs.serialenv property)": [[45, "torchrl.envs.SerialEnv.specs"]], "state_dict() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.state_dict"]], "step() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.step"]], "to() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.to"]], "to_empty() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.to_empty"]], "train() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.train"]], "type() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.type"]], "update_kwargs() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.update_kwargs"]], "xpu() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.xpu"]], "zero_grad() (torchrl.envs.serialenv method)": [[45, "torchrl.envs.SerialEnv.zero_grad"]], "dmcontrolenv() (in module torchrl.envs.libs.dm_control)": [[46, "torchrl.envs.libs.dm_control.DMControlEnv"]], "dmcontrolwrapper() (in module torchrl.envs.libs.dm_control)": [[47, "torchrl.envs.libs.dm_control.DMControlWrapper"]], "gymenv() (in module torchrl.envs.libs.gym)": [[48, "torchrl.envs.libs.gym.GymEnv"]], "gymwrapper() (in module torchrl.envs.libs.gym)": [[49, "torchrl.envs.libs.gym.GymWrapper"]], "habitatenv() (in module torchrl.envs.libs.habitat)": [[50, "torchrl.envs.libs.habitat.HabitatEnv"]], "jumanjienv() (in module torchrl.envs.libs.jumanji)": [[51, "torchrl.envs.libs.jumanji.JumanjiEnv"]], "jumanjiwrapper() (in module torchrl.envs.libs.jumanji)": [[52, "torchrl.envs.libs.jumanji.JumanjiWrapper"]], "dreamerenv() (in module torchrl.envs.model_based.dreamer)": [[53, "torchrl.envs.model_based.dreamer.DreamerEnv"]], "binarizereward (class in torchrl.envs.transforms)": [[54, "torchrl.envs.transforms.BinarizeReward"]], "transform_reward_spec() (torchrl.envs.transforms.binarizereward method)": [[54, "torchrl.envs.transforms.BinarizeReward.transform_reward_spec"]], "catframes (class in torchrl.envs.transforms)": [[55, "torchrl.envs.transforms.CatFrames"]], "reset() (torchrl.envs.transforms.catframes method)": [[55, "torchrl.envs.transforms.CatFrames.reset"]], "transform_observation_spec() (torchrl.envs.transforms.catframes method)": [[55, "torchrl.envs.transforms.CatFrames.transform_observation_spec"]], "cattensors (class in torchrl.envs.transforms)": [[56, "torchrl.envs.transforms.CatTensors"]], "transform_observation_spec() (torchrl.envs.transforms.cattensors method)": [[56, "torchrl.envs.transforms.CatTensors.transform_observation_spec"]], "centercrop (class in torchrl.envs.transforms)": [[57, "torchrl.envs.transforms.CenterCrop"]], "transform_observation_spec() (torchrl.envs.transforms.centercrop method)": [[57, "torchrl.envs.transforms.CenterCrop.transform_observation_spec"]], "compose (class in torchrl.envs.transforms)": [[58, "torchrl.envs.transforms.Compose"]], "forward() (torchrl.envs.transforms.compose method)": [[58, "torchrl.envs.transforms.Compose.forward"]], "reset() (torchrl.envs.transforms.compose method)": [[58, "torchrl.envs.transforms.Compose.reset"]], "to() (torchrl.envs.transforms.compose method)": [[58, "torchrl.envs.transforms.Compose.to"]], "transform_input_spec() (torchrl.envs.transforms.compose method)": [[58, "torchrl.envs.transforms.Compose.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.compose method)": [[58, "torchrl.envs.transforms.Compose.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.compose method)": [[58, "torchrl.envs.transforms.Compose.transform_reward_spec"]], "doubletofloat (class in torchrl.envs.transforms)": [[59, "torchrl.envs.transforms.DoubleToFloat"]], "transform_input_spec() (torchrl.envs.transforms.doubletofloat method)": [[59, "torchrl.envs.transforms.DoubleToFloat.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.doubletofloat method)": [[59, "torchrl.envs.transforms.DoubleToFloat.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.doubletofloat method)": [[59, "torchrl.envs.transforms.DoubleToFloat.transform_reward_spec"]], "finitetensordictcheck (class in torchrl.envs.transforms)": [[60, "torchrl.envs.transforms.FiniteTensorDictCheck"]], "flattenobservation (class in torchrl.envs.transforms)": [[61, "torchrl.envs.transforms.FlattenObservation"]], "transform_observation_spec() (torchrl.envs.transforms.flattenobservation method)": [[61, "torchrl.envs.transforms.FlattenObservation.transform_observation_spec"]], "frameskiptransform (class in torchrl.envs.transforms)": [[62, "torchrl.envs.transforms.FrameSkipTransform"]], "grayscale (class in torchrl.envs.transforms)": [[63, "torchrl.envs.transforms.GrayScale"]], "transform_observation_spec() (torchrl.envs.transforms.grayscale method)": [[63, "torchrl.envs.transforms.GrayScale.transform_observation_spec"]], "noopresetenv (class in torchrl.envs.transforms)": [[64, "torchrl.envs.transforms.NoopResetEnv"]], "reset() (torchrl.envs.transforms.noopresetenv method)": [[64, "torchrl.envs.transforms.NoopResetEnv.reset"]], "observationnorm (class in torchrl.envs.transforms)": [[65, "torchrl.envs.transforms.ObservationNorm"]], "init_stats() (torchrl.envs.transforms.observationnorm method)": [[65, "torchrl.envs.transforms.ObservationNorm.init_stats"]], "transform_observation_spec() (torchrl.envs.transforms.observationnorm method)": [[65, "torchrl.envs.transforms.ObservationNorm.transform_observation_spec"]], "observationtransform (class in torchrl.envs.transforms)": [[66, "torchrl.envs.transforms.ObservationTransform"]], "pinmemorytransform (class in torchrl.envs.transforms)": [[67, "torchrl.envs.transforms.PinMemoryTransform"]], "r3mtransform (class in torchrl.envs.transforms)": [[68, "torchrl.envs.transforms.R3MTransform"]], "forward() (torchrl.envs.transforms.r3mtransform method)": [[68, "torchrl.envs.transforms.R3MTransform.forward"]], "reset() (torchrl.envs.transforms.r3mtransform method)": [[68, "torchrl.envs.transforms.R3MTransform.reset"]], "to() (torchrl.envs.transforms.r3mtransform method)": [[68, "torchrl.envs.transforms.R3MTransform.to"]], "transform_input_spec() (torchrl.envs.transforms.r3mtransform method)": [[68, "torchrl.envs.transforms.R3MTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.r3mtransform method)": [[68, "torchrl.envs.transforms.R3MTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.r3mtransform method)": [[68, "torchrl.envs.transforms.R3MTransform.transform_reward_spec"]], "resize (class in torchrl.envs.transforms)": [[69, "torchrl.envs.transforms.Resize"]], "transform_observation_spec() (torchrl.envs.transforms.resize method)": [[69, "torchrl.envs.transforms.Resize.transform_observation_spec"]], "rewardclipping (class in torchrl.envs.transforms)": [[70, "torchrl.envs.transforms.RewardClipping"]], "transform_reward_spec() (torchrl.envs.transforms.rewardclipping method)": [[70, "torchrl.envs.transforms.RewardClipping.transform_reward_spec"]], "rewardscaling (class in torchrl.envs.transforms)": [[71, "torchrl.envs.transforms.RewardScaling"]], "transform_reward_spec() (torchrl.envs.transforms.rewardscaling method)": [[71, "torchrl.envs.transforms.RewardScaling.transform_reward_spec"]], "rewardsum (class in torchrl.envs.transforms)": [[72, "torchrl.envs.transforms.RewardSum"]], "reset() (torchrl.envs.transforms.rewardsum method)": [[72, "torchrl.envs.transforms.RewardSum.reset"]], "transform_observation_spec() (torchrl.envs.transforms.rewardsum method)": [[72, "torchrl.envs.transforms.RewardSum.transform_observation_spec"]], "squeezetransform (class in torchrl.envs.transforms)": [[73, "torchrl.envs.transforms.SqueezeTransform"]], "forward() (torchrl.envs.transforms.squeezetransform method)": [[73, "torchrl.envs.transforms.SqueezeTransform.forward"]], "stepcounter (class in torchrl.envs.transforms)": [[74, "torchrl.envs.transforms.StepCounter"]], "reset() (torchrl.envs.transforms.stepcounter method)": [[74, "torchrl.envs.transforms.StepCounter.reset"]], "transform_observation_spec() (torchrl.envs.transforms.stepcounter method)": [[74, "torchrl.envs.transforms.StepCounter.transform_observation_spec"]], "tensordictprimer (class in torchrl.envs.transforms)": [[75, "torchrl.envs.transforms.TensorDictPrimer"]], "reset() (torchrl.envs.transforms.tensordictprimer method)": [[75, "torchrl.envs.transforms.TensorDictPrimer.reset"]], "to() (torchrl.envs.transforms.tensordictprimer method)": [[75, "torchrl.envs.transforms.TensorDictPrimer.to"]], "transform_observation_spec() (torchrl.envs.transforms.tensordictprimer method)": [[75, "torchrl.envs.transforms.TensorDictPrimer.transform_observation_spec"]], "totensorimage (class in torchrl.envs.transforms)": [[76, "torchrl.envs.transforms.ToTensorImage"]], "transform_observation_spec() (torchrl.envs.transforms.totensorimage method)": [[76, "torchrl.envs.transforms.ToTensorImage.transform_observation_spec"]], "transform (class in torchrl.envs.transforms)": [[77, "torchrl.envs.transforms.Transform"]], "forward() (torchrl.envs.transforms.transform method)": [[77, "torchrl.envs.transforms.Transform.forward"]], "reset() (torchrl.envs.transforms.transform method)": [[77, "torchrl.envs.transforms.Transform.reset"]], "transform_input_spec() (torchrl.envs.transforms.transform method)": [[77, "torchrl.envs.transforms.Transform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.transform method)": [[77, "torchrl.envs.transforms.Transform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.transform method)": [[77, "torchrl.envs.transforms.Transform.transform_reward_spec"]], "transformedenv (class in torchrl.envs.transforms)": [[78, "torchrl.envs.transforms.TransformedEnv"]], "action_spec (torchrl.envs.transforms.transformedenv property)": [[78, "torchrl.envs.transforms.TransformedEnv.action_spec"]], "batch_locked (torchrl.envs.transforms.transformedenv property)": [[78, "torchrl.envs.transforms.TransformedEnv.batch_locked"]], "eval() (torchrl.envs.transforms.transformedenv method)": [[78, "torchrl.envs.transforms.TransformedEnv.eval"]], "input_spec (torchrl.envs.transforms.transformedenv property)": [[78, "torchrl.envs.transforms.TransformedEnv.input_spec"]], "load_state_dict() (torchrl.envs.transforms.transformedenv method)": [[78, "torchrl.envs.transforms.TransformedEnv.load_state_dict"]], "observation_spec (torchrl.envs.transforms.transformedenv property)": [[78, "torchrl.envs.transforms.TransformedEnv.observation_spec"]], "reward_spec (torchrl.envs.transforms.transformedenv property)": [[78, "torchrl.envs.transforms.TransformedEnv.reward_spec"]], "set_seed() (torchrl.envs.transforms.transformedenv method)": [[78, "torchrl.envs.transforms.TransformedEnv.set_seed"]], "state_dict() (torchrl.envs.transforms.transformedenv method)": [[78, "torchrl.envs.transforms.TransformedEnv.state_dict"]], "to() (torchrl.envs.transforms.transformedenv method)": [[78, "torchrl.envs.transforms.TransformedEnv.to"]], "train() (torchrl.envs.transforms.transformedenv method)": [[78, "torchrl.envs.transforms.TransformedEnv.train"]], "unsqueezetransform (class in torchrl.envs.transforms)": [[79, "torchrl.envs.transforms.UnsqueezeTransform"]], "forward() (torchrl.envs.transforms.unsqueezetransform method)": [[79, "torchrl.envs.transforms.UnsqueezeTransform.forward"]], "transform_input_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[79, "torchrl.envs.transforms.UnsqueezeTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[79, "torchrl.envs.transforms.UnsqueezeTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.unsqueezetransform method)": [[79, "torchrl.envs.transforms.UnsqueezeTransform.transform_reward_spec"]], "viprewardtransform (class in torchrl.envs.transforms)": [[80, "torchrl.envs.transforms.VIPRewardTransform"]], "forward() (torchrl.envs.transforms.viprewardtransform method)": [[80, "torchrl.envs.transforms.VIPRewardTransform.forward"]], "reset() (torchrl.envs.transforms.viprewardtransform method)": [[80, "torchrl.envs.transforms.VIPRewardTransform.reset"]], "viptransform (class in torchrl.envs.transforms)": [[81, "torchrl.envs.transforms.VIPTransform"]], "forward() (torchrl.envs.transforms.viptransform method)": [[81, "torchrl.envs.transforms.VIPTransform.forward"]], "reset() (torchrl.envs.transforms.viptransform method)": [[81, "torchrl.envs.transforms.VIPTransform.reset"]], "to() (torchrl.envs.transforms.viptransform method)": [[81, "torchrl.envs.transforms.VIPTransform.to"]], "transform_input_spec() (torchrl.envs.transforms.viptransform method)": [[81, "torchrl.envs.transforms.VIPTransform.transform_input_spec"]], "transform_observation_spec() (torchrl.envs.transforms.viptransform method)": [[81, "torchrl.envs.transforms.VIPTransform.transform_observation_spec"]], "transform_reward_spec() (torchrl.envs.transforms.viptransform method)": [[81, "torchrl.envs.transforms.VIPTransform.transform_reward_spec"]], "vecnorm (class in torchrl.envs.transforms)": [[82, "torchrl.envs.transforms.VecNorm"]], "build_td_for_shared_vecnorm() (torchrl.envs.transforms.vecnorm static method)": [[82, "torchrl.envs.transforms.VecNorm.build_td_for_shared_vecnorm"]], "get_extra_state() (torchrl.envs.transforms.vecnorm method)": [[82, "torchrl.envs.transforms.VecNorm.get_extra_state"]], "set_extra_state() (torchrl.envs.transforms.vecnorm method)": [[82, "torchrl.envs.transforms.VecNorm.set_extra_state"]], "to_observation_norm() (torchrl.envs.transforms.vecnorm method)": [[82, "torchrl.envs.transforms.VecNorm.to_observation_norm"]], "gsdenoise (class in torchrl.envs.transforms)": [[83, "torchrl.envs.transforms.gSDENoise"]], "reset() (torchrl.envs.transforms.gsdenoise method)": [[83, "torchrl.envs.transforms.gSDENoise.reset"]], "check_env_specs() (in module torchrl.envs.utils)": [[84, "torchrl.envs.utils.check_env_specs"]], "exploration_mode() (in module torchrl.envs.utils)": [[85, "torchrl.envs.utils.exploration_mode"]], "get_available_libraries() (in module torchrl.envs.utils)": [[86, "torchrl.envs.utils.get_available_libraries"]], "set_exploration_mode() (in module torchrl.envs.utils)": [[87, "torchrl.envs.utils.set_exploration_mode"]], "step_mdp() (in module torchrl.envs.utils)": [[88, "torchrl.envs.utils.step_mdp"]], "actor (class in torchrl.modules)": [[89, "torchrl.modules.Actor"]], "actorcriticoperator (class in torchrl.modules)": [[90, "torchrl.modules.ActorCriticOperator"]], "get_critic_operator() (torchrl.modules.actorcriticoperator method)": [[90, "torchrl.modules.ActorCriticOperator.get_critic_operator"]], "get_value_operator() (torchrl.modules.actorcriticoperator method)": [[90, "torchrl.modules.ActorCriticOperator.get_value_operator"]], "actorcriticwrapper (class in torchrl.modules)": [[91, "torchrl.modules.ActorCriticWrapper"]], "get_policy_operator() (torchrl.modules.actorcriticwrapper method)": [[91, "torchrl.modules.ActorCriticWrapper.get_policy_operator"]], "get_value_operator() (torchrl.modules.actorcriticwrapper method)": [[91, "torchrl.modules.ActorCriticWrapper.get_value_operator"]], "actorvalueoperator (class in torchrl.modules)": [[92, "torchrl.modules.ActorValueOperator"]], "get_policy_operator() (torchrl.modules.actorvalueoperator method)": [[92, "torchrl.modules.ActorValueOperator.get_policy_operator"]], "get_value_operator() (torchrl.modules.actorvalueoperator method)": [[92, "torchrl.modules.ActorValueOperator.get_value_operator"]], "cemplanner (class in torchrl.modules)": [[93, "torchrl.modules.CEMPlanner"]], "planning() (torchrl.modules.cemplanner method)": [[93, "torchrl.modules.CEMPlanner.planning"]], "convnet (class in torchrl.modules)": [[94, "torchrl.modules.ConvNet"]], "forward() (torchrl.modules.convnet method)": [[94, "torchrl.modules.ConvNet.forward"]], "ddpgcnnactor (class in torchrl.modules)": [[95, "torchrl.modules.DdpgCnnActor"]], "forward() (torchrl.modules.ddpgcnnactor method)": [[95, "torchrl.modules.DdpgCnnActor.forward"]], "ddpgcnnqnet (class in torchrl.modules)": [[96, "torchrl.modules.DdpgCnnQNet"]], "forward() (torchrl.modules.ddpgcnnqnet method)": [[96, "torchrl.modules.DdpgCnnQNet.forward"]], "ddpgmlpactor (class in torchrl.modules)": [[97, "torchrl.modules.DdpgMlpActor"]], "forward() (torchrl.modules.ddpgmlpactor method)": [[97, "torchrl.modules.DdpgMlpActor.forward"]], "ddpgmlpqnet (class in torchrl.modules)": [[98, "torchrl.modules.DdpgMlpQNet"]], "forward() (torchrl.modules.ddpgmlpqnet method)": [[98, "torchrl.modules.DdpgMlpQNet.forward"]], "delta (class in torchrl.modules)": [[99, "torchrl.modules.Delta"]], "log_prob() (torchrl.modules.delta method)": [[99, "torchrl.modules.Delta.log_prob"]], "mean (torchrl.modules.delta property)": [[99, "torchrl.modules.Delta.mean"]], "mode (torchrl.modules.delta property)": [[99, "torchrl.modules.Delta.mode"]], "rsample() (torchrl.modules.delta method)": [[99, "torchrl.modules.Delta.rsample"]], "sample() (torchrl.modules.delta method)": [[99, "torchrl.modules.Delta.sample"]], "distributionaldqnnet (class in torchrl.modules)": [[100, "torchrl.modules.DistributionalDQNnet"]], "forward() (torchrl.modules.distributionaldqnnet method)": [[100, "torchrl.modules.DistributionalDQNnet.forward"]], "distributionalqvalueactor (class in torchrl.modules)": [[101, "torchrl.modules.DistributionalQValueActor"]], "dreameractor (class in torchrl.modules)": [[102, "torchrl.modules.DreamerActor"]], "forward() (torchrl.modules.dreameractor method)": [[102, "torchrl.modules.DreamerActor.forward"]], "duelingcnndqnet (class in torchrl.modules)": [[103, "torchrl.modules.DuelingCnnDQNet"]], "forward() (torchrl.modules.duelingcnndqnet method)": [[103, "torchrl.modules.DuelingCnnDQNet.forward"]], "lstmnet (class in torchrl.modules)": [[104, "torchrl.modules.LSTMNet"]], "forward() (torchrl.modules.lstmnet method)": [[104, "torchrl.modules.LSTMNet.forward"]], "mlp (class in torchrl.modules)": [[105, "torchrl.modules.MLP"]], "forward() (torchrl.modules.mlp method)": [[105, "torchrl.modules.MLP.forward"]], "mpcplannerbase (class in torchrl.modules)": [[106, "torchrl.modules.MPCPlannerBase"]], "forward() (torchrl.modules.mpcplannerbase method)": [[106, "torchrl.modules.MPCPlannerBase.forward"]], "planning() (torchrl.modules.mpcplannerbase method)": [[106, "torchrl.modules.MPCPlannerBase.planning"]], "noisylazylinear (class in torchrl.modules)": [[107, "torchrl.modules.NoisyLazyLinear"]], "initialize_parameters() (torchrl.modules.noisylazylinear method)": [[107, "torchrl.modules.NoisyLazyLinear.initialize_parameters"]], "noisylinear (class in torchrl.modules)": [[108, "torchrl.modules.NoisyLinear"]], "obsdecoder (class in torchrl.modules)": [[109, "torchrl.modules.ObsDecoder"]], "forward() (torchrl.modules.obsdecoder method)": [[109, "torchrl.modules.ObsDecoder.forward"]], "obsencoder (class in torchrl.modules)": [[110, "torchrl.modules.ObsEncoder"]], "forward() (torchrl.modules.obsencoder method)": [[110, "torchrl.modules.ObsEncoder.forward"]], "onehotcategorical (class in torchrl.modules)": [[111, "torchrl.modules.OneHotCategorical"]], "log_prob() (torchrl.modules.onehotcategorical method)": [[111, "torchrl.modules.OneHotCategorical.log_prob"]], "mode (torchrl.modules.onehotcategorical property)": [[111, "torchrl.modules.OneHotCategorical.mode"]], "rsample() (torchrl.modules.onehotcategorical method)": [[111, "torchrl.modules.OneHotCategorical.rsample"]], "sample() (torchrl.modules.onehotcategorical method)": [[111, "torchrl.modules.OneHotCategorical.sample"]], "probabilisticactor (class in torchrl.modules)": [[112, "torchrl.modules.ProbabilisticActor"]], "qvalueactor (class in torchrl.modules)": [[113, "torchrl.modules.QValueActor"]], "rssmposterior (class in torchrl.modules)": [[114, "torchrl.modules.RSSMPosterior"]], "forward() (torchrl.modules.rssmposterior method)": [[114, "torchrl.modules.RSSMPosterior.forward"]], "rssmprior (class in torchrl.modules)": [[115, "torchrl.modules.RSSMPrior"]], "forward() (torchrl.modules.rssmprior method)": [[115, "torchrl.modules.RSSMPrior.forward"]], "safemodule (class in torchrl.modules)": [[116, "torchrl.modules.SafeModule"]], "random() (torchrl.modules.safemodule method)": [[116, "torchrl.modules.SafeModule.random"]], "random_sample() (torchrl.modules.safemodule method)": [[116, "torchrl.modules.SafeModule.random_sample"]], "to() (torchrl.modules.safemodule method)": [[116, "torchrl.modules.SafeModule.to"]], "safeprobabilisticmodule (class in torchrl.modules)": [[117, "torchrl.modules.SafeProbabilisticModule"]], "random() (torchrl.modules.safeprobabilisticmodule method)": [[117, "torchrl.modules.SafeProbabilisticModule.random"]], "random_sample() (torchrl.modules.safeprobabilisticmodule method)": [[117, "torchrl.modules.SafeProbabilisticModule.random_sample"]], "safeprobabilisticsequential (class in torchrl.modules)": [[118, "torchrl.modules.SafeProbabilisticSequential"]], "safesequential (class in torchrl.modules)": [[119, "torchrl.modules.SafeSequential"]], "tanhdelta (class in torchrl.modules)": [[120, "torchrl.modules.TanhDelta"]], "mean (torchrl.modules.tanhdelta property)": [[120, "torchrl.modules.TanhDelta.mean"]], "mode (torchrl.modules.tanhdelta property)": [[120, "torchrl.modules.TanhDelta.mode"]], "tanhnormal (class in torchrl.modules)": [[121, "torchrl.modules.TanhNormal"]], "mode (torchrl.modules.tanhnormal property)": [[121, "torchrl.modules.TanhNormal.mode"]], "truncatednormal (class in torchrl.modules)": [[122, "torchrl.modules.TruncatedNormal"]], "log_prob() (torchrl.modules.truncatednormal method)": [[122, "torchrl.modules.TruncatedNormal.log_prob"]], "mode (torchrl.modules.truncatednormal property)": [[122, "torchrl.modules.TruncatedNormal.mode"]], "valueoperator (class in torchrl.modules)": [[123, "torchrl.modules.ValueOperator"]], "reset_noise (class in torchrl.modules)": [[124, "torchrl.modules.reset_noise"]], "distributionalqvaluehook (class in torchrl.modules.tensordict_module.actors)": [[125, "torchrl.modules.tensordict_module.actors.DistributionalQValueHook"]], "qvaluehook (class in torchrl.modules.tensordict_module.actors)": [[126, "torchrl.modules.tensordict_module.actors.QValueHook"]], "ensure_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[127, "torchrl.modules.tensordict_module.common.ensure_tensordict_compatible"]], "is_tensordict_compatible (class in torchrl.modules.tensordict_module.common)": [[128, "torchrl.modules.tensordict_module.common.is_tensordict_compatible"]], "biased_softplus (class in torchrl.modules.utils)": [[129, "torchrl.modules.utils.biased_softplus"]], "forward() (torchrl.modules.utils.biased_softplus method)": [[129, "torchrl.modules.utils.biased_softplus.forward"]], "inv_softplus (class in torchrl.modules.utils)": [[130, "torchrl.modules.utils.inv_softplus"]], "mappings (class in torchrl.modules.utils)": [[131, "torchrl.modules.utils.mappings"]], "a2closs (class in torchrl.objectives)": [[132, "torchrl.objectives.A2CLoss"]], "forward() (torchrl.objectives.a2closs method)": [[132, "torchrl.objectives.A2CLoss.forward"]], "clipppoloss (class in torchrl.objectives)": [[133, "torchrl.objectives.ClipPPOLoss"]], "forward() (torchrl.objectives.clipppoloss method)": [[133, "torchrl.objectives.ClipPPOLoss.forward"]], "ddpgloss (class in torchrl.objectives)": [[134, "torchrl.objectives.DDPGLoss"]], "forward() (torchrl.objectives.ddpgloss method)": [[134, "torchrl.objectives.DDPGLoss.forward"]], "dqnloss (class in torchrl.objectives)": [[135, "torchrl.objectives.DQNLoss"]], "forward() (torchrl.objectives.dqnloss method)": [[135, "torchrl.objectives.DQNLoss.forward"]], "distributionaldqnloss (class in torchrl.objectives)": [[136, "torchrl.objectives.DistributionalDQNLoss"]], "forward() (torchrl.objectives.distributionaldqnloss method)": [[136, "torchrl.objectives.DistributionalDQNLoss.forward"]], "hardupdate (class in torchrl.objectives)": [[137, "torchrl.objectives.HardUpdate"]], "klpenppoloss (class in torchrl.objectives)": [[138, "torchrl.objectives.KLPENPPOLoss"]], "forward() (torchrl.objectives.klpenppoloss method)": [[138, "torchrl.objectives.KLPENPPOLoss.forward"]], "ppoloss (class in torchrl.objectives)": [[139, "torchrl.objectives.PPOLoss"]], "forward() (torchrl.objectives.ppoloss method)": [[139, "torchrl.objectives.PPOLoss.forward"]], "redqloss (class in torchrl.objectives)": [[140, "torchrl.objectives.REDQLoss"]], "forward() (torchrl.objectives.redqloss method)": [[140, "torchrl.objectives.REDQLoss.forward"]], "sacloss (class in torchrl.objectives)": [[141, "torchrl.objectives.SACLoss"]], "forward() (torchrl.objectives.sacloss method)": [[141, "torchrl.objectives.SACLoss.forward"]], "softupdate (class in torchrl.objectives)": [[142, "torchrl.objectives.SoftUpdate"]], "distance_loss (class in torchrl.objectives)": [[143, "torchrl.objectives.distance_loss"]], "hold_out_net (class in torchrl.objectives)": [[144, "torchrl.objectives.hold_out_net"]], "hold_out_params (class in torchrl.objectives)": [[145, "torchrl.objectives.hold_out_params"]], "next_state_value (class in torchrl.objectives)": [[146, "torchrl.objectives.next_state_value"]], "gae (class in torchrl.objectives.value)": [[147, "torchrl.objectives.value.GAE"]], "forward() (torchrl.objectives.value.gae method)": [[147, "torchrl.objectives.value.GAE.forward"]], "tdestimate (class in torchrl.objectives.value)": [[148, "torchrl.objectives.value.TDEstimate"]], "forward() (torchrl.objectives.value.tdestimate method)": [[148, "torchrl.objectives.value.TDEstimate.forward"]], "tdlambdaestimate (class in torchrl.objectives.value)": [[149, "torchrl.objectives.value.TDLambdaEstimate"]], "forward() (torchrl.objectives.value.tdlambdaestimate method)": [[149, "torchrl.objectives.value.TDLambdaEstimate.forward"]], "generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[150, "torchrl.objectives.value.functional.generalized_advantage_estimate"]], "td_advantage_estimate (class in torchrl.objectives.value.functional)": [[151, "torchrl.objectives.value.functional.td_advantage_estimate"]], "td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[152, "torchrl.objectives.value.functional.td_lambda_advantage_estimate"]], "td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[153, "torchrl.objectives.value.functional.td_lambda_return_estimate"]], "vec_generalized_advantage_estimate (class in torchrl.objectives.value.functional)": [[154, "torchrl.objectives.value.functional.vec_generalized_advantage_estimate"]], "vec_td_lambda_advantage_estimate (class in torchrl.objectives.value.functional)": [[155, "torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate"]], "vec_td_lambda_return_estimate (class in torchrl.objectives.value.functional)": [[156, "torchrl.objectives.value.functional.vec_td_lambda_return_estimate"]], "batchsubsampler (class in torchrl.trainers)": [[157, "torchrl.trainers.BatchSubSampler"]], "clearcudacache (class in torchrl.trainers)": [[158, "torchrl.trainers.ClearCudaCache"]], "countframeslog (class in torchrl.trainers)": [[159, "torchrl.trainers.CountFramesLog"]], "logreward (class in torchrl.trainers)": [[160, "torchrl.trainers.LogReward"]], "optimizerhook (class in torchrl.trainers)": [[161, "torchrl.trainers.OptimizerHook"]], "recorder (class in torchrl.trainers)": [[162, "torchrl.trainers.Recorder"]], "replaybuffer (class in torchrl.trainers)": [[163, "torchrl.trainers.ReplayBuffer"]], "add() (torchrl.trainers.replaybuffer method)": [[163, "torchrl.trainers.ReplayBuffer.add"]], "extend() (torchrl.trainers.replaybuffer method)": [[163, "torchrl.trainers.ReplayBuffer.extend"]], "sample() (torchrl.trainers.replaybuffer method)": [[163, "torchrl.trainers.ReplayBuffer.sample"]], "rewardnormalizer (class in torchrl.trainers)": [[164, "torchrl.trainers.RewardNormalizer"]], "selectkeys (class in torchrl.trainers)": [[165, "torchrl.trainers.SelectKeys"]], "trainer (class in torchrl.trainers)": [[166, "torchrl.trainers.Trainer"]], "updateweights (class in torchrl.trainers)": [[167, "torchrl.trainers.UpdateWeights"]], "correct_for_frame_skip() (in module torchrl.trainers.helpers)": [[168, "torchrl.trainers.helpers.correct_for_frame_skip"]], "get_stats_random_rollout() (in module torchrl.trainers.helpers)": [[169, "torchrl.trainers.helpers.get_stats_random_rollout"]], "make_a2c_loss() (in module torchrl.trainers.helpers)": [[170, "torchrl.trainers.helpers.make_a2c_loss"]], "make_a2c_model() (in module torchrl.trainers.helpers)": [[171, "torchrl.trainers.helpers.make_a2c_model"]], "make_collector_offpolicy() (in module torchrl.trainers.helpers)": [[172, "torchrl.trainers.helpers.make_collector_offpolicy"]], "make_collector_onpolicy() (in module torchrl.trainers.helpers)": [[173, "torchrl.trainers.helpers.make_collector_onpolicy"]], "make_ddpg_actor() (in module torchrl.trainers.helpers)": [[174, "torchrl.trainers.helpers.make_ddpg_actor"]], "make_ddpg_loss() (in module torchrl.trainers.helpers)": [[175, "torchrl.trainers.helpers.make_ddpg_loss"]], "make_dqn_actor() (in module torchrl.trainers.helpers)": [[176, "torchrl.trainers.helpers.make_dqn_actor"]], "make_dqn_loss() (in module torchrl.trainers.helpers)": [[177, "torchrl.trainers.helpers.make_dqn_loss"]], "make_ppo_loss() (in module torchrl.trainers.helpers)": [[178, "torchrl.trainers.helpers.make_ppo_loss"]], "make_ppo_model() (in module torchrl.trainers.helpers)": [[179, "torchrl.trainers.helpers.make_ppo_model"]], "make_redq_loss() (in module torchrl.trainers.helpers)": [[180, "torchrl.trainers.helpers.make_redq_loss"]], "make_redq_model() (in module torchrl.trainers.helpers)": [[181, "torchrl.trainers.helpers.make_redq_model"]], "make_replay_buffer() (in module torchrl.trainers.helpers)": [[182, "torchrl.trainers.helpers.make_replay_buffer"]], "make_sac_loss() (in module torchrl.trainers.helpers)": [[183, "torchrl.trainers.helpers.make_sac_loss"]], "make_sac_model() (in module torchrl.trainers.helpers)": [[184, "torchrl.trainers.helpers.make_sac_model"]], "make_target_updater() (in module torchrl.trainers.helpers)": [[185, "torchrl.trainers.helpers.make_target_updater"]], "make_trainer() (in module torchrl.trainers.helpers)": [[186, "torchrl.trainers.helpers.make_trainer"]], "parallel_env_constructor() (in module torchrl.trainers.helpers)": [[187, "torchrl.trainers.helpers.parallel_env_constructor"]], "sync_async_collector() (in module torchrl.trainers.helpers)": [[188, "torchrl.trainers.helpers.sync_async_collector"]], "sync_sync_collector() (in module torchrl.trainers.helpers)": [[189, "torchrl.trainers.helpers.sync_sync_collector"]], "transformed_env_constructor() (in module torchrl.trainers.helpers)": [[190, "torchrl.trainers.helpers.transformed_env_constructor"]]}})